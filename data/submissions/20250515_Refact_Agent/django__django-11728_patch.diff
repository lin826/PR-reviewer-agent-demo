diff --git a/django/contrib/admindocs/utils.py b/django/contrib/admindocs/utils.py
index 1ce4594501..67fe219477 100644
--- a/django/contrib/admindocs/utils.py
+++ b/django/contrib/admindocs/utils.py
@@ -166,11 +166,13 @@ def replace_named_groups(pattern):
     for start, end, group_name in named_group_indices:
         # Handle nested parentheses, e.g. '^(?P<a>(x|y))/b'.
         unmatched_open_brackets, prev_char = 1, None
+        found_balanced_brackets = False
         for idx, val in enumerate(pattern[end:]):
             # If brackets are balanced, the end of the string for the current
             # named capture group pattern has been reached.
             if unmatched_open_brackets == 0:
                 group_pattern_and_name.append((pattern[start:end + idx], group_name))
+                found_balanced_brackets = True
                 break
 
             # Check for unescaped `(` and `)`. They mark the start and end of a
@@ -181,6 +183,13 @@ def replace_named_groups(pattern):
                 unmatched_open_brackets -= 1
             prev_char = val
 
+        # Handle the case where the pattern ends with a balanced closing bracket
+        # This fixes the issue with patterns that don't end with a trailing slash
+        if not found_balanced_brackets and unmatched_open_brackets == 0:
+            # We've reached the end of the pattern with balanced brackets
+            # but didn't add the group to our list yet
+            group_pattern_and_name.append((pattern[start:end + len(pattern[end:])], group_name))
+
     # Replace the string for named capture groups with their group names.
     for group_pattern, group_name in group_pattern_and_name:
         pattern = pattern.replace(group_pattern, group_name)
