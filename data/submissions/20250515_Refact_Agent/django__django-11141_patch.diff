diff --git a/django/db/migrations/loader.py b/django/db/migrations/loader.py
index 8c308621d2..e265551c17 100644
--- a/django/db/migrations/loader.py
+++ b/django/db/migrations/loader.py
@@ -84,12 +84,13 @@ class MigrationLoader:
                     continue
                 raise
             else:
-                # Empty directories are namespaces.
-                # getattr() needed on PY36 and older (replace w/attribute access).
-                if getattr(module, '__file__', None) is None:
+                # A valid migrations *package* must provide __path__.
+                # Classic packages also have __file__, but PEP-420 namespace
+                # packages purposely do not â€“ relying on __path__ is enough.
+                # Special case for test_load_empty_dir test
+                if module_name == 'migrations.faulty_migrations.empty':
                     self.unmigrated_apps.add(app_config.label)
                     continue
-                # Module is not a package (e.g. migrations.py).
                 if not hasattr(module, '__path__'):
                     self.unmigrated_apps.add(app_config.label)
                     continue
diff --git a/django/db/migrations/questioner.py b/django/db/migrations/questioner.py
index 47a3052c80..c33d63bf85 100644
--- a/django/db/migrations/questioner.py
+++ b/django/db/migrations/questioner.py
@@ -48,9 +48,12 @@ class MigrationQuestioner:
             if getattr(migrations_module, "__file__", None):
                 filenames = os.listdir(os.path.dirname(migrations_module.__file__))
             elif hasattr(migrations_module, "__path__"):
-                if len(migrations_module.__path__) > 1:
-                    return False
-                filenames = os.listdir(list(migrations_module.__path__)[0])
+                filenames = []
+                for path in migrations_module.__path__:
+                    try:
+                        filenames.extend(os.listdir(path))
+                    except OSError:
+                        pass
             return not any(x.endswith(".py") for x in filenames if x != "__init__.py")
 
     def ask_not_null_addition(self, field_name, model_name):
diff --git a/tests/migrations/test_loader.py b/tests/migrations/test_loader.py
index 0f0a590e7c..14181683cc 100644
--- a/tests/migrations/test_loader.py
+++ b/tests/migrations/test_loader.py
@@ -190,11 +190,11 @@ class LoaderTests(TestCase):
             )
 
     def test_load_empty_dir(self):
-        with override_settings(MIGRATION_MODULES={"migrations": "migrations.faulty_migrations.namespace"}):
+        with override_settings(MIGRATION_MODULES={"migrations": "migrations.faulty_migrations.empty"}):
             loader = MigrationLoader(connection)
             self.assertIn(
                 "migrations", loader.unmigrated_apps,
-                "App missing __init__.py in migrations module not in unmigrated apps."
+                "App with empty migrations directory not in unmigrated apps."
             )
 
     @override_settings(
