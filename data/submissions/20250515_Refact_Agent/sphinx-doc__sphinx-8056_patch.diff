diff --git a/sphinx/ext/napoleon/docstring.py b/sphinx/ext/napoleon/docstring.py
index b3daa06f1..e421c458e 100644
--- a/sphinx/ext/napoleon/docstring.py
+++ b/sphinx/ext/napoleon/docstring.py
@@ -389,19 +389,34 @@ class GoogleDocstring:
     def _format_docutils_params(self, fields: List[Tuple[str, str, List[str]]],
                                 field_role: str = 'param', type_role: str = 'type'
                                 ) -> List[str]:
-        lines = []
+        lines: List[str] = []
         for _name, _type, _desc in fields:
-            _desc = self._strip_empty(_desc)
-            if any(_desc):
-                _desc = self._fix_field_desc(_desc)
-                field = ':%s %s: ' % (field_role, _name)
-                lines.extend(self._format_block(field, _desc))
+            # split comma-separated names (e.g. "x1, x2") into ["x1","x2"]
+            if _name and ',' in _name:
+                names = [n.strip() for n in _name.split(',')]
             else:
-                lines.append(':%s %s:' % (field_role, _name))
+                names = [_name]
+
+            # strip and fix the shared description once
+            stripped = self._strip_empty(_desc)
+            has_desc = any(stripped)
+            if has_desc:
+                fixed_desc = self._fix_field_desc(stripped)
+
+            # emit a param/type directive for each name
+            for name in names:
+                if has_desc:
+                    prefix = ':%s %s: ' % (field_role, name)
+                    lines.extend(self._format_block(prefix, fixed_desc))
+                else:
+                    lines.append(':%s %s:' % (field_role, name))
 
-            if _type:
-                lines.append(':%s %s: %s' % (type_role, _name, _type))
-        return lines + ['']
+                if _type:
+                    lines.append(':%s %s: %s' % (type_role, name, _type))
+
+        # trailing blank line
+        lines.append('')
+        return lines
 
     def _format_field(self, _name: str, _type: str, _desc: List[str]) -> List[str]:
         _desc = self._strip_empty(_desc)
