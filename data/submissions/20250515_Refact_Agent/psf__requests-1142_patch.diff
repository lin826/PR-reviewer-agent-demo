diff --git a/requests/models.py b/requests/models.py
index 99260453..df71aa58 100644
--- a/requests/models.py
+++ b/requests/models.py
@@ -386,13 +386,34 @@ class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):
         self.body = body
 
     def prepare_content_length(self, body):
-        self.headers['Content-Length'] = '0'
+        """
+        Set ``Content-Length`` only when RFC 2616 requires it.
+
+        * Methods that never have bodies (GET / HEAD) â€“ omit it completely
+          unless the caller *explicitly* supplied a body.
+        * For the remaining methods, include the real length when a body
+          exists or leave the header absent if body is ``None``.
+        """
+
+        # Nothing to do if the request definitely has no body.
+        if body is None and self.method in ('GET', 'HEAD'):
+            # Make sure we don't propagate an old value that user might have
+            # supplied in ``headers``.
+            self.headers.pop('Content-Length', None)
+            return
+
+        # --------------------------- length present --------------------------
         if hasattr(body, 'seek') and hasattr(body, 'tell'):
-            body.seek(0, 2)
-            self.headers['Content-Length'] = str(body.tell())
-            body.seek(0, 0)
+            pos = body.tell()
+            body.seek(0, 2)                         # to end
+            length = body.tell()
+            body.seek(pos, 0)                       # restore cursor
+            self.headers['Content-Length'] = str(length)
         elif body is not None:
             self.headers['Content-Length'] = str(len(body))
+        # body is None but method allows an empty body (e.g. POST with no data)
+        elif self.method not in ('GET', 'HEAD'):
+            self.headers['Content-Length'] = '0'
 
     def prepare_auth(self, auth):
         """Prepares the given HTTP auth data."""
