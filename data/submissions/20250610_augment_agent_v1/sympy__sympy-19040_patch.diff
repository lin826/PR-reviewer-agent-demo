diff --git a/sympy/polys/sqfreetools.py b/sympy/polys/sqfreetools.py
index 1783a7744a..820b2fca9d 100644
--- a/sympy/polys/sqfreetools.py
+++ b/sympy/polys/sqfreetools.py
@@ -250,11 +250,23 @@ def dmp_sqf_part(f, u, K):
         return f
 
     if K.is_negative(dmp_ground_LC(f, u, K)):
         f = dmp_neg(f, u, K)
 
-    gcd = dmp_gcd(f, dmp_diff(f, 1, u, K), u, K)
+    # For multivariate polynomials, we need to consider all partial derivatives
+    # to properly compute the square-free part
+    if u == 0:
+        # Univariate case - use the standard algorithm
+        gcd = dmp_gcd(f, dmp_diff(f, 1, u, K), u, K)
+    else:
+        # Multivariate case - compute GCD with all partial derivatives
+        from sympy.polys.densetools import dmp_diff_in
+        gcd = f
+        for i in range(u + 1):
+            partial_deriv = dmp_diff_in(f, 1, i, u, K)
+            gcd = dmp_gcd(gcd, partial_deriv, u, K)
+    
     sqf = dmp_quo(f, gcd, u, K)
 
     if K.is_Field:
         return dmp_ground_monic(sqf, u, K)
     else:
