diff --git a/lib/matplotlib/axis.py b/lib/matplotlib/axis.py
index c0e706e2b3..20f28254e4 100644
--- a/lib/matplotlib/axis.py
+++ b/lib/matplotlib/axis.py
@@ -2247,17 +2247,22 @@ class XAxis(Axis):
             transform=mtransforms.blended_transform_factory(
                 self.axes.transAxes, mtransforms.IdentityTransform()),
         )
         self.label_position = 'bottom'
 
+        # Determine the color for offset text, respecting labelcolor setting
+        offset_color = mpl.rcParams['xtick.labelcolor']
+        if offset_color == 'inherit':
+            offset_color = mpl.rcParams['xtick.color']
+        
         self.offsetText.set(
             x=1, y=0,
             verticalalignment='top', horizontalalignment='right',
             transform=mtransforms.blended_transform_factory(
                 self.axes.transAxes, mtransforms.IdentityTransform()),
             fontsize=mpl.rcParams['xtick.labelsize'],
-            color=mpl.rcParams['xtick.color'],
+            color=offset_color,
         )
         self.offset_text_position = 'bottom'
 
     def contains(self, mouseevent):
         """Test whether the mouse event occurred in the x-axis."""
@@ -2506,18 +2511,24 @@ class YAxis(Axis):
             rotation='vertical', rotation_mode='anchor',
             transform=mtransforms.blended_transform_factory(
                 mtransforms.IdentityTransform(), self.axes.transAxes),
         )
         self.label_position = 'left'
+        
+        # Determine the color for offset text, respecting labelcolor setting
+        offset_color = mpl.rcParams['ytick.labelcolor']
+        if offset_color == 'inherit':
+            offset_color = mpl.rcParams['ytick.color']
+        
         # x in axes coords, y in display coords(!).
         self.offsetText.set(
             x=0, y=0.5,
             verticalalignment='baseline', horizontalalignment='left',
             transform=mtransforms.blended_transform_factory(
                 self.axes.transAxes, mtransforms.IdentityTransform()),
             fontsize=mpl.rcParams['ytick.labelsize'],
-            color=mpl.rcParams['ytick.color'],
+            color=offset_color,
         )
         self.offset_text_position = 'left'
 
     def contains(self, mouseevent):
         # docstring inherited
