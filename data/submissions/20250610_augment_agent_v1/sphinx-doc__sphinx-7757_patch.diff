diff --git b/sphinx/util/inspect.py a/sphinx/util/inspect.py
index 99b9c5f1d..15f0d66e2 100644
--- b/sphinx/util/inspect.py
+++ a/sphinx/util/inspect.py
@@ -519,58 +519,20 @@ def signature_from_str(signature: str) -> inspect.Signature:
     # parameters
     args = definition.args
     params = []
 
     if hasattr(args, "posonlyargs"):
-        # Calculate how many defaults belong to positional-only arguments
-        # vs regular positional arguments
-        posonlyargs_count = len(args.posonlyargs)  # type: ignore
-        args_count = len(args.args)
-        defaults_count = len(args.defaults)
-        
-        # Defaults are shared between posonlyargs and args
-        # Regular args get defaults from the end, posonlyargs get the rest
-        regular_defaults_count = min(args_count, defaults_count)
-        posonly_defaults_count = defaults_count - regular_defaults_count
-        
-        for i, arg in enumerate(args.posonlyargs):  # type: ignore
+        for arg in args.posonlyargs:  # type: ignore
             annotation = ast_unparse(arg.annotation) or Parameter.empty
-            
-            # Check if this positional-only argument has a default value
-            if i >= posonlyargs_count - posonly_defaults_count:
-                # This argument has a default value
-                default_index = i - (posonlyargs_count - posonly_defaults_count)
-                default = ast_unparse(args.defaults[default_index])
-            else:
-                default = Parameter.empty
-                
             params.append(Parameter(arg.arg, Parameter.POSITIONAL_ONLY,
-                                    default=default, annotation=annotation))
+                                    annotation=annotation))
 
     for i, arg in enumerate(args.args):
-        # Calculate defaults for regular args, accounting for posonly defaults
-        if hasattr(args, "posonlyargs"):
-            posonlyargs_count = len(args.posonlyargs)  # type: ignore
-            args_count = len(args.args)
-            defaults_count = len(args.defaults)
-            regular_defaults_count = min(args_count, defaults_count)
-            posonly_defaults_count = defaults_count - regular_defaults_count
-            
-            if len(args.args) - i <= regular_defaults_count:
-                # This regular arg has a default - get it from the correct position
-                # Regular args defaults start after posonly defaults
-                regular_default_index = i - (args_count - regular_defaults_count)
-                default_index = posonly_defaults_count + regular_default_index
-                default = ast_unparse(args.defaults[default_index])
-            else:
-                default = Parameter.empty
+        if len(args.args) - i <= len(args.defaults):
+            default = ast_unparse(args.defaults[-len(args.args) + i])
         else:
-            # Original logic for when there are no positional-only args
-            if len(args.args) - i <= len(args.defaults):
-                default = ast_unparse(args.defaults[-len(args.args) + i])
-            else:
-                default = Parameter.empty
+            default = Parameter.empty
 
         annotation = ast_unparse(arg.annotation) or Parameter.empty
         params.append(Parameter(arg.arg, Parameter.POSITIONAL_OR_KEYWORD,
                                 default=default, annotation=annotation))
 
