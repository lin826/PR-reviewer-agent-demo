--- a/sympy/geometry/point.py
+++ b/sympy/geometry/point.py
@@ -10,6 +10,7 @@
 
 from __future__ import division, print_function
 
+from itertools import zip_longest
 from sympy.core import S, sympify
 from sympy.core.compatibility import iterable
 from sympy.core.containers import Tuple
@@ -266,8 +267,8 @@
         sqrt(x**2 + y**2)
 
         """
-        return sqrt(sum([(a - b)**2 for a, b in zip(
-            self.args, p.args if isinstance(p, Point) else p)]))
+        return sqrt(sum([(a - b)**2 for a, b in zip_longest(
+            self.args, p.args if isinstance(p, Point) else p, fillvalue=0)]))
 
     def taxicab_distance(self, p):
         """The Taxicab Distance from self to point p.
@@ -300,7 +301,7 @@
 
         """
         p = Point(p)
-        return sum(abs(a - b) for a, b in zip(self.args, p.args))
+        return sum(abs(a - b) for a, b in zip_longest(self.args, p.args, fillvalue=0))
 
     def midpoint(self, p):
         """The midpoint between self and point p.
