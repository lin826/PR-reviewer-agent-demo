--- a/django/db/models/expressions.py
+++ b/django/db/models/expressions.py
@@ -1699,7 +1699,6 @@
     # Although the main expression may either be an aggregate or an
     # expression with an aggregate function, the GROUP BY that will
     # be introduced in the query as a result is not desired.
-    contains_aggregate = False
     contains_over_clause = True
 
     def __init__(

--- a/django/db/models/sql/compiler.py
+++ b/django/db/models/sql/compiler.py
@@ -1673,15 +1673,15 @@
                     'Failed to insert expression "%s" on %s. F() expressions '
                     "can only be used to update, not to insert." % (value, field)
                 )
+            if value.contains_over_clause:
+                raise FieldError(
+                    "Window expressions are not allowed in this query (%s=%r)."
+                    % (field.name, value)
+                )
             if value.contains_aggregate:
                 raise FieldError(
                     "Aggregate functions are not allowed in this query "
                     "(%s=%r)." % (field.name, value)
-                )
-            if value.contains_over_clause:
-                raise FieldError(
-                    "Window expressions are not allowed in this query (%s=%r)."
-                    % (field.name, value)
                 )
         return field.get_db_prep_save(value, connection=self.connection)
 
@@ -1928,14 +1928,14 @@
                 val = val.resolve_expression(
                     self.query, allow_joins=False, for_save=True
                 )
+                if val.contains_over_clause:
+                    raise FieldError(
+                        "Window expressions are not allowed in this query "
+                        "(%s=%r)." % (field.name, val)
+                    )
                 if val.contains_aggregate:
                     raise FieldError(
                         "Aggregate functions are not allowed in this query "
-                        "(%s=%r)." % (field.name, val)
-                    )
-                if val.contains_over_clause:
-                    raise FieldError(
-                        "Window expressions are not allowed in this query "
                         "(%s=%r)." % (field.name, val)
                     )
             elif hasattr(val, "prepare_database_save"):
