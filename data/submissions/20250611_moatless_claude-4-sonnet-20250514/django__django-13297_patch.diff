--- a/django/db/backends/base/operations.py
+++ b/django/db/backends/base/operations.py
@@ -9,6 +9,7 @@
 from django.db.backends import utils
 from django.utils import timezone
 from django.utils.encoding import force_str
+from django.utils.functional import SimpleLazyObject
 
 
 class BaseDatabaseOperations:
@@ -477,6 +478,15 @@
         cases where the target type isn't known, such as .raw() SQL queries.
         As a consequence it may not work perfectly in all circumstances.
         """
+        if isinstance(value, SimpleLazyObject):
+            # Resolve SimpleLazyObject to the underlying value first
+            # This resolves issues with TemplateView URL kwargs wrapped in SimpleLazyObject
+            from django.utils.functional import empty
+            if value._wrapped is empty:
+                # Force evaluation by accessing the wrapped object
+                value._setup()
+            value = value._wrapped
+        
         if isinstance(value, datetime.datetime):   # must be before date
             return self.adapt_datetimefield_value(value)
         elif isinstance(value, datetime.date):

--- a/django/db/models/fields/__init__.py
+++ b/django/db/models/fields/__init__.py
@@ -21,7 +21,7 @@
     parse_date, parse_datetime, parse_duration, parse_time,
 )
 from django.utils.duration import duration_microseconds, duration_string
-from django.utils.functional import Promise, cached_property
+from django.utils.functional import Promise, SimpleLazyObject, cached_property
 from django.utils.ipv6 import clean_ipv6_address
 from django.utils.itercompat import is_iterable
 from django.utils.text import capfirst
@@ -806,6 +806,13 @@
         """Perform preliminary non-db specific value checks and conversions."""
         if isinstance(value, Promise):
             value = value._proxy____cast()
+        elif isinstance(value, SimpleLazyObject):
+            # Force evaluation of SimpleLazyObject to get the underlying value
+            # This resolves issues with TemplateView URL kwargs wrapped in SimpleLazyObject
+            from django.utils.functional import empty
+            if value._wrapped is empty:
+                value._setup()
+            value = value._wrapped
         return value
 
     def get_db_prep_value(self, value, connection, prepared=False):
