--- a/pylint/config/__init__.py
+++ b/pylint/config/__init__.py
@@ -56,14 +56,26 @@
 ]
 
 USER_HOME = os.path.expanduser("~")
+
+def _get_xdg_data_home():
+    """Get XDG data home directory following XDG Base Directory Specification."""
+    xdg_data_home = os.environ.get("XDG_DATA_HOME")
+    if xdg_data_home:
+        return xdg_data_home
+    elif USER_HOME != "~":
+        return os.path.join(USER_HOME, ".local", "share")
+    else:
+        return ".local/share"
+
 if "PYLINTHOME" in os.environ:
     PYLINT_HOME = os.environ["PYLINTHOME"]
     if USER_HOME == "~":
         USER_HOME = os.path.dirname(PYLINT_HOME)
 elif USER_HOME == "~":
-    PYLINT_HOME = ".pylint.d"
+    PYLINT_HOME = "pylint"
 else:
-    PYLINT_HOME = os.path.join(USER_HOME, ".pylint.d")
+    # Use XDG Base Directory Specification compliant path
+    PYLINT_HOME = os.path.join(_get_xdg_data_home(), "pylint")
 
 
 def _get_pdata_path(base_name, recurs):
@@ -83,7 +95,7 @@
 def save_results(results, base):
     if not os.path.exists(PYLINT_HOME):
         try:
-            os.mkdir(PYLINT_HOME)
+            os.makedirs(PYLINT_HOME, exist_ok=True)
         except OSError:
             print("Unable to create directory %s" % PYLINT_HOME, file=sys.stderr)
     data_file = _get_pdata_path(base, 1)
@@ -110,8 +122,11 @@
 The following environment variables are used:
     * PYLINTHOME
     Path to the directory where persistent data for the run will be stored. If
-not found, it defaults to ~/.pylint.d/ or .pylint.d (in the current working
-directory).
+not found, it defaults to XDG_DATA_HOME/pylint (typically ~/.local/share/pylint) 
+or pylint (in the current working directory if ~ cannot be determined).
+    * XDG_DATA_HOME
+    Path to the base directory for user-specific data files (XDG Base Directory 
+    Specification). Used when PYLINTHOME is not set. Defaults to ~/.local/share.
     * PYLINTRC
     Path to the configuration file. See the documentation for the method used
 to search for configuration file.
