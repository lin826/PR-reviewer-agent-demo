--- a/lib/matplotlib/ticker.py
+++ b/lib/matplotlib/ticker.py
@@ -2379,8 +2379,13 @@
         if not np.isfinite(vmin) or not np.isfinite(vmax):
             return 1, 10  # initial range, no data plotted yet
 
+        # Track if we need to swap for processing, but preserve original order for output
+        swapped = False
+        orig_vmin, orig_vmax = vmin, vmax
         if vmin > vmax:
             vmin, vmax = vmax, vmin
+            swapped = True
+            
         if vmax <= 0:
             cbook._warn_external(
                 "Data has no positive values, and therefore cannot be "
@@ -2395,6 +2400,12 @@
         if vmin == vmax:
             vmin = _decade_less(vmin, self._base)
             vmax = _decade_greater(vmax, self._base)
+            
+        # If we swapped for processing, swap back to preserve original order
+        # This allows log axes to be inverted like linear axes
+        if swapped:
+            vmin, vmax = vmax, vmin
+            
         return vmin, vmax
 
 
@@ -2624,8 +2635,11 @@
         if not np.isfinite(vmin) or not np.isfinite(vmax):
             return initial_range  # no data plotted yet
 
+        # Track if we need to swap for processing, but preserve original order for output
+        swapped = False
         if vmin > vmax:
             vmin, vmax = vmax, vmin
+            swapped = True
 
         # what to do if a window beyond ]0, 1[ is chosen
         if self.axis is not None:
@@ -2646,6 +2660,11 @@
             vmax = 1 - minpos
         if vmin == vmax:
             return 0.1 * vmin, 1 - 0.1 * vmin
+
+        # If we swapped for processing, swap back to preserve original order
+        # This allows symlog axes to be inverted like linear axes
+        if swapped:
+            vmin, vmax = vmax, vmin
 
         return vmin, vmax
 
