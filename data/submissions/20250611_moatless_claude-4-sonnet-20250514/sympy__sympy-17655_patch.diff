--- a/sympy/geometry/point.py
+++ b/sympy/geometry/point.py
@@ -24,6 +24,7 @@
 from sympy.core import S, sympify, Expr
 from sympy.core.compatibility import is_sequence
 from sympy.core.containers import Tuple
+from sympy.core.decorators import call_highest_priority
 from sympy.simplify import nsimplify, simplify
 from sympy.geometry.exceptions import GeometryError
 from sympy.functions.elementary.miscellaneous import sqrt
@@ -104,6 +105,7 @@
     """
 
     is_Point = True
+    _op_priority = 10.1  # Higher than Expr (10.0) to handle scalar multiplication properly
 
     def __new__(cls, *args, **kwargs):
         evaluate = kwargs.get('evaluate', global_evaluate[0])
@@ -278,6 +280,21 @@
         coords = [simplify(x*factor) for x in self.args]
         return Point(coords, evaluate=False)
 
+    @call_highest_priority('__mul__')
+    def __rmul__(self, factor):
+        """Multiply point's coordinates by a factor.
+
+        This handles left multiplication, e.g., `2 * point`.
+        It's implemented the same way as `__mul__` for commutativity.
+
+        See Also
+        ========
+
+        sympy.geometry.point.Point.__mul__
+        sympy.geometry.point.Point.scale
+        """
+        return self.__mul__(factor)
+
     def __neg__(self):
         """Negate the point."""
         coords = [-x for x in self.args]
