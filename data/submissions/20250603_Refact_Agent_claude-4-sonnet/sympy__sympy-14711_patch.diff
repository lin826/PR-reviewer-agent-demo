diff --git a/sympy/physics/vector/tests/test_vector.py b/sympy/physics/vector/tests/test_vector.py
index 828a25f3c4..64f070b8ed 100644
--- a/sympy/physics/vector/tests/test_vector.py
+++ b/sympy/physics/vector/tests/test_vector.py
@@ -165,3 +165,30 @@ def test_vector_simplify():
     test4 = ((-4 * x * y**2 - 2 * y**3 - 2 * x**2 * y) / (x + y)**2) * N.x
     test4 = test4.simplify()
     assert (test4 & N.x) == -2 * y
+
+
+def test_vector_add_zero():
+    """Test vector addition with scalar zero for sum() compatibility."""
+    N = ReferenceFrame('N')
+    
+    # Test vector + 0
+    assert N.x + 0 == N.x
+    assert N.y + 0.0 == N.y
+    
+    # Test 0 + vector (uses __radd__)
+    assert 0 + N.x == N.x
+    assert 0.0 + N.y == N.y
+    
+    # Test sum() with vectors - the original issue
+    assert sum([N.x, (0 * N.x)]) == N.x
+    assert sum([N.x]) == N.x
+    assert sum([N.x, N.y]) == N.x + N.y
+    
+    # Test sum() with start parameter
+    assert sum([N.x], 0) == N.x
+    assert sum([N.y], Vector(0)) == N.y
+    
+    # Test that non-zero scalars still fail
+    raises(TypeError, lambda: N.x + 1)
+    raises(TypeError, lambda: N.x + 2.5)
+    raises(TypeError, lambda: 1 + N.x)
diff --git a/sympy/physics/vector/vector.py b/sympy/physics/vector/vector.py
index a048ee57f1..1bf026af73 100644
--- a/sympy/physics/vector/vector.py
+++ b/sympy/physics/vector/vector.py
@@ -57,6 +57,9 @@ def __hash__(self):
 
     def __add__(self, other):
         """The add operator for Vector. """
+        # Handle scalar 0 case for sum() compatibility
+        if other == 0:
+            return self
         other = _check_vector(other)
         return Vector(self.args + other.args)
 
