diff --git a/sklearn/tree/export.py b/sklearn/tree/export.py
index 1fe11e596..d6b486610 100644
--- a/sklearn/tree/export.py
+++ b/sklearn/tree/export.py
@@ -890,9 +890,11 @@ def export_text(decision_tree, feature_names=None, max_depth=10,
         value_fmt = "{}{} value: {}\n"
 
     if feature_names:
-        feature_names_ = [feature_names[i] for i in tree_.feature]
+        feature_names_ = [feature_names[i] if i != _tree.TREE_UNDEFINED else "" 
+                         for i in tree_.feature]
     else:
-        feature_names_ = ["feature_{}".format(i) for i in tree_.feature]
+        feature_names_ = ["feature_{}".format(i) if i != _tree.TREE_UNDEFINED else ""
+                         for i in tree_.feature]
 
     export_text.report = ""
 
diff --git a/sklearn/tree/tests/test_export.py b/sklearn/tree/tests/test_export.py
index 503431f45..d91eca211 100644
--- a/sklearn/tree/tests/test_export.py
+++ b/sklearn/tree/tests/test_export.py
@@ -328,6 +328,29 @@ def test_export_text_errors():
                          export_text, clf, spacing=0)
 
 
+def test_export_text_single_feature():
+    # Test export_text with single feature - should not raise IndexError
+    # Regression test for issue where single feature trees caused IndexError
+    from sklearn.datasets import load_iris
+    X, y = load_iris(return_X_y=True)
+    X = X[:, 0].reshape(-1, 1)  # Use only one feature
+
+    clf = DecisionTreeClassifier(max_depth=2, random_state=0)
+    clf.fit(X, y)
+    
+    # Test with custom feature names
+    result = export_text(clf, feature_names=['sepal_length'])
+    assert isinstance(result, str)
+    assert len(result) > 0
+    assert 'sepal_length' in result
+    
+    # Test without custom feature names
+    result = export_text(clf)
+    assert isinstance(result, str)
+    assert len(result) > 0
+    assert 'feature_0' in result
+
+
 def test_export_text():
     clf = DecisionTreeClassifier(max_depth=2, random_state=0)
     clf.fit(X, y)
