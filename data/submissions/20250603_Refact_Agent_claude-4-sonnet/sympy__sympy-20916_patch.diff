diff --git a/sympy/printing/pretty/pretty_symbology.py b/sympy/printing/pretty/pretty_symbology.py
index 3f7c4a2dc7..4f9bff334e 100644
--- a/sympy/printing/pretty/pretty_symbology.py
+++ b/sympy/printing/pretty/pretty_symbology.py
@@ -512,23 +512,21 @@ def pretty_symbol(symb_name, bold_name=False):
     # UC: beta1
     # UC: f_beta
 
-    if not _use_unicode:
-        return symb_name
-
     name, sups, subs = split_super_sub(symb_name)
 
     def translate(s, bold_name) :
-        if bold_name:
-            gG = greek_bold_unicode.get(s)
-        else:
-            gG = greek_unicode.get(s)
-        if gG is not None:
-            return gG
-        for key in sorted(modifier_dict.keys(), key=lambda k:len(k), reverse=True) :
-            if s.lower().endswith(key) and len(s)>len(key):
-                return modifier_dict[key](translate(s[:-len(key)], bold_name))
-        if bold_name:
-            return ''.join([bold_unicode[c] for c in s])
+        if _use_unicode:
+            if bold_name:
+                gG = greek_bold_unicode.get(s)
+            else:
+                gG = greek_unicode.get(s)
+            if gG is not None:
+                return gG
+            for key in sorted(modifier_dict.keys(), key=lambda k:len(k), reverse=True) :
+                if s.lower().endswith(key) and len(s)>len(key):
+                    return modifier_dict[key](translate(s[:-len(key)], bold_name))
+            if bold_name:
+                return ''.join([bold_unicode[c] for c in s])
         return s
 
     name = translate(name, bold_name)
@@ -547,6 +545,7 @@ def pretty_list(l, mapping):
             result.append(pretty)
         return result
 
+    # Always try to prettify subscripts and superscripts, even when unicode is disabled for Greek letters
     pretty_sups = pretty_list(sups, sup)
     if pretty_sups is not None:
         pretty_subs = pretty_list(subs, sub)
