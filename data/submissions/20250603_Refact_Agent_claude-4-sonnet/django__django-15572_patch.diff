diff --git a/django/template/autoreload.py b/django/template/autoreload.py
index 84c8554165..a29adad61a 100644
--- a/django/template/autoreload.py
+++ b/django/template/autoreload.py
@@ -17,7 +17,11 @@ def get_template_directories():
         if not isinstance(backend, DjangoTemplates):
             continue
 
-        items.update(cwd / to_path(dir) for dir in backend.engine.dirs)
+        filtered_dirs = [
+            dir for dir in backend.engine.dirs
+            if dir and str(dir).strip()
+        ]
+        items.update(cwd / to_path(dir) for dir in filtered_dirs)
 
         for loader in backend.engine.template_loaders:
             if not hasattr(loader, "get_dirs"):
@@ -25,7 +29,7 @@ def get_template_directories():
             items.update(
                 cwd / to_path(directory)
                 for directory in loader.get_dirs()
-                if not is_django_path(directory)
+                if not is_django_path(directory) and directory and str(directory).strip()
             )
     return items
 
diff --git a/tests/template_tests/test_autoreloader.py b/tests/template_tests/test_autoreloader.py
index cc2c3f58a5..840827b1b9 100644
--- a/tests/template_tests/test_autoreloader.py
+++ b/tests/template_tests/test_autoreloader.py
@@ -103,6 +103,24 @@ class TemplateReloadTests(SimpleTestCase):
             },
         )
 
+    @override_settings(
+        TEMPLATES=[
+            {
+                "DIRS": ["", "  ", "valid_dir"],
+                "BACKEND": "django.template.backends.django.DjangoTemplates",
+            }
+        ]
+    )
+    def test_empty_dirs_filtered_out(self):
+        """Test that empty strings and whitespace-only strings in DIRS are filtered out."""
+        template_dirs = autoreload.get_template_directories()
+        # Should only contain the valid directory, not the current working directory
+        expected_dirs = {Path.cwd() / "valid_dir"}
+        self.assertSetEqual(template_dirs, expected_dirs)
+        
+        # Ensure current working directory is not included
+        self.assertNotIn(Path.cwd(), template_dirs)
+
 
 @require_jinja2
 @override_settings(INSTALLED_APPS=["template_tests"])
