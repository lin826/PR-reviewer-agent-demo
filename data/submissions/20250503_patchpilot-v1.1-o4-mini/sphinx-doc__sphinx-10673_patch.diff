diff --git a/sphinx/directives/other.py b/sphinx/directives/other.py
index addf750..282b59d 100644
--- a/sphinx/directives/other.py
+++ b/sphinx/directives/other.py
@@ -116,9 +116,15 @@ class TocTree(SphinxDirective):
                         break
                 # absolutize filenames
                 docname = docname_join(self.env.docname, docname)
+
                 if url_re.match(ref) or ref == 'self':
                     toctree['entries'].append((title, ref))
+                elif docname in ('genindex', 'modindex', 'search'):
+                    toctree['entries'].append((title, docname))
+                    # do NOT add to 'includefiles' â€“ they are generated automatically
+                    continue
                 elif docname not in self.env.found_docs:
+
                     if excluded(self.env.doc2path(docname, False)):
                         message = __('toctree contains reference to excluded document %r')
                         subtype = 'excluded'
diff --git a/sphinx/environment/adapters/toctree.py b/sphinx/environment/adapters/toctree.py
index 52ac0d3..be3fb16 100644
--- a/sphinx/environment/adapters/toctree.py
+++ b/sphinx/environment/adapters/toctree.py
@@ -138,9 +138,23 @@ class TocTree:
                         para = addnodes.compact_paragraph('', '', reference)
                         item = nodes.list_item('', para)
                         # don't show subitems
+
+                        toc = nodes.bullet_list('', item)
+                    elif ref in ('genindex', 'modindex', 'search'):
+                        if title is None:
+                            default_titles = {'genindex': __('Index'),
+                                              'modindex': __('Module Index'),
+                                              'search':  __('Search')}
+                            title = default_titles[ref]
+                        reference = nodes.reference('', '', internal=True,
+                                                    refuri=ref, anchorname='',
+                                                    *[nodes.Text(title)])
+                        para = addnodes.compact_paragraph('', '', reference)
+                        item = nodes.list_item('', para)
                         toc = nodes.bullet_list('', item)
                     else:
                         if ref in parents:
+
                             logger.warning(__('circular toctree references '
                                               'detected, ignoring: %s <- %s'),
                                            ref, ' <- '.join(parents),
