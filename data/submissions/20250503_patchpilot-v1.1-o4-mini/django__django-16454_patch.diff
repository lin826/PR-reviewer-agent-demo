diff --git a/django/core/management/base.py b/django/core/management/base.py
index abc6f79a15..8f34ccc056 100644
--- a/django/core/management/base.py
+++ b/django/core/management/base.py
@@ -2,10 +2,13 @@
 Base classes for writing management commands (named commands which can
 be executed through ``django-admin`` or ``manage.py``).
 """
+
 import argparse
 import os
 import sys
+import functools
 from argparse import ArgumentParser, HelpFormatter
+
 from io import TextIOBase
 
 import django
@@ -65,12 +68,36 @@ class CommandParser(ArgumentParser):
             self.error(self.missing_args_message)
         return super().parse_args(args, namespace)
 
+
     def error(self, message):
         if self.called_from_command_line:
             super().error(message)
         else:
             raise CommandError("Error: %s" % message)
 
+    def add_subparsers(self, *args, **kwargs):
+        """
+        Override to propagate Django‑specific initialization arguments to
+        all sub‑parsers.
+        """
+
+        cfc_flag = (
+            self.called_from_command_line
+            if self.called_from_command_line is not None
+            else True
+        )
+        kwargs.setdefault(
+            "parser_class",
+            functools.partial(
+                self.__class__,
+                missing_args_message=self.missing_args_message,
+                called_from_command_line=cfc_flag,
+            ),
+        )
+
+        return super().add_subparsers(*args, **kwargs)
+
+
 
 def handle_default_options(options):
     """
@@ -675,4 +702,4 @@ class LabelCommand(BaseCommand):
         """
         raise NotImplementedError(
             "subclasses of LabelCommand must provide a handle_label() method"
-        )
+        )
diff --git a/django/core/management/utils.py b/django/core/management/utils.py
index fca61f2c23..7e255488f4 100644
--- a/django/core/management/utils.py
+++ b/django/core/management/utils.py
@@ -172,4 +172,4 @@ def run_formatters(written_files, black_path=(sentinel := object())):
         subprocess.run(
             [black_path, "--fast", "--", *written_files],
             capture_output=True,
-        )
+        )
