diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py
index 54f3258eac..85353bd6a9 100644
--- a/django/db/models/sql/query.py
+++ b/django/db/models/sql/query.py
@@ -1024,11 +1024,24 @@ class Query(BaseExpression):
         sure chains like t1 LOUTER t2 INNER t3 aren't generated. All new
         joins are created as LOUTER if the join is nullable.
         """
+
+
+        if join.filtered_relation is not None:
+            # A join that carries a FilteredRelation must never be reused for
+            # a different FilteredRelation. Ignore any 'reuse' candidates so
+            # that only joins that are exactly the same (including the
+            # filtered_relation) are considered for reuse.
+            reuse = None
+            same_join = lambda other: other == join
+        else:
+            same_join = lambda other: other.equals(join)
+
         reuse_aliases = [
             a
             for a, j in self.alias_map.items()
-            if (reuse is None or a in reuse) and j.equals(join)
+            if (reuse is None or a in reuse) and same_join(j)
         ]
+
         if reuse_aliases:
             if join.table_alias in reuse_aliases:
                 reuse_alias = join.table_alias
@@ -2661,4 +2674,4 @@ class JoinPromoter:
             # and again we could safely demote to INNER.
         query.promote_joins(to_promote)
         query.demote_joins(to_demote)
-        return to_demote
+        return to_demote
