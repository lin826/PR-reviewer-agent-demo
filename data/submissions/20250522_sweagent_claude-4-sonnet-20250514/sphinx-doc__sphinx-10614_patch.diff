diff --git a/sphinx/ext/inheritance_diagram.py b/sphinx/ext/inheritance_diagram.py
index 6e3985512..e24bea941 100644
--- a/sphinx/ext/inheritance_diagram.py
+++ b/sphinx/ext/inheritance_diagram.py
@@ -33,6 +33,7 @@ from __future__ import annotations
 import builtins
 import hashlib
 import inspect
+import posixpath
 import re
 from collections.abc import Iterable
 from importlib import import_module
@@ -413,12 +414,34 @@ def html_visit_inheritance_diagram(self: HTML5Translator, node: inheritance_diag
     for child in pending_xrefs:
         if child.get('refuri') is not None:
             if graphviz_output_format == 'SVG':
-                urls[child['reftitle']] = "../" + child.get('refuri')
+                # For SVG, the fix_svg_relative_paths function will convert URLs
+                # from being relative to the output directory to being relative
+                # to the _images directory. So we need to provide URLs that are
+                # relative to the output directory.
+                
+                # Resolve the relative refuri against the current document URI
+                current_doc_uri = self.builder.get_target_uri(self.builder.current_docname)
+                refuri = child.get('refuri')
+                
+                # Split refuri into path and fragment
+                refuri_parts = refuri.split('#')
+                refuri_path = refuri_parts[0]
+                fragment = '#' + refuri_parts[1] if len(refuri_parts) > 1 else ''
+                
+                # Resolve the relative path to get the absolute target path
+                target_path = posixpath.normpath(posixpath.join(posixpath.dirname(current_doc_uri), refuri_path))
+                
+                # The target_path is now relative to the output directory, which is what
+                # fix_svg_relative_paths expects
+                urls[child['reftitle']] = target_path + fragment
             else:
                 urls[child['reftitle']] = child.get('refuri')
         elif child.get('refid') is not None:
             if graphviz_output_format == 'SVG':
-                urls[child['reftitle']] = '../' + current_filename + '#' + child.get('refid')
+                # For SVG, provide path relative to output directory
+                # fix_svg_relative_paths will convert it to be relative to _images
+                current_doc_uri = self.builder.get_target_uri(self.builder.current_docname)
+                urls[child['reftitle']] = current_doc_uri + '#' + child.get('refid')
             else:
                 urls[child['reftitle']] = '#' + child.get('refid')
 
diff --git a/tox.ini b/tox.ini
index a3dc56211..c76147de3 100644
--- a/tox.ini
+++ b/tox.ini
@@ -24,7 +24,7 @@ setenv =
     PYTHONWARNINGS = error
     PYTEST_ADDOPTS = {env:PYTEST_ADDOPTS:} --color yes
 commands=
-    python -X dev -X warn_default_encoding -m pytest --durations 25 {posargs}
+    python -X dev -X warn_default_encoding -m pytest -rA --durations 25 {posargs}
 
 [testenv:docs]
 basepython = python3
