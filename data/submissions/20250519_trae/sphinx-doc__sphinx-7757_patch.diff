diff --git a/sphinx/util/inspect.py b/sphinx/util/inspect.py
index 15f0d66e2..5f09de8c3 100644
--- a/sphinx/util/inspect.py
+++ b/sphinx/util/inspect.py
@@ -520,15 +520,34 @@ def signature_from_str(signature: str) -> inspect.Signature:
     args = definition.args
     params = []
 
+    # Calculate how defaults are distributed
+    total_positional = len(getattr(args, 'posonlyargs', [])) + len(args.args)
+    num_defaults = len(args.defaults)
+    num_args_without_defaults = total_positional - num_defaults
+
     if hasattr(args, "posonlyargs"):
-        for arg in args.posonlyargs:  # type: ignore
+        for i, arg in enumerate(args.posonlyargs):  # type: ignore
             annotation = ast_unparse(arg.annotation) or Parameter.empty
+            
+            # Calculate default value for positional-only args
+            # Defaults apply right-to-left across all positional parameters
+            if i >= num_args_without_defaults:
+                default_idx = i - num_args_without_defaults
+                default = ast_unparse(args.defaults[default_idx])
+            else:
+                default = Parameter.empty
+            
             params.append(Parameter(arg.arg, Parameter.POSITIONAL_ONLY,
-                                    annotation=annotation))
+                                    default=default, annotation=annotation))
 
     for i, arg in enumerate(args.args):
-        if len(args.args) - i <= len(args.defaults):
-            default = ast_unparse(args.defaults[-len(args.args) + i])
+        # Calculate the cumulative index including all positional args
+        cumulative_idx = i + len(getattr(args, 'posonlyargs', []))
+        
+        # Calculate default for regular positional args
+        if cumulative_idx >= num_args_without_defaults:
+            default_idx = cumulative_idx - num_args_without_defaults
+            default = ast_unparse(args.defaults[default_idx])
         else:
             default = Parameter.empty
 

