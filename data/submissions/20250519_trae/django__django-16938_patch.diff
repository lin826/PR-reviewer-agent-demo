diff --git a/django/core/serializers/python.py b/django/core/serializers/python.py
index 36048601af..968370f840 100644
--- a/django/core/serializers/python.py
+++ b/django/core/serializers/python.py
@@ -71,7 +71,12 @@ class Serializer(base.Serializer):
                     return value.natural_key()
 
                 def queryset_iterator(obj, field):
-                    return getattr(obj, field.name).iterator()
+                    # Start with the relationship manager
+                    related_manager = getattr(obj, field.name)
+                    # Clear any select_related() that might be coming from a custom manager
+                    # to prevent conflicts with field deferral and optimization in M2M serialization
+                    queryset = related_manager.all().select_related(None)
+                    return queryset.iterator()
 
             else:
 
@@ -79,7 +84,13 @@ class Serializer(base.Serializer):
                     return self._value_from_field(value, value._meta.pk)
 
                 def queryset_iterator(obj, field):
-                    return getattr(obj, field.name).only("pk").iterator()
+                    # Start with the relationship manager
+                    related_manager = getattr(obj, field.name)
+                    # Clear any select_related() that might be coming from a custom manager
+                    # before applying only('pk') to avoid conflicts between deferring fields
+                    # and traversing relationships simultaneously
+                    queryset = related_manager.all().select_related(None).only("pk")
+                    return queryset.iterator()
 
             m2m_iter = getattr(obj, "_prefetched_objects_cache", {}).get(
                 field.name,

