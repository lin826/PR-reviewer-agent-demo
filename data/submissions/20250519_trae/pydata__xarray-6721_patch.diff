diff --git a/xarray/core/common.py b/xarray/core/common.py
index 3c328f42..625a2c1e 100644
--- a/xarray/core/common.py
+++ b/xarray/core/common.py
@@ -2023,7 +2023,24 @@ def get_chunksizes(
 
     chunks: dict[Any, tuple[int, ...]] = {}
     for v in variables:
-        if hasattr(v.data, "chunks"):
+        # First check if chunks are in the encoding - this avoids loading data
+        preferred_chunks = v.encoding.get('preferred_chunks')
+        if preferred_chunks is not None:
+            for dim, c in preferred_chunks.items():
+                if isinstance(c, tuple):
+                    size = c[0]  # Use first chunk size as the size
+                else:
+                    size = c
+                chunks_tuple = (size,)
+                if dim in chunks and chunks_tuple != chunks[dim]:
+                    raise ValueError(
+                        f"Object has inconsistent chunks along dimension {dim}. "
+                        "This can be fixed by calling unify_chunks()."
+                    )
+                chunks[dim] = chunks_tuple
+        # If no encoding chunks, fall back to checking v.data.chunks
+        # which might trigger loading the data for some array types
+        elif hasattr(v.data, "chunks"):
             for dim, c in v.chunksizes.items():
                 if dim in chunks and c != chunks[dim]:
                     raise ValueError(

