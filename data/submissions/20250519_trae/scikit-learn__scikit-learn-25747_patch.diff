diff --git a/sklearn/pipeline.py b/sklearn/pipeline.py
index 94d9465d7..22b27f096 100644
--- a/sklearn/pipeline.py
+++ b/sklearn/pipeline.py
@@ -1280,7 +1280,9 @@ class FeatureUnion(TransformerMixin, _BaseComposition):
         config = _get_output_config("transform", self)
         if config["dense"] == "pandas" and all(hasattr(X, "iloc") for X in Xs):
             pd = check_pandas_support("transform")
-            return pd.concat(Xs, axis=1)
+            # Use concat with ignore_index=False to preserve individual DataFrame indices
+            # This ensures transformers that change the index (like groupby) will work
+            return pd.concat(Xs, axis=1, ignore_index=False)
 
         if any(sparse.issparse(f) for f in Xs):
             Xs = sparse.hstack(Xs).tocsr()
diff --git a/sklearn/utils/_set_output.py b/sklearn/utils/_set_output.py
index 335773c6a..95b33682c 100644
--- a/sklearn/utils/_set_output.py
+++ b/sklearn/utils/_set_output.py
@@ -127,9 +127,17 @@ def _wrap_data_with_container(method, data_to_wrap, original_input, estimator):
         return data_to_wrap
 
     # dense_config == "pandas"
+    pd = check_pandas_support("Setting output container to 'pandas'")
+    
+    # If data_to_wrap is already a pandas DataFrame/Series, preserve its index
+    if isinstance(data_to_wrap, (pd.DataFrame, pd.Series)):
+        index = data_to_wrap.index
+    else:
+        index = getattr(original_input, "index", None)
+        
     return _wrap_in_pandas_container(
         data_to_wrap=data_to_wrap,
-        index=getattr(original_input, "index", None),
+        index=index,
         columns=estimator.get_feature_names_out,
     )
 

