diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py
index 8743723ea0..4058a546b5 100644
--- a/sympy/printing/latex.py
+++ b/sympy/printing/latex.py
@@ -699,6 +699,9 @@ def _print_Derivative(self, expr):
     def _print_Subs(self, subs):
         expr, old, new = subs.args
         latex_expr = self._print(expr)
+        # Only add parentheses for Add expressions, not for Mul expressions
+        if expr.is_Add:
+            latex_expr = r"\left(%s\right)" % latex_expr
         latex_old = (self._print(e) for e in old)
         latex_new = (self._print(e) for e in new)
         latex_subs = r'\\ '.join(
diff --git a/sympy/printing/tests/test_latex.py b/sympy/printing/tests/test_latex.py
index 3d387cf052..e03525b0a2 100644
--- a/sympy/printing/tests/test_latex.py
+++ b/sympy/printing/tests/test_latex.py
@@ -673,8 +673,15 @@ def test_latex_derivatives():
 
 
 def test_latex_subs():
+    # For Mul expressions like x*y, no parentheses are needed
     assert latex(Subs(x*y, (
         x, y), (1, 2))) == r'\left. x y \right|_{\substack{ x=1\\ y=2 }}'
+    
+    # For Add expressions like -x+y, parentheses should be added
+    assert latex(Subs(-x+y, (x,), (1,))) == r'\left. \left(- x + y\right) \right|_{\substack{ x=1 }}'
+    
+    # Test with multiplication
+    assert latex(3*Subs(-x+y, (x,), (1,))) == r'3 \left. \left(- x + y\right) \right|_{\substack{ x=1 }}'
 
 
 def test_latex_integrals():
