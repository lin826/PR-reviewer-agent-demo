diff --git a/django/db/models/query.py b/django/db/models/query.py
index d9c9b0db04..3a34163805 100644
--- a/django/db/models/query.py
+++ b/django/db/models/query.py
@@ -290,6 +290,36 @@ class QuerySet:
         self._fetch_all()
         return bool(self._result_cache)
 
+    def _is_field_unique(self, field_name):
+        """
+        Check if a field is unique either through field.unique=True or UniqueConstraint.
+        
+        This method checks for:
+        1. Fields with unique=True attribute
+        2. Single-field UniqueConstraints without conditions
+        
+        Returns False for:
+        - Multi-field constraints (since in_bulk requires a single unique field)
+        - Conditional constraints (since conditions make uniqueness uncertain)
+        """
+        # First check if the field has unique=True
+        try:
+            field = self.model._meta.get_field(field_name)
+            if field.unique:
+                return True
+        except Exception:
+            return False
+        
+        # Check for single-field UniqueConstraints without conditions
+        from django.db.models.constraints import UniqueConstraint
+        for constraint in self.model._meta.constraints:
+            if (isinstance(constraint, UniqueConstraint) and 
+                constraint.fields == (field_name,) and 
+                constraint.condition is None):
+                return True
+        
+        return False
+
     def __getitem__(self, k):
         """Retrieve an item or slice from the set of results."""
         if not isinstance(k, (int, slice)):
@@ -689,7 +719,7 @@ class QuerySet:
         """
         assert not self.query.is_sliced, \
             "Cannot use 'limit' or 'offset' with in_bulk"
-        if field_name != 'pk' and not self.model._meta.get_field(field_name).unique:
+        if field_name != 'pk' and not self._is_field_unique(field_name):
             raise ValueError("in_bulk()'s field_name must be a unique field but %r isn't." % field_name)
         if id_list is not None:
             if not id_list:
