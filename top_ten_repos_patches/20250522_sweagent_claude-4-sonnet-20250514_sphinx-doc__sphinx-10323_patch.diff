diff --git a/sphinx/directives/code.py b/sphinx/directives/code.py
index dc44ed314..9437fe9a5 100644
--- a/sphinx/directives/code.py
+++ b/sphinx/directives/code.py
@@ -224,9 +224,9 @@ class LiteralIncludeReader:
                        self.start_filter,
                        self.end_filter,
                        self.lines_filter,
+                       self.dedent_filter,
                        self.prepend_filter,
-                       self.append_filter,
-                       self.dedent_filter]
+                       self.append_filter]
             lines = self.read_file(self.filename, location=location)
             for func in filters:
                 lines = func(lines, location=location)
diff --git a/tests/test_directive_code.py b/tests/test_directive_code.py
index 98a9aa899..bcd97fb09 100644
--- a/tests/test_directive_code.py
+++ b/tests/test_directive_code.py
@@ -251,6 +251,21 @@ def test_LiteralIncludeReader_dedent(literal_inc_path):
                        "\n")
 
 
+@pytest.mark.xfail(os.name != 'posix', reason="Not working on windows")
+def test_LiteralIncludeReader_prepend_append_dedent(literal_inc_path):
+    # Test that prepend/append content is not dedented
+    # Using lines 9-11 which contain "    def baz():" with 4 spaces of indentation
+    options = {'lines': '9-11', 'prepend': '    # Start', 'append': '    # End', 'dedent': 4}
+    reader = LiteralIncludeReader(literal_inc_path, options, DUMMY_CONFIG)
+    content, lines = reader.read()
+    # The prepend/append should preserve their 4 spaces, while file content is dedented by 4
+    assert content == ("    # Start\n"
+                       "def baz():\n"
+                       "    pass\n"
+                       "\n"
+                       "    # End\n")
+
+
 @pytest.mark.xfail(os.name != 'posix', reason="Not working on windows")
 def test_LiteralIncludeReader_tabwidth(testroot):
     # tab-width: 4
diff --git a/tox.ini b/tox.ini
index f0afd779b..30ca90275 100644
--- a/tox.ini
+++ b/tox.ini
@@ -28,7 +28,7 @@ setenv =
     PYTHONWARNINGS = all
     PYTEST_ADDOPTS = {env:PYTEST_ADDOPTS:} --color yes
 commands=
-    python -X dev -m pytest --durations 25 {posargs}
+    python -X dev -m pytest -rA --durations 25 {posargs}
 
 [testenv:du-latest]
 commands =
