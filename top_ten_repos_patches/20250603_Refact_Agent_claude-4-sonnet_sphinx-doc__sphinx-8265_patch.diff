diff --git a/sphinx/pycode/ast.py b/sphinx/pycode/ast.py
index 9bafff11c..f271e813f 100644
--- a/sphinx/pycode/ast.py
+++ b/sphinx/pycode/ast.py
@@ -69,6 +69,8 @@ def unparse(node: Optional[ast.AST]) -> Optional[str]:
 
 # a greatly cut-down version of `ast._Unparser`
 class _UnparseVisitor(ast.NodeVisitor):
+    def __init__(self):
+        self._in_subscript = False
 
     def _visit_op(self, node: ast.AST) -> str:
         return OPERATORS[node.__class__]
@@ -166,14 +168,32 @@ class _UnparseVisitor(ast.NodeVisitor):
         return "{" + ", ".join(self.visit(e) for e in node.elts) + "}"
 
     def visit_Subscript(self, node: ast.Subscript) -> str:
-        return "%s[%s]" % (self.visit(node.value), self.visit(node.slice))
+        # Set context flag for subscript slice
+        old_in_subscript = self._in_subscript
+        self._in_subscript = True
+        try:
+            slice_str = self.visit(node.slice)
+        finally:
+            self._in_subscript = old_in_subscript
+        return "%s[%s]" % (self.visit(node.value), slice_str)
 
     def visit_UnaryOp(self, node: ast.UnaryOp) -> str:
         return "%s %s" % (self.visit(node.op), self.visit(node.operand))
 
     def visit_Tuple(self, node: ast.Tuple) -> str:
         if node.elts:
-            return ", ".join(self.visit(e) for e in node.elts)
+            elements = ", ".join(self.visit(e) for e in node.elts)
+            if len(node.elts) == 1:
+                # Single element tuple needs trailing comma and parentheses
+                return "(" + elements + ",)"
+            else:
+                # Multiple elements - check context
+                if self._in_subscript:
+                    # In subscript context, don't add parentheses
+                    return elements
+                else:
+                    # In other contexts, add parentheses to ensure correct parsing
+                    return "(" + elements + ")"
         else:
             return "()"
 
diff --git a/tests/test_pycode_ast.py b/tests/test_pycode_ast.py
index 9b12d24d5..3b17c1922 100644
--- a/tests/test_pycode_ast.py
+++ b/tests/test_pycode_ast.py
@@ -53,7 +53,7 @@ from sphinx.pycode import ast
     ("+ a", "+ a"),                             # UAdd
     ("- 1", "- 1"),                             # UnaryOp
     ("- a", "- a"),                             # USub
-    ("(1, 2, 3)", "1, 2, 3"),                   # Tuple
+    ("(1, 2, 3)", "(1, 2, 3)"),                # Tuple
     ("()", "()"),                               # Tuple (empty)
 ])
 def test_unparse(source, expected):
