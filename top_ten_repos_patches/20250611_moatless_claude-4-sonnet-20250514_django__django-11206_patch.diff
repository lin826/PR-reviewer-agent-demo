--- a/django/utils/numberformat.py
+++ b/django/utils/numberformat.py
@@ -29,8 +29,18 @@
     if isinstance(number, Decimal):
         # Format values with more than 200 digits (an arbitrary cutoff) using
         # scientific notation to avoid high memory usage in {:f}'.format().
-        _, digits, exponent = number.as_tuple()
+        sign_bit, digits, exponent = number.as_tuple()
         if abs(exponent) + len(digits) > 200:
+            # When decimal_pos is specified and the number is very small (negative exponent),
+            # return zeros instead of scientific notation since the user expects a fixed
+            # number of decimal places.
+            if decimal_pos is not None and exponent < 0:
+                # Return zero with the requested decimal places
+                # Note: very small numbers (positive or negative) round to zero
+                if decimal_pos > 0:
+                    return '0' + decimal_sep + ('0' * decimal_pos)
+                else:
+                    return '0'
             number = '{:e}'.format(number)
             coefficient, exponent = number.split('e')
             # Format the coefficient.
