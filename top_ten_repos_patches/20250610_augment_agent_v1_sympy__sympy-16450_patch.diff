diff --git a/sympy/simplify/simplify.py b/sympy/simplify/simplify.py
index c6b511f206..081cc39386 100644
--- a/sympy/simplify/simplify.py
+++ b/sympy/simplify/simplify.py
@@ -249,11 +249,30 @@ def posify(eq):
             reps.update(dict((v, k) for k, v in posify(s)[1].items()))
         for i, e in enumerate(eq):
             eq[i] = e.subs(reps)
         return f(eq), {r: s for s, r in reps.items()}
 
-    reps = {s: Dummy(s.name, positive=True)
+    def _create_positive_dummy(symbol):
+        """Create a positive dummy symbol preserving compatible assumptions."""
+        # Assumptions that are compatible with being positive
+        compatible_assumptions = {
+            'finite', 'infinite', 'integer', 'noninteger', 'rational', 'irrational',
+            'prime', 'composite', 'even', 'odd', 'algebraic', 'transcendental', 
+            'commutative'
+        }
+        
+        # Start with positive=True
+        assumptions = {'positive': True}
+        
+        # Add compatible assumptions from the original symbol
+        for assumption, value in symbol._assumptions.items():
+            if assumption in compatible_assumptions:
+                assumptions[assumption] = value
+                
+        return Dummy(symbol.name, **assumptions)
+    
+    reps = {s: _create_positive_dummy(s)
                  for s in eq.free_symbols if s.is_positive is None}
     eq = eq.subs(reps)
     return eq, {r: s for s, r in reps.items()}
 
 
