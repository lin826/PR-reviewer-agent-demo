diff --git a/sphinx/util/inspect.py b/sphinx/util/inspect.py
index 15f0d66e2..aa116c857 100644
--- a/sphinx/util/inspect.py
+++ b/sphinx/util/inspect.py
@@ -520,18 +520,41 @@ def signature_from_str(signature: str) -> inspect.Signature:
     args = definition.args
     params = []
 
+    # Calculate default values for positional parameters (both pos-only and regular)
+    posonly = getattr(args, "posonlyargs", [])
+    regular = args.args
+    defaults = args.defaults
+    
+    # Total number of positional parameters
+    total_positional = len(posonly) + len(regular)
+    
+    # Create a map of default values for all positional parameters
+    default_map = {}
+    if defaults:
+        # Calculate the index of the first parameter that has a default
+        first_default_idx = total_positional - len(defaults)
+        
+        # Assign default values to parameters
+        for i in range(total_positional):
+            if i >= first_default_idx:
+                default_idx = i - first_default_idx
+                default_map[i] = ast_unparse(defaults[default_idx])
+            else:
+                default_map[i] = Parameter.empty
+    
+    # Process positional-only parameters
     if hasattr(args, "posonlyargs"):
-        for arg in args.posonlyargs:  # type: ignore
+        for i, arg in enumerate(args.posonlyargs):  # type: ignore
             annotation = ast_unparse(arg.annotation) or Parameter.empty
+            default = default_map.get(i, Parameter.empty)
             params.append(Parameter(arg.arg, Parameter.POSITIONAL_ONLY,
-                                    annotation=annotation))
+                                    default=default, annotation=annotation))
 
+    # Process regular positional or keyword parameters
     for i, arg in enumerate(args.args):
-        if len(args.args) - i <= len(args.defaults):
-            default = ast_unparse(args.defaults[-len(args.args) + i])
-        else:
-            default = Parameter.empty
-
+        pos = len(posonly) + i  # Adjust index to account for positional-only params
+        default = default_map.get(pos, Parameter.empty)
+        
         annotation = ast_unparse(arg.annotation) or Parameter.empty
         params.append(Parameter(arg.arg, Parameter.POSITIONAL_OR_KEYWORD,
                                 default=default, annotation=annotation))
