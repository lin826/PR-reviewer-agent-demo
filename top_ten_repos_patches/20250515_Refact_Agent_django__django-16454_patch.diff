diff --git a/django/core/management/base.py b/django/core/management/base.py
index abc6f79a15..91747e0869 100644
--- a/django/core/management/base.py
+++ b/django/core/management/base.py
@@ -70,6 +70,32 @@ class CommandParser(ArgumentParser):
             super().error(message)
         else:
             raise CommandError("Error: %s" % message)
+            
+    def add_subparsers(self, **kwargs):
+        """
+        Custom add_subparsers that ensures special parameters are passed to subparsers.
+        """
+        # Call the original add_subparsers method
+        subparsers_action = super().add_subparsers(**kwargs)
+        
+        # Store reference to the original add_parser method
+        original_add_parser = subparsers_action.add_parser
+        
+        # Define a new add_parser method that includes our special parameters
+        def add_parser_with_params(name, **subparser_kwargs):
+            # Pass our custom parameters to subparsers if they weren't explicitly overridden
+            if hasattr(self, 'missing_args_message') and 'missing_args_message' not in subparser_kwargs:
+                subparser_kwargs['missing_args_message'] = self.missing_args_message
+            if hasattr(self, 'called_from_command_line') and 'called_from_command_line' not in subparser_kwargs:
+                subparser_kwargs['called_from_command_line'] = self.called_from_command_line
+            
+            # Call the original add_parser with our updated kwargs
+            return original_add_parser(name, **subparser_kwargs)
+        
+        # Replace the add_parser method
+        subparsers_action.add_parser = add_parser_with_params
+        
+        return subparsers_action
 
 
 def handle_default_options(options):
