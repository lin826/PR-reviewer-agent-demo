diff --git a/astropy/wcs/wcsapi/wrappers/sliced_wcs.py b/astropy/wcs/wcsapi/wrappers/sliced_wcs.py
index d7605b078..598a187b2 100644
--- a/astropy/wcs/wcsapi/wrappers/sliced_wcs.py
+++ b/astropy/wcs/wcsapi/wrappers/sliced_wcs.py
@@ -246,12 +246,29 @@ class SlicedLowLevelWCS(BaseWCSWrapper):
         world_arrays = tuple(map(np.asanyarray, world_arrays))
         world_arrays_new = []
         iworld_curr = -1
+        
+        # Get the dropped world dimensions info
+        dropped_info = self.dropped_world_dimensions
+        
+        # Create a map to quickly look up the dropped values by dimension index
+        dropped_values = {}
+        if 'value' in dropped_info and 'world_axis_physical_types' in dropped_info:
+            for i, phys_type in enumerate(dropped_info['world_axis_physical_types']):
+                for j, full_phys_type in enumerate(self._wcs.world_axis_physical_types):
+                    if phys_type == full_phys_type and j not in self._world_keep:
+                        dropped_values[j] = dropped_info['value'][i]
+        
+        # Build the world array for conversion
         for iworld in range(self._wcs.world_n_dim):
             if iworld in self._world_keep:
                 iworld_curr += 1
                 world_arrays_new.append(world_arrays[iworld_curr])
             else:
-                world_arrays_new.append(1.)
+                # Use the dropped dimension value if available
+                if iworld in dropped_values:
+                    world_arrays_new.append(dropped_values[iworld])
+                else:
+                    world_arrays_new.append(1.)
 
         world_arrays_new = np.broadcast_arrays(*world_arrays_new)
         pixel_arrays = list(self._wcs.world_to_pixel_values(*world_arrays_new))

