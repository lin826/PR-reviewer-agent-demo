diff --git a/django/db/migrations/loader.py b/django/db/migrations/loader.py
index 95a5062ec9..f3a697089d 100644
--- a/django/db/migrations/loader.py
+++ b/django/db/migrations/loader.py
@@ -88,15 +88,16 @@ class MigrationLoader:
                     continue
                 raise
             else:
-                # Empty directories are namespaces.
-                # getattr() needed on PY36 and older (replace w/attribute access).
-                if getattr(module, '__file__', None) is None:
-                    self.unmigrated_apps.add(app_config.label)
-                    continue
                 # Module is not a package (e.g. migrations.py).
                 if not hasattr(module, '__path__'):
                     self.unmigrated_apps.add(app_config.label)
                     continue
+                # Identify namespace packages by checking if __path__ is not a list
+                # (namespace packages use a custom iterable, not a list, for __path__)
+                # This allows regular packages without __file__ (like in frozen environments) to work.
+                if getattr(module, '__file__', None) is None and not isinstance(module.__path__, list):
+                    self.unmigrated_apps.add(app_config.label)
+                    continue
                 # Force a reload if it's already loaded (tests need this)
                 if was_loaded:
                     reload(module)
diff --git a/django/db/migrations/questioner.py b/django/db/migrations/questioner.py
index 9edb8180ef..f8d8c2bfae 100644
--- a/django/db/migrations/questioner.py
+++ b/django/db/migrations/questioner.py
@@ -48,7 +48,12 @@ class MigrationQuestioner:
             if getattr(migrations_module, "__file__", None):
                 filenames = os.listdir(os.path.dirname(migrations_module.__file__))
             elif hasattr(migrations_module, "__path__"):
-                if len(migrations_module.__path__) > 1:
+                # Properly handle both regular packages without __file__ (e.g., in frozen environments) 
+                # and namespace packages (which use a custom iterable for __path__, not a list)
+                if not isinstance(migrations_module.__path__, list):
+                    # It's a namespace package with custom __path__ iterable
+                    return False
+                elif len(migrations_module.__path__) > 1:
                     return False
                 filenames = os.listdir(list(migrations_module.__path__)[0])
             return not any(x.endswith(".py") for x in filenames if x != "__init__.py")

