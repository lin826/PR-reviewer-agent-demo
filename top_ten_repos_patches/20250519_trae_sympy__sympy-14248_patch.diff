diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py
index 8253b2f682..b3c852fa6e 100644
--- a/sympy/printing/latex.py
+++ b/sympy/printing/latex.py
@@ -1477,8 +1477,18 @@ def _print_Adjoint(self, expr):
             return r"%s^\dagger" % self._print(mat)
 
     def _print_MatAdd(self, expr):
+        from sympy.core.function import _coeff_isneg
         terms = list(expr.args)
-        tex = " + ".join(map(self._print, terms))
+        tex = ""
+        for i, term in enumerate(terms):
+            if i == 0:
+                pass
+            elif _coeff_isneg(term):
+                tex += " - "
+                term = -term
+            else:
+                tex += " + "
+            tex += self._print(term)
         return tex
 
     def _print_MatMul(self, expr):
diff --git a/sympy/printing/pretty/pretty.py b/sympy/printing/pretty/pretty.py
index db24f4c612..a1d14ef92e 100644
--- a/sympy/printing/pretty/pretty.py
+++ b/sympy/printing/pretty/pretty.py
@@ -819,7 +819,53 @@ def _print_BlockMatrix(self, B):
         return self._print(B.blocks)
 
     def _print_MatAdd(self, expr):
-        return self._print_seq(expr.args, None, None, ' + ')
+        if self.order == 'none':
+            terms = list(expr.args)
+        else:
+            terms = expr.args
+            
+        pforms, indices = [], []
+
+        def pretty_negative(pform, index):
+            """Prepend a minus sign to a pretty form. """
+            if index == 0:
+                if pform.height() > 1:
+                    pform_neg = '- '
+                else:
+                    pform_neg = '-'
+            else:
+                pform_neg = ' - '
+
+            if (pform.binding > prettyForm.NEG
+                or pform.binding == prettyForm.ADD):
+                p = stringPict(*pform.parens())
+            else:
+                p = pform
+            p = stringPict.next(pform_neg, p)
+            # Lower the binding to NEG, even if it was higher
+            return prettyForm(binding=prettyForm.NEG, *p)
+
+        for i, term in enumerate(terms):
+            if term.is_Mul and _coeff_isneg(term):
+                coeff, other = term.as_coeff_mul(rational=False)
+                pform = self._print(Mul(-coeff, *other, evaluate=False))
+                pforms.append(pretty_negative(pform, i))
+            elif term.is_Mul and not _coeff_isneg(term):
+                pforms.append(self._print(term))
+            elif _coeff_isneg(term):
+                pform = self._print(-term)
+                pforms.append(pretty_negative(pform, i))
+            else:
+                pforms.append(self._print(term))
+            indices.append(i)
+
+        if not pforms:
+            return self._print(S.Zero)
+
+        pform = prettyForm.__add__(*pforms)
+        if pform.binding == prettyForm.ADD:
+            pform.binding = prettyForm.NEG
+        return pform
 
     def _print_MatMul(self, expr):
         args = list(expr.args)
diff --git a/sympy/printing/str.py b/sympy/printing/str.py
index 0baefe0f7f..2415b300e7 100644
--- a/sympy/printing/str.py
+++ b/sympy/printing/str.py
@@ -312,8 +312,26 @@ def _print_HadamardProduct(self, expr):
             for arg in expr.args])
 
     def _print_MatAdd(self, expr):
-        return ' + '.join([self.parenthesize(arg, precedence(expr))
-            for arg in expr.args])
+        from sympy.core.function import _coeff_isneg
+        
+        PREC = precedence(expr)
+        terms = expr.args
+        l = []
+        for term in terms:
+            t = self._print(term)
+            if t.startswith('-'):
+                sign = "-"
+                t = t[1:]
+            else:
+                sign = "+"
+            if precedence(term) < PREC:
+                l.extend([sign, "(%s)" % t])
+            else:
+                l.extend([sign, t])
+        sign = l.pop(0)
+        if sign == '+':
+            sign = ""
+        return sign + ' '.join(l)
 
     def _print_NaN(self, expr):
         return 'nan'

