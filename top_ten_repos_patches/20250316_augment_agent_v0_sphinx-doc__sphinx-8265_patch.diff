diff --git b/sphinx/domains/python.py a/sphinx/domains/python.py
index efd4eca57..f4bc58b69 100644
--- b/sphinx/domains/python.py
+++ a/sphinx/domains/python.py
@@ -34,11 +34,11 @@ from sphinx.locale import _, __
 from sphinx.pycode.ast import ast, parse as ast_parse
 from sphinx.roles import XRefRole
 from sphinx.util import logging
 from sphinx.util.docfields import Field, GroupedField, TypedField
 from sphinx.util.docutils import SphinxDirective
-from sphinx.util.inspect import object_description, signature_from_str
+from sphinx.util.inspect import signature_from_str
 from sphinx.util.nodes import make_id, make_refnode
 from sphinx.util.typing import TextlikeNode
 
 if False:
     # For type annotation
@@ -200,11 +200,11 @@ def _parse_arglist(arglist: str, env: BuildEnvironment = None) -> addnodes.desc_
                 node += nodes.Text(' ')
                 node += addnodes.desc_sig_operator('', '=')
                 node += nodes.Text(' ')
             else:
                 node += addnodes.desc_sig_operator('', '=')
-            node += nodes.inline('', object_description(param.default), classes=['default_value'],
+            node += nodes.inline('', param.default, classes=['default_value'],
                                  support_smartquotes=False)
 
         params += node
         last_kind = param.kind
 
diff --git b/sphinx/pycode/ast.py a/sphinx/pycode/ast.py
index 5b5dd1a6d..9bafff11c 100644
--- b/sphinx/pycode/ast.py
+++ a/sphinx/pycode/ast.py
@@ -171,11 +171,11 @@ class _UnparseVisitor(ast.NodeVisitor):
     def visit_UnaryOp(self, node: ast.UnaryOp) -> str:
         return "%s %s" % (self.visit(node.op), self.visit(node.operand))
 
     def visit_Tuple(self, node: ast.Tuple) -> str:
         if node.elts:
-            return "(%s)" % ", ".join(self.visit(e) for e in node.elts)
+            return ", ".join(self.visit(e) for e in node.elts)
         else:
             return "()"
 
     if sys.version_info >= (3, 6):
         def visit_Constant(self, node: ast.Constant) -> str:
diff --git b/tests/test_util_inspect.py a/tests/test_util_inspect.py
index 9c624325b..c21eaaa16 100644
--- b/tests/test_util_inspect.py
+++ a/tests/test_util_inspect.py
@@ -320,14 +320,14 @@ def test_signature_from_str_annotations():
     assert sig.return_annotation == 'None'
 
 
 def test_signature_from_str_complex_annotations():
     sig = inspect.signature_from_str('() -> Tuple[str, int, ...]')
-    assert sig.return_annotation == 'Tuple[(str, int, ...)]'
+    assert sig.return_annotation == 'Tuple[str, int, ...]'
 
     sig = inspect.signature_from_str('() -> Callable[[int, int], int]')
-    assert sig.return_annotation == 'Callable[([int, int], int)]'
+    assert sig.return_annotation == 'Callable[[int, int], int]'
 
 
 def test_signature_from_str_kwonly_args():
     sig = inspect.signature_from_str('(a, *, b)')
     assert list(sig.parameters.keys()) == ['a', 'b']
