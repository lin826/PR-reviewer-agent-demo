diff --git a/sphinx/ext/inheritance_diagram.py b/sphinx/ext/inheritance_diagram.py
index 6e3985512..9ed930dbe 100644
--- a/sphinx/ext/inheritance_diagram.py
+++ b/sphinx/ext/inheritance_diagram.py
@@ -408,17 +408,27 @@ def html_visit_inheritance_diagram(self: HTML5Translator, node: inheritance_diag
     # Create a mapping from fully-qualified class names to URLs.
     graphviz_output_format = self.builder.env.config.graphviz_output_format.upper()
     current_filename = self.builder.current_docname + self.builder.out_suffix
+    current_depth = len(self.builder.current_docname.split('/')) - 1
+    
+    # For SVG output format, we need to adjust the path prefix based on the
+    # directory depth of the document. This is because the SVG is embedded 
+    # using an <object> tag, making relative links relative to the SVG file
+    # location (_images directory) rather than the HTML file location.
+    image_dir_relative = '../' * current_depth
+    
     urls = {}
     pending_xrefs = cast(Iterable[addnodes.pending_xref], node)
     for child in pending_xrefs:
         if child.get('refuri') is not None:
             if graphviz_output_format == 'SVG':
-                urls[child['reftitle']] = "../" + child.get('refuri')
+                # Add enough parent directory levels to reach the root directory,
+                # then append the target path
+                urls[child['reftitle']] = image_dir_relative + child.get('refuri')
             else:
                 urls[child['reftitle']] = child.get('refuri')
         elif child.get('refid') is not None:
             if graphviz_output_format == 'SVG':
-                urls[child['reftitle']] = '../' + current_filename + '#' + child.get('refid')
+                urls[child['reftitle']] = image_dir_relative + current_filename + '#' + child.get('refid')
             else:
                 urls[child['reftitle']] = '#' + child.get('refid')
 

