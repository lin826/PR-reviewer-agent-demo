diff --git a/pylint/utils/utils.py b/pylint/utils/utils.py
index fa7f7b92f..c87f9bd21 100644
--- a/pylint/utils/utils.py
+++ b/pylint/utils/utils.py
@@ -210,28 +210,54 @@ def register_plugins(linter: PyLinter, directory: str) -> None:
 
 
 def _splitstrip(string: str, sep: str = ",") -> list[str]:
     """Return a list of stripped string by splitting the string given as
     argument on `sep` (',' by default), empty strings are discarded.
+    Separators escaped with a backslash are preserved.
 
     >>> _splitstrip('a, b, c   ,  4,,')
     ['a', 'b', 'c', '4']
     >>> _splitstrip('a')
     ['a']
     >>> _splitstrip('a,\nb,\nc,')
     ['a', 'b', 'c']
+    >>> _splitstrip(r'a, b\, c, d')
+    ['a', 'b, c', 'd']
+    >>> _splitstrip(r'(foo{1\,3})')
+    ['(foo{1,3})']
 
     :type string: str or unicode
     :param string: a csv line
 
     :type sep: str or unicode
     :param sep: field separator, default to the comma (',')
 
-    :rtype: str or unicode
-    :return: the unquoted string (or the input string if it wasn't quoted)
+    :rtype: list[str]
+    :return: a list of stripped strings
     """
-    return [word.strip() for word in string.split(sep) if word.strip()]
+    result = []
+    current = ""
+    i = 0
+    while i < len(string):
+        if string[i] == '\\' and i + 1 < len(string) and string[i + 1] == sep:
+            # Escaped separator, add the separator without the escape
+            current += sep
+            i += 2
+        elif string[i] == sep:
+            # Unescaped separator, add the current part to the result
+            if current.strip():
+                result.append(current.strip())
+            current = ""
+            i += 1
+        else:
+            # Regular character, add it to the current part
+            current += string[i]
+            i += 1
+    # Add the last part if it's not empty
+    if current.strip():
+        result.append(current.strip())
+    return result
 
 
 def _unquote(string: str) -> str:
     """Remove optional quotes (simple or double) from the string.
 
