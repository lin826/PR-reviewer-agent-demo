diff --git a/django/db/models/sql/subqueries.py b/django/db/models/sql/subqueries.py
index 04063f73bc..72334d07f9 100644
--- a/django/db/models/sql/subqueries.py
+++ b/django/db/models/sql/subqueries.py
@@ -132,11 +132,24 @@ class UpdateQuery(Query):
         result = []
         for model, values in self.related_updates.items():
             query = UpdateQuery(model)
             query.values = values
             if self.related_ids is not None:
-                query.add_filter("pk__in", self.related_ids)
+                # For multiple inheritance, we need to use the correct parent link field
+                # to get the right primary key values for the parent model
+                parent_link_field = self.get_meta().parents.get(model)
+                if parent_link_field:
+                    # Create a subquery to get the correct parent link field values
+                    from django.db.models.sql.query import Query
+                    subquery = Query(self.model)
+                    subquery.add_filter("pk__in", self.related_ids)
+                    subquery.clear_select_clause()
+                    subquery.add_fields([parent_link_field.name])
+                    query.add_filter("pk__in", subquery)
+                else:
+                    # Fallback to the original behavior if no parent link field found
+                    query.add_filter("pk__in", self.related_ids)
             result.append(query)
         return result
 
 
 class InsertQuery(Query):
