diff --git a/lib/matplotlib/widgets.py b/lib/matplotlib/widgets.py
index a199e45d40..850949e108 100644
--- a/lib/matplotlib/widgets.py
+++ b/lib/matplotlib/widgets.py
@@ -2107,7 +2107,8 @@ class SpanSelector(_SelectorWidget):
 
         if self._interactive:
             self._edge_order = ['min', 'max']
-            self._setup_edge_handle(props)
+            # Initialize handles with safe positions that don't affect axes limits
+            self._setup_edge_handle_safe(props)
 
         self._active_handle = None
 
@@ -2155,6 +2156,22 @@ class SpanSelector(_SelectorWidget):
         else:
             self.artists.append(self._rect)
 
+    def _setup_edge_handle_safe(self, props):
+        """Setup edge handles with safe positions that don't affect axes limits."""
+        # Get current axes limits to use as safe positions
+        if self.direction == 'horizontal':
+            xlim = self.ax.get_xlim()
+            safe_positions = [xlim[0], xlim[1]]
+        else:
+            ylim = self.ax.get_ylim()
+            safe_positions = [ylim[0], ylim[1]]
+        
+        self._edge_handles = ToolLineHandles(self.ax, safe_positions,
+                                             direction=self.direction,
+                                             line_props=props,
+                                             useblit=self.useblit)
+        self.artists.extend([line for line in self._edge_handles.artists])
+
     def _setup_edge_handle(self, props):
         self._edge_handles = ToolLineHandles(self.ax, self.extents,
                                              direction=self.direction,
@@ -2212,7 +2229,7 @@ class SpanSelector(_SelectorWidget):
             self._direction = direction
             self.new_axes(self.ax)
             if self._interactive:
-                self._setup_edge_handle(self._edge_handles._line_props)
+                self._setup_edge_handle_safe(self._edge_handles._line_props)
         else:
             self._direction = direction
 
