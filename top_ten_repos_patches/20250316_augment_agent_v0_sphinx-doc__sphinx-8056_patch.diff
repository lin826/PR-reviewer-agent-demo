diff --git b/sphinx/ext/napoleon/docstring.py a/sphinx/ext/napoleon/docstring.py
index 1f7399d03..b3daa06f1 100644
--- b/sphinx/ext/napoleon/docstring.py
+++ a/sphinx/ext/napoleon/docstring.py
@@ -410,38 +410,18 @@ class GoogleDocstring:
         if _name:
             if _type:
                 if '`' in _type:
                     field = '**%s** (%s)%s' % (_name, _type, separator)
                 else:
-                    # Handle types with commas, especially for optional parameters
-                    if ',' in _type and 'optional' in _type:
-                        # Split the type at the comma and format each part
-                        parts = _type.split(',')
-                        formatted_parts = []
-                        for part in parts:
-                            part = part.strip()
-                            formatted_parts.append('*%s*' % part)
-                        field = '**%s** (%s)%s' % (_name, ', '.join(formatted_parts), separator)
-                    else:
-                        field = '**%s** (*%s*)%s' % (_name, _type, separator)
+                    field = '**%s** (*%s*)%s' % (_name, _type, separator)
             else:
                 field = '**%s**%s' % (_name, separator)
         elif _type:
             if '`' in _type:
                 field = '%s%s' % (_type, separator)
             else:
-                # Handle types with commas, especially for optional parameters
-                if ',' in _type and 'optional' in _type:
-                    # Split the type at the comma and format each part
-                    parts = _type.split(',')
-                    formatted_parts = []
-                    for part in parts:
-                        part = part.strip()
-                        formatted_parts.append('*%s*' % part)
-                    field = '(%s)%s' % (', '.join(formatted_parts), separator)
-                else:
-                    field = '*%s*%s' % (_type, separator)
+                field = '*%s*%s' % (_type, separator)
         else:
             field = ''
 
         if has_desc:
             _desc = self._fix_field_desc(_desc)
