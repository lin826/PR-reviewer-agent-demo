--- a/django/contrib/auth/checks.py
+++ b/django/contrib/auth/checks.py
@@ -4,8 +4,24 @@
 from django.apps import apps
 from django.conf import settings
 from django.core import checks
+from django.db.models import UniqueConstraint
 
 from .management import _get_builtin_permissions
+
+
+def _check_username_uniqueness_in_constraints(cls, username_field):
+    """
+    Check if the USERNAME_FIELD is made unique by any UniqueConstraint.
+    Returns True if the field is covered by an unconditional single-field UniqueConstraint.
+    """
+    for constraint in cls._meta.constraints:
+        if isinstance(constraint, UniqueConstraint):
+            # Check if this constraint makes the username field unique
+            if (len(constraint.fields) == 1 and 
+                username_field in constraint.fields and 
+                (not hasattr(constraint, 'condition') or constraint.condition is None)):
+                return True
+    return False
 
 
 def check_user_model(app_configs=None, **kwargs):
@@ -52,7 +68,10 @@
         )
 
     # Check that the username field is unique
-    if not cls._meta.get_field(cls.USERNAME_FIELD).unique:
+    username_field_unique = (cls._meta.get_field(cls.USERNAME_FIELD).unique or 
+                             _check_username_uniqueness_in_constraints(cls, cls.USERNAME_FIELD))
+    
+    if not username_field_unique:
         if (settings.AUTHENTICATION_BACKENDS ==
                 ['django.contrib.auth.backends.ModelBackend']):
             errors.append(
