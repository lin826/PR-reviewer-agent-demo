diff --git a/django/db/models/sql/subqueries.py b/django/db/models/sql/subqueries.py
index 04063f73bc..d0120cba88 100644
--- a/django/db/models/sql/subqueries.py
+++ b/django/db/models/sql/subqueries.py
@@ -132,11 +132,26 @@ class UpdateQuery(Query):
         result = []
         for model, values in self.related_updates.items():
             query = UpdateQuery(model)
             query.values = values
             if self.related_ids is not None:
-                query.add_filter("pk__in", self.related_ids)
+                parent_link = self.model._meta.parents.get(model)
+                if parent_link:
+                    # For multi-table inheritance, we need to get the correct parent IDs
+                    # from the child model's parent link field
+                    parent_link_attname = parent_link.attname  # e.g., 'otherbase_ptr_id'
+                    
+                    # Get the actual parent IDs for this parent model
+                    parent_ids = list(self.model._default_manager.filter(
+                        pk__in=self.related_ids
+                    ).values_list(parent_link_attname, flat=True))
+                    
+                    # Use the parent model's primary key with the correct parent IDs
+                    query.add_filter("pk__in", parent_ids)
+                else:
+                    # For normal inheritance, use the primary keys directly
+                    query.add_filter("pk__in", self.related_ids)
             result.append(query)
         return result
 
 
 class InsertQuery(Query):
