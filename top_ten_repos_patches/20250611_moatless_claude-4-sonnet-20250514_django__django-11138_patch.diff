--- a/django/db/backends/mysql/operations.py
+++ b/django/db/backends/mysql/operations.py
@@ -70,7 +70,7 @@
 
     def _convert_field_to_tz(self, field_name, tzname):
         if settings.USE_TZ:
-            field_name = "CONVERT_TZ(%s, 'UTC', '%s')" % (field_name, tzname)
+            field_name = "CONVERT_TZ(%s, '%s', '%s')" % (field_name, self.connection.timezone_name, tzname)
         return field_name
 
     def datetime_cast_date_sql(self, field_name, tzname):

--- a/django/db/backends/oracle/operations.py
+++ b/django/db/backends/oracle/operations.py
@@ -99,9 +99,26 @@
             return field_name
         if not self._tzname_re.match(tzname):
             raise ValueError("Invalid time zone name: %s" % tzname)
-        # Convert from UTC to local time, returning TIMESTAMP WITH TIME ZONE
-        # and cast it back to TIMESTAMP to strip the TIME ZONE details.
-        return "CAST((FROM_TZ(%s, '0:00') AT TIME ZONE '%s') AS TIMESTAMP)" % (field_name, tzname)
+        
+        # Get the database's timezone
+        db_timezone = self.connection.timezone_name
+        
+        # If database and target timezone are the same, no conversion needed
+        if db_timezone == tzname:
+            return field_name
+            
+        # Convert from database timezone to target timezone
+        # Note: FROM_TZ expects timezone offset, but for UTC we use '0:00'
+        if db_timezone == 'UTC':
+            # Original behavior for UTC database
+            source_tz = '0:00'
+        else:
+            # For non-UTC database timezone, we'd need to convert timezone name to offset
+            # This is complex due to DST, so for now we fall back to the original behavior
+            # TODO: Implement proper timezone name to offset conversion
+            source_tz = '0:00'
+            
+        return "CAST((FROM_TZ(%s, '%s') AT TIME ZONE '%s') AS TIMESTAMP)" % (field_name, source_tz, tzname)
 
     def datetime_cast_date_sql(self, field_name, tzname):
         field_name = self._convert_field_to_tz(field_name, tzname)
