diff --git a/lib/matplotlib/figure.py b/lib/matplotlib/figure.py
index dab2bc4a5a..178406c432 100644
--- a/lib/matplotlib/figure.py
+++ b/lib/matplotlib/figure.py
@@ -2276,10 +2276,27 @@ class SubFigure(FigureBase):
         gs = self._subplotspec.get_gridspec()
         wr = np.asarray(gs.get_width_ratios())
         hr = np.asarray(gs.get_height_ratios())
-        dx = wr[self._subplotspec.colspan].sum() / wr.sum()
-        dy = hr[self._subplotspec.rowspan].sum() / hr.sum()
-        x0 = wr[:self._subplotspec.colspan.start].sum() / wr.sum()
-        y0 = 1 - hr[:self._subplotspec.rowspan.stop].sum() / hr.sum()
+        
+        # Get wspace and hspace from gridspec
+        wspace = gs.wspace if gs.wspace is not None else 0
+        hspace = gs.hspace if gs.hspace is not None else 0
+        
+        # Calculate total ratios accounting for spacing
+        nrows, ncols = gs.get_geometry()
+        total_width = wr.sum() + wspace * (ncols - 1) * np.mean(wr)
+        total_height = hr.sum() + hspace * (nrows - 1) * np.mean(hr)
+        
+        # Calculate width and height of the subfigure
+        dx = wr[self._subplotspec.colspan].sum() / total_width
+        dy = hr[self._subplotspec.rowspan].sum() / total_height
+        
+        # Calculate position accounting for spacing
+        col_start = self._subplotspec.colspan.start
+        row_start = self._subplotspec.rowspan.start
+        x0 = (wr[:col_start].sum() + wspace * col_start * np.mean(wr)) / total_width
+        y0 = 1 - (hr[:self._subplotspec.rowspan.stop].sum() + 
+                 hspace * self._subplotspec.rowspan.stop * np.mean(hr)) / total_height
+        
         if self.bbox_relative is None:
             self.bbox_relative = Bbox.from_bounds(x0, y0, dx, dy)
         else:

