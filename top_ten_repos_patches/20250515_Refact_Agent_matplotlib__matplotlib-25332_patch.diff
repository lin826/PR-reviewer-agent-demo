diff --git a/lib/matplotlib/cbook.py b/lib/matplotlib/cbook.py
index c9699b2e21..ea55c14a2c 100644
--- a/lib/matplotlib/cbook.py
+++ b/lib/matplotlib/cbook.py
@@ -845,6 +845,33 @@ class Grouper:
         self.clean()
         siblings = self._mapping.get(weakref.ref(a), [weakref.ref(a)])
         return [x() for x in siblings]
+        
+    def __getstate__(self):
+        """
+        Return a picklable state for this object.
+        
+        Instead of returning the weakrefs, we return the actual objects.
+        """
+        self.clean()
+        # Create a list of lists of objects instead of a dict of weakrefs
+        unique_groups = {id(group): group for group in self._mapping.values()}
+        object_groups = [[x() for x in group] for group in unique_groups.values()]
+        return {'groups': object_groups}
+        
+    def __setstate__(self, state):
+        """
+        Restore the object from a pickled state.
+        
+        Recreate the weakrefs from the list of objects.
+        """
+        # Recreate the mapping from the list of lists of objects
+        self._mapping = {}
+        for group in state['groups']:
+            if not group:  # Skip empty groups
+                continue
+            weakref_group = [weakref.ref(x) for x in group]
+            for obj in group:
+                self._mapping[weakref.ref(obj)] = weakref_group
 
 
 class GrouperView:
