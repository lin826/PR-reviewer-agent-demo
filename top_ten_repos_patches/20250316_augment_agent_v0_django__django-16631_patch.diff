diff --git a/django/contrib/auth/__init__.py b/django/contrib/auth/__init__.py
index 155330c596..f62f160e99 100644
--- a/django/contrib/auth/__init__.py
+++ b/django/contrib/auth/__init__.py
@@ -197,13 +197,34 @@ def get_user(request):
             backend = load_backend(backend_path)
             user = backend.get_user(user_id)
             # Verify the session
             if hasattr(user, "get_session_auth_hash"):
                 session_hash = request.session.get(HASH_SESSION_KEY)
-                session_hash_verified = session_hash and constant_time_compare(
-                    session_hash, user.get_session_auth_hash()
-                )
+                if not session_hash:
+                    session_hash_verified = False
+                else:
+                    # First try with the current SECRET_KEY
+                    current_hash = user.get_session_auth_hash()
+                    session_hash_verified = constant_time_compare(
+                        session_hash, current_hash
+                    )
+                    
+                    # If that fails, try with each key in SECRET_KEY_FALLBACKS
+                    if not session_hash_verified and settings.SECRET_KEY_FALLBACKS:
+                        key_salt = "django.contrib.auth.models.AbstractBaseUser.get_session_auth_hash"
+                        for fallback_key in settings.SECRET_KEY_FALLBACKS:
+                            from django.utils.crypto import salted_hmac
+                            fallback_hash = salted_hmac(
+                                key_salt,
+                                user.password,
+                                secret=fallback_key,
+                                algorithm="sha256",
+                            ).hexdigest()
+                            if constant_time_compare(session_hash, fallback_hash):
+                                session_hash_verified = True
+                                break
+                
                 if not session_hash_verified:
                     request.session.flush()
                     user = None
 
     return user or AnonymousUser()
