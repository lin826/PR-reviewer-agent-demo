diff --git a/sympy/printing/pycode.py b/sympy/printing/pycode.py
index 3a72ab606c..b4364113c6 100644
--- a/sympy/printing/pycode.py
+++ b/sympy/printing/pycode.py
@@ -465,6 +465,12 @@ def _print_Symbol(self, expr):
         else:
             return name
 
+    def _print_Min(self, expr):
+        return "min({})".format(", ".join(self._print(arg) for arg in expr.args))
+
+    def _print_Max(self, expr):
+        return "max({})".format(", ".join(self._print(arg) for arg in expr.args))
+
     _print_lowergamma = CodePrinter._print_not_supported
     _print_uppergamma = CodePrinter._print_not_supported
     _print_fresnelc = CodePrinter._print_not_supported
diff --git a/sympy/printing/tests/test_pycode.py b/sympy/printing/tests/test_pycode.py
index 9c1285d7dd..33d82795fa 100644
--- a/sympy/printing/tests/test_pycode.py
+++ b/sympy/printing/tests/test_pycode.py
@@ -392,3 +392,25 @@ def test_numerical_accuracy_functions():
     assert prntr.doprint(expm1(x)) == 'numpy.expm1(x)'
     assert prntr.doprint(log1p(x)) == 'numpy.log1p(x)'
     assert prntr.doprint(cosm1(x)) == 'scipy.special.cosm1(x)'
+
+
+def test_Min_Max():
+    from sympy.functions.elementary.miscellaneous import Min, Max
+    
+    # Test basic Min/Max with PythonCodePrinter
+    prntr = PythonCodePrinter()
+    assert prntr.doprint(Min(x, y)) == 'min(x, y)'
+    assert prntr.doprint(Max(x, y)) == 'max(x, y)'
+    
+    # Test with multiple arguments
+    assert prntr.doprint(Min(x, y, z)) == 'min(x, y, z)'
+    assert prntr.doprint(Max(x, y, z)) == 'max(x, y, z)'
+    
+    # Test with expressions (SymPy may reorder arguments)
+    assert prntr.doprint(Min(x**2, y**2)) == 'min(x**2, y**2)'
+    assert prntr.doprint(Max(x + y, z)) == 'max(z, x + y)'
+    
+    # Test that MpmathPrinter inherits the behavior
+    prntr = MpmathPrinter()
+    assert prntr.doprint(Min(x, y)) == 'min(x, y)'
+    assert prntr.doprint(Max(x, y)) == 'max(x, y)'
