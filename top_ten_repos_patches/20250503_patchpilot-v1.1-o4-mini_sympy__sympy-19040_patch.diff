diff --git a/sympy/polys/constructor.py b/sympy/polys/constructor.py
index 12d9de96e9..a63e97f3f9 100644
--- a/sympy/polys/constructor.py
+++ b/sympy/polys/constructor.py
@@ -258,4 +258,4 @@ def construct_domain(obj, **args):
         else:
             return domain, coeffs
     else:
-        return domain, coeffs[0]
+        return domain, coeffs[0]
diff --git a/sympy/polys/numberfields.py b/sympy/polys/numberfields.py
index d10f04eb1e..93acf2254a 100644
--- a/sympy/polys/numberfields.py
+++ b/sympy/polys/numberfields.py
@@ -1134,4 +1134,4 @@ def isolate(alg, eps=None, fast=False):
     if eps is not None:
         a, b = poly.refine_root(a, b, eps=eps, fast=fast)
 
-    return (a, b)
+    return (a, b)
diff --git a/sympy/polys/polytools.py b/sympy/polys/polytools.py
index 68b69d1a24..e99b914184 100644
--- a/sympy/polys/polytools.py
+++ b/sympy/polys/polytools.py
@@ -5974,7 +5974,11 @@ def _generic_factor_list(expr, gens, args, method):
     options.allowed_flags(args, ['frac', 'polys'])
     opt = options.build_options(gens, args)
 
+
     expr = sympify(expr)
+    if opt.extension and not opt.gens:
+        opt = opt.clone(dict(gens=tuple(ordered(expr.free_symbols))))
+
 
     if isinstance(expr, (Expr, Poly)):
         if isinstance(expr, Poly):
@@ -6017,9 +6021,16 @@ def _generic_factor(expr, gens, args, method):
     """Helper function for :func:`sqf` and :func:`factor`. """
     fraction = args.pop('fraction', True)
     options.allowed_flags(args, [])
+
     opt = options.build_options(gens, args)
+
+    expr_sym = sympify(expr)
+    if opt.extension and not opt.gens:
+        opt = opt.clone(dict(gens=tuple(ordered(expr_sym.free_symbols))))
+
     opt['fraction'] = fraction
-    return _symbolic_factor(sympify(expr), opt, method)
+    return _symbolic_factor(expr_sym, opt, method)
+
 
 
 def to_rational_coeffs(f):
@@ -7149,4 +7160,4 @@ def _poly(expr, opt):
 
     opt = options.build_options(gens, args)
 
-    return _poly(expr, opt)
+    return _poly(expr, opt)
