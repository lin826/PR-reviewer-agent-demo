diff --git a/seaborn/_core/plot.py b/seaborn/_core/plot.py
index 4f0290a4..ab77588b 100644
--- a/seaborn/_core/plot.py
+++ b/seaborn/_core/plot.py
@@ -25,7 +25,7 @@ from seaborn._marks.base import Mark
 from seaborn._stats.base import Stat
 from seaborn._core.data import PlotData
 from seaborn._core.moves import Move
-from seaborn._core.scales import Scale
+from seaborn._core.scales import Scale, Nominal
 from seaborn._core.subplots import Subplots
 from seaborn._core.groupby import GroupBy
 from seaborn._core.properties import PROPERTIES, Property
@@ -1631,8 +1631,14 @@ class Plotter:
             ax = sub["ax"]
             for axis in "xy":
                 axis_key = sub[axis]
+                
+                # Check if this axis uses a Nominal scale and apply categorical-style adjustments
+                scale_obj = p._scales.get(axis_key)
+                if scale_obj is not None and isinstance(scale_obj, Nominal):
+                    scale_obj.adjust_axis(axis, ax)
+                    continue
 
-                # Axis limits
+                # Axis limits (for non-Nominal scales)
                 if axis_key in p._limits:
                     convert_units = getattr(ax, f"{axis}axis").convert_units
                     a, b = p._limits[axis_key]
diff --git a/seaborn/_core/scales.py b/seaborn/_core/scales.py
index bbd71ec1..4bfded14 100644
--- a/seaborn/_core/scales.py
+++ b/seaborn/_core/scales.py
@@ -145,6 +145,33 @@ class Nominal(Scale):
     order: list | None = None
 
     _priority: ClassVar[int] = 3
+    
+    def adjust_axis(self, axis, ax):
+        """
+        Adjust the axis to match categorical axis behavior:
+        1. Set limits to +/- 0.5 from first and last ticks
+        2. Turn off the grid for this axis
+        3. Invert the y-axis if this is on the y-axis
+        
+        Parameters
+        ----------
+        axis : str
+            The axis name ('x' or 'y')
+        ax : matplotlib Axes
+            The matplotlib axes to adjust
+        """
+        # Get the number of ticks (categories)
+        n = len(getattr(ax, f"get_{axis}ticks")())
+        
+        # Disable grid for this axis
+        getattr(ax, f"{axis}axis").grid(False)
+        
+        # Set limits with +/- 0.5 padding
+        if axis == "x":
+            ax.set_xlim(-.5, n - .5, auto=None)
+        else:
+            # Invert y-axis for categorical variables
+            ax.set_ylim(n - .5, -.5, auto=None)
 
     def _setup(
         self, data: Series, prop: Property, axis: Axis | None = None,

