diff --git a/sphinx/ext/inheritance_diagram.py b/sphinx/ext/inheritance_diagram.py
index 6e3985512..e7bbaf754 100644
--- a/sphinx/ext/inheritance_diagram.py
+++ b/sphinx/ext/inheritance_diagram.py
@@ -410,17 +410,44 @@ def html_visit_inheritance_diagram(self: HTML5Translator, node: inheritance_diag
     current_filename = self.builder.current_docname + self.builder.out_suffix
     urls = {}
     pending_xrefs = cast(Iterable[addnodes.pending_xref], node)
+    
+    # helper for SVG path calculation
+    from pathlib import PurePosixPath
+    images_dir = PurePosixPath(self.builder.imagedir).name  # "…/_images"
+
+    def to_svg_path(target: str) -> str:
+        """
+        Return *target* rewritten to be correct when evaluated
+        inside an SVG file located in *images_dir*.
+        *target* may be:
+          • path relative to the current document
+          • absolute URI (http/https/ftp/…) – left untouched
+        """
+        # external link – leave as-is
+        if "://" in target or target.startswith(("/", "#")):
+            return target
+
+        # 1. resolve target relative to current document to obtain a
+        #    path that is valid when rooted at the build output dir.
+        current_dir = PurePosixPath(current_filename).parent
+        absolute_target = (current_dir / target).as_posix()
+
+        # 2. re-compute a new path *from _images/* to that target.
+        rel = PurePosixPath(absolute_target).relative_to(
+            PurePosixPath(images_dir).parent
+        )
+        return rel.as_posix()
+    
     for child in pending_xrefs:
         if child.get('refuri') is not None:
-            if graphviz_output_format == 'SVG':
-                urls[child['reftitle']] = "../" + child.get('refuri')
-            else:
-                urls[child['reftitle']] = child.get('refuri')
+            uri = child.get('refuri')
+            urls[child['reftitle']] = (
+                to_svg_path(uri) if graphviz_output_format == 'SVG' else uri
+            )
         elif child.get('refid') is not None:
-            if graphviz_output_format == 'SVG':
-                urls[child['reftitle']] = '../' + current_filename + '#' + child.get('refid')
-            else:
-                urls[child['reftitle']] = '#' + child.get('refid')
+            anchor_uri = f"{current_filename}#{child.get('refid')}"
+            target = to_svg_path(anchor_uri) if graphviz_output_format == 'SVG' else f"#{child.get('refid')}"
+            urls[child['reftitle']] = target
 
     dotcode = graph.generate_dot(name, urls, env=self.builder.env)
     render_dot_html(self, node, dotcode, {}, 'inheritance', 'inheritance',
