diff --git a/django/contrib/staticfiles/storage.py b/django/contrib/staticfiles/storage.py
index 04c866a..6d62a7b 100644
--- a/django/contrib/staticfiles/storage.py
+++ b/django/contrib/staticfiles/storage.py
@@ -218,8 +218,12 @@ class HashedFilesMixin:
         if dry_run:
             return
 
+
+        from collections import OrderedDict
+
         # where to store the new paths
         hashed_files = {}
+        processed_files = OrderedDict()
 
         # build a list of adjustable files
         adjustable_paths = [
@@ -229,14 +233,28 @@ class HashedFilesMixin:
         # Do a single pass first. Post-process all files once, then repeat for
         # adjustable files.
         for name, hashed_name, processed, _ in self._post_process(paths, adjustable_paths, hashed_files):
-            yield name, hashed_name, processed
+            if isinstance(processed, Exception):
+                yield name, hashed_name, processed
+                continue
+            if name in processed_files:
+                prev_hashed_name, prev_processed = processed_files[name]
+                processed_files[name] = (hashed_name, prev_processed or processed)
+            else:
+                processed_files[name] = (hashed_name, processed)
 
         paths = {path: paths[path] for path in adjustable_paths}
 
         for i in range(self.max_post_process_passes):
             substitutions = False
             for name, hashed_name, processed, subst in self._post_process(paths, adjustable_paths, hashed_files):
-                yield name, hashed_name, processed
+                if isinstance(processed, Exception):
+                    yield name, hashed_name, processed
+                    continue
+                if name in processed_files:
+                    prev_hashed_name, prev_processed = processed_files[name]
+                    processed_files[name] = (hashed_name, prev_processed or processed)
+                else:
+                    processed_files[name] = (hashed_name, processed)
                 substitutions = substitutions or subst
 
             if not substitutions:
@@ -245,9 +263,13 @@ class HashedFilesMixin:
         if substitutions:
             yield 'All', None, RuntimeError('Max post-process passes exceeded.')
 
+        for name, (hashed_name, processed) in processed_files.items():
+            yield name, hashed_name, processed
+
         # Store the processed paths
         self.hashed_files.update(hashed_files)
 
+
     def _post_process(self, paths, adjustable_paths, hashed_files):
         # Sort the files by directory level
         def path_level(name):
