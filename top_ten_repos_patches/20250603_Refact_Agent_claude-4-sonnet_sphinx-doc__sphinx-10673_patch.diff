diff --git a/sphinx/directives/other.py b/sphinx/directives/other.py
index 35e16e623..5e2c4f837 100644
--- a/sphinx/directives/other.py
+++ b/sphinx/directives/other.py
@@ -119,16 +119,25 @@ class TocTree(SphinxDirective):
                 if url_re.match(ref) or ref == 'self':
                     toctree['entries'].append((title, ref))
                 elif docname not in self.env.found_docs:
-                    if excluded(self.env.doc2path(docname, False)):
-                        message = __('toctree contains reference to excluded document %r')
-                        subtype = 'excluded'
+                    # Check if this is a special page that Sphinx automatically generates
+                    from sphinx.domains.std import StandardDomain
+                    std_domain = self.env.get_domain('std')
+                    if docname in std_domain.data['labels'] or docname in std_domain.data['anonlabels']:
+                        # This is a special page like genindex, modindex, search - treat it as valid
+                        toctree['entries'].append((title, docname))
+                        toctree['includefiles'].append(docname)
                     else:
-                        message = __('toctree contains reference to nonexisting document %r')
-                        subtype = 'not_readable'
-
-                    logger.warning(message, docname, type='toc', subtype=subtype,
-                                   location=toctree)
-                    self.env.note_reread()
+                        # Not a special page, check if excluded or nonexistent
+                        if excluded(self.env.doc2path(docname, False)):
+                            message = __('toctree contains reference to excluded document %r')
+                            subtype = 'excluded'
+                        else:
+                            message = __('toctree contains reference to nonexisting document %r')
+                            subtype = 'not_readable'
+
+                        logger.warning(message, docname, type='toc', subtype=subtype,
+                                       location=toctree)
+                        self.env.note_reread()
                 else:
                     if docname in all_docnames:
                         all_docnames.remove(docname)
diff --git a/sphinx/environment/adapters/toctree.py b/sphinx/environment/adapters/toctree.py
index 9678e3c7c..5fbd7a69b 100644
--- a/sphinx/environment/adapters/toctree.py
+++ b/sphinx/environment/adapters/toctree.py
@@ -165,14 +165,23 @@ class TocTree:
                                        ref, location=toctreenode)
                 except KeyError:
                     # this is raised if the included file does not exist
-                    if excluded(self.env.doc2path(ref, False)):
-                        message = __('toctree contains reference to excluded document %r')
-                    elif not included(self.env.doc2path(ref, False)):
-                        message = __('toctree contains reference to non-included document %r')
+                    # Check if this is a special page that Sphinx automatically generates
+                    from sphinx.domains.std import StandardDomain
+                    std_domain = self.env.get_domain('std')
+                    if (ref in std_domain.data['labels'] or 
+                        ref in std_domain.data['anonlabels']):
+                        # This is a special page like genindex, modindex, search - skip warning
+                        pass
                     else:
-                        message = __('toctree contains reference to nonexisting document %r')
+                        # Not a special page, check if excluded or nonexistent
+                        if excluded(self.env.doc2path(ref, False)):
+                            message = __('toctree contains reference to excluded document %r')
+                        elif not included(self.env.doc2path(ref, False)):
+                            message = __('toctree contains reference to non-included document %r')
+                        else:
+                            message = __('toctree contains reference to nonexisting document %r')
 
-                    logger.warning(message, ref, location=toctreenode)
+                        logger.warning(message, ref, location=toctreenode)
                 else:
                     # if titles_only is given, only keep the main title and
                     # sub-toctrees
