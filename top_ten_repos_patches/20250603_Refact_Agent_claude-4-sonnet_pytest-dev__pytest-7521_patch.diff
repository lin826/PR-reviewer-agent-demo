diff --git a/src/_pytest/capture.py b/src/_pytest/capture.py
index 3f9c60fb9..f538b67ec 100644
--- a/src/_pytest/capture.py
+++ b/src/_pytest/capture.py
@@ -388,6 +388,7 @@ class FDCaptureBinary:
                 TemporaryFile(buffering=0),  # type: ignore[arg-type]
                 encoding="utf-8",
                 errors="replace",
+                newline="",
                 write_through=True,
             )
             if targetfd in patchsysdict:
diff --git a/testing/test_capture.py b/testing/test_capture.py
index a3bd4b623..12438f7ed 100644
--- a/testing/test_capture.py
+++ b/testing/test_capture.py
@@ -1579,4 +1579,37 @@ def test_logging_while_collecting(testdir):
         ]
     )
     result.stdout.no_fnmatch_line("*Captured stderr call*")
+
+
+@pytest.mark.parametrize("fixture", ["capsys", "capfd"])
+def test_carriage_return_preservation(testdir, fixture):
+    """Test that carriage returns are preserved in captured output.
+    
+    Regression test for issue where capfd.readouterr() was converting \\r to \\n.
+    """
+    testdir.makepyfile(
+        f"""
+        import sys
+        
+        def test_single_carriage_return({fixture}):
+            print('Greetings from DOS', end='\\r')
+            out, err = {fixture}.readouterr()
+            assert out == 'Greetings from DOS\\r'
+            assert err == ''
+
+        def test_mixed_line_endings({fixture}):
+            print('Unix\\nDOS\\r\\nMac\\r', end='')
+            out, err = {fixture}.readouterr()
+            assert out == 'Unix\\nDOS\\r\\nMac\\r'
+            assert err == ''
+
+        def test_carriage_return_in_stderr({fixture}):
+            print('Error message', end='\\r', file=sys.stderr)
+            out, err = {fixture}.readouterr()
+            assert out == ''
+            assert err == 'Error message\\r'
+        """
+    )
+    result = testdir.runpytest()
+    result.assert_outcomes(passed=3)
     result.stdout.no_fnmatch_line("*during collection*")
