diff --git a/sphinx/domains/python.py b/sphinx/domains/python.py
index 38aeecb..5e1cd08 100644
--- a/sphinx/domains/python.py
+++ b/sphinx/domains/python.py
@@ -856,15 +856,25 @@ class PyProperty(PyObject):
         'type': directives.unchanged,
     })
 
+
     def handle_signature(self, sig: str, signode: desc_signature) -> Tuple[str, str]:
+        # Temporarily remove the ``type`` option so the base implementation does
+        # not emit a literal annotation. It will be restored afterwards.
+        typ = self.options.pop('type', None)
+
         fullname, prefix = super().handle_signature(sig, signode)
 
-        typ = self.options.get('type')
         if typ:
-            signode += addnodes.desc_annotation(typ, ': ' + typ)
+            # Re‑add the annotation with proper parsing so that cross‑references
+            # are generated for the referenced types.
+            annotations = _parse_annotation(typ, self.env)
+            signode += addnodes.desc_annotation(typ, '', nodes.Text(': '), *annotations)
+            # Restore the original option to leave state unchanged.
+            self.options['type'] = typ
 
         return fullname, prefix
 
+
     def get_signature_prefix(self, sig: str) -> str:
         prefix = []
         if 'abstractmethod' in self.options:
