diff --git a/astropy/io/fits/card.py b/astropy/io/fits/card.py
index 8c1ac5d738..7c98cb217a 100644
--- a/astropy/io/fits/card.py
+++ b/astropy/io/fits/card.py
@@ -547,12 +547,17 @@ class Card(_Verify):
     @classmethod
     def fromstring(cls, image):
         """
-        Construct a `Card` object from a (raw) string. It will pad the string
+        Construct a `Card` object from a (raw) string or bytes. It will pad the string
         if it is not the length of a card image (80 columns).  If the card
         image is longer than 80 columns, assume it contains ``CONTINUE``
         card(s).
         """
 
+        # Handle bytes input by decoding to string
+        if isinstance(image, bytes):
+            from .util import decode_ascii
+            image = decode_ascii(image)
+
         card = cls()
         card._image = _pad(image)
         card._verified = False
diff --git a/astropy/io/fits/header.py b/astropy/io/fits/header.py
index ad07e6d52d..a289c684aa 100644
--- a/astropy/io/fits/header.py
+++ b/astropy/io/fits/header.py
@@ -334,8 +334,8 @@ class Header:
 
         Parameters
         ----------
-        data : str
-           String containing the entire header.
+        data : str or bytes
+           String or bytes containing the entire header.
 
         sep : str, optional
             The string separating cards from each other, such as a newline.  By
@@ -348,6 +348,10 @@ class Header:
             A new `Header` instance.
         """
 
+        # Handle bytes input by decoding to string
+        if isinstance(data, bytes):
+            data = decode_ascii(data)
+
         cards = []
 
         # If the card separator contains characters that may validly appear in
