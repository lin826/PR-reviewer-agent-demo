diff --git a/django/db/models/sql/datastructures.py b/django/db/models/sql/datastructures.py
index 1edf040e82..005537b7c7 100644
--- a/django/db/models/sql/datastructures.py
+++ b/django/db/models/sql/datastructures.py
@@ -162,8 +162,13 @@ class Join:
         return hash(self.identity)
 
     def equals(self, other):
-        # Ignore filtered_relation in equality check.
-        return self.identity[:-1] == other.identity[:-1]
+        """
+        Joins are considered equal only if *all* parts of their identity
+        match, including ``filtered_relation``.
+        Two JOINs to the same table with different ON-clause filters must
+        coexist; removing the final element would incorrectly merge them.
+        """
+        return self.identity == other.identity
 
     def demote(self):
         new = self.relabeled_clone({})
diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py
index 54f3258eac..65eb4e07a0 100644
--- a/django/db/models/sql/query.py
+++ b/django/db/models/sql/query.py
@@ -1570,7 +1570,17 @@ class Query(BaseExpression):
         return target_clause
 
     def add_filtered_relation(self, filtered_relation, alias):
+        # Ensure we don't silently override an earlier
+        # FilteredRelation which uses the *same* relation path but a
+        # different condition.  Keep the first alias unchanged and
+        # append a numeric suffix to the rest: "__1", "__2", â€¦
+        base_alias = alias
+        suffix = 0
+        while alias in self._filtered_relations:
+            suffix += 1
+            alias = f'{base_alias}__{suffix}'
         filtered_relation.alias = alias
+        
         lookups = dict(get_children_from_q(filtered_relation.condition))
         relation_lookup_parts, relation_field_parts, _ = self.solve_lookup_type(
             filtered_relation.relation_name
@@ -1598,7 +1608,7 @@ class Query(BaseExpression):
                         "relations deeper than the relation_name (got %r for "
                         "%r)." % (lookup, filtered_relation.relation_name)
                     )
-        self._filtered_relations[filtered_relation.alias] = filtered_relation
+        self._filtered_relations[alias] = filtered_relation
 
     def names_to_path(self, names, opts, allow_many=True, fail_on_missing=False):
         """
