diff --git a/django/forms/formsets.py b/django/forms/formsets.py
index 75b0646512..486090fb64 100644
--- a/django/forms/formsets.py
+++ b/django/forms/formsets.py
@@ -474,11 +474,11 @@ class BaseFormSet(RenderableFormMixin):
     def get_context(self):
         return {'formset': self}
 
 
 def formset_factory(form, formset=BaseFormSet, extra=1, can_order=False,
-                    can_delete=False, max_num=None, validate_max=False,
+                    can_delete=False, can_create=True, max_num=None, validate_max=False,
                     min_num=None, validate_min=False, absolute_max=None,
                     can_delete_extra=True, renderer=None):
     """Return a FormSet for the given form class."""
     if min_num is None:
         min_num = DEFAULT_MIN_NUM
@@ -496,10 +496,11 @@ def formset_factory(form, formset=BaseFormSet, extra=1, can_order=False,
     attrs = {
         'form': form,
         'extra': extra,
         'can_order': can_order,
         'can_delete': can_delete,
+        'can_create': can_create,
         'can_delete_extra': can_delete_extra,
         'min_num': min_num,
         'max_num': max_num,
         'absolute_max': absolute_max,
         'validate_min': validate_min,
diff --git a/django/forms/models.py b/django/forms/models.py
index 7effb202e3..fc9800497c 100644
--- a/django/forms/models.py
+++ b/django/forms/models.py
@@ -582,10 +582,18 @@ class BaseModelFormSet(BaseFormSet):
         """Return the number of forms that are required in this FormSet."""
         if not self.is_bound:
             return len(self.get_queryset())
         return super().initial_form_count()
 
+    def total_form_count(self):
+        """Return the total number of forms in this FormSet."""
+        if getattr(self, 'can_create', True) is False and self.is_bound:
+            # When can_create=False and bound, limit to initial forms only
+            # to prevent creation of new objects via manipulated POST data
+            return min(super().total_form_count(), self.initial_form_count())
+        return super().total_form_count()
+
     def _existing_object(self, pk):
         if not hasattr(self, '_object_dict'):
             self._object_dict = {o.pk: o for o in self.get_queryset()}
         return self._object_dict.get(pk)
 
@@ -869,11 +877,11 @@ class BaseModelFormSet(BaseFormSet):
         super().add_fields(form, index)
 
 
 def modelformset_factory(model, form=ModelForm, formfield_callback=None,
                          formset=BaseModelFormSet, extra=1, can_delete=False,
-                         can_order=False, max_num=None, fields=None, exclude=None,
+                         can_create=True, can_order=False, max_num=None, fields=None, exclude=None,
                          widgets=None, validate_max=False, localized_fields=None,
                          labels=None, help_texts=None, error_messages=None,
                          min_num=None, validate_min=False, field_classes=None,
                          absolute_max=None, can_delete_extra=True, renderer=None):
     """Return a FormSet class for the given Django model class."""
@@ -889,11 +897,11 @@ def modelformset_factory(model, form=ModelForm, formfield_callback=None,
                              formfield_callback=formfield_callback,
                              widgets=widgets, localized_fields=localized_fields,
                              labels=labels, help_texts=help_texts,
                              error_messages=error_messages, field_classes=field_classes)
     FormSet = formset_factory(form, formset, extra=extra, min_num=min_num, max_num=max_num,
-                              can_order=can_order, can_delete=can_delete,
+                              can_order=can_order, can_delete=can_delete, can_create=can_create,
                               validate_min=validate_min, validate_max=validate_max,
                               absolute_max=absolute_max, can_delete_extra=can_delete_extra,
                               renderer=renderer)
     FormSet.model = model
     return FormSet
@@ -1070,11 +1078,11 @@ def _get_foreign_key(parent_model, model, fk_name=None, can_fail=False):
 
 
 def inlineformset_factory(parent_model, model, form=ModelForm,
                           formset=BaseInlineFormSet, fk_name=None,
                           fields=None, exclude=None, extra=3, can_order=False,
-                          can_delete=True, max_num=None, formfield_callback=None,
+                          can_delete=True, can_create=True, max_num=None, formfield_callback=None,
                           widgets=None, validate_max=False, localized_fields=None,
                           labels=None, help_texts=None, error_messages=None,
                           min_num=None, validate_min=False, field_classes=None,
                           absolute_max=None, can_delete_extra=True, renderer=None):
     """
@@ -1091,10 +1099,11 @@ def inlineformset_factory(parent_model, model, form=ModelForm,
         'form': form,
         'formfield_callback': formfield_callback,
         'formset': formset,
         'extra': extra,
         'can_delete': can_delete,
+        'can_create': can_create,
         'can_order': can_order,
         'fields': fields,
         'exclude': exclude,
         'min_num': min_num,
         'max_num': max_num,
