diff --git a/xarray/core/combine.py b/xarray/core/combine.py
index 37ae903b..facb695e 100644
--- a/xarray/core/combine.py
+++ b/xarray/core/combine.py
@@ -501,7 +501,7 @@ def combine_by_coords(datasets, compat='no_conflicts', data_vars='all',
                                    fill_value=fill_value)
 
         # Check the overall coordinates are monotonically increasing
-        for dim in concatenated.dims:
+        for dim in concat_dims:
             if dim in concatenated:
                 indexes = concatenated.indexes.get(dim)
                 if not (indexes.is_monotonic_increasing
diff --git a/xarray/tests/test_combine.py b/xarray/tests/test_combine.py
index 77e2993b..7b20e448 100644
--- a/xarray/tests/test_combine.py
+++ b/xarray/tests/test_combine.py
@@ -618,6 +618,54 @@ class TestCombineAuto:
                                       " along dimension x"):
             combine_by_coords([ds1, ds0])
 
+    def test_combine_by_coords_identical_non_monotonic(self):
+        """Test that combine_by_coords works with identical non-monotonic coordinates.
+        
+        Regression test for issue where identical coordinate dimensions that are
+        non-monotonic would raise ValueError, even though they should be ignored
+        according to the documentation.
+        """
+        # Test with string coordinates
+        yCoord = ['a', 'c', 'b']  # non-monotonic but identical
+        
+        ds1 = Dataset(
+            data_vars=dict(data=(['x', 'y'], np.random.rand(3, 3))),
+            coords=dict(x=[1, 2, 3], y=yCoord)
+        )
+        ds2 = Dataset(
+            data_vars=dict(data=(['x', 'y'], np.random.rand(4, 3))),
+            coords=dict(x=[4, 5, 6, 7], y=yCoord)
+        )
+        
+        # This should work without error
+        result = combine_by_coords([ds1, ds2])
+        expected_x = [1, 2, 3, 4, 5, 6, 7]
+        expected_y = ['a', 'c', 'b']
+        
+        assert result.data.shape == (7, 3)
+        assert list(result.x.values) == expected_x
+        assert list(result.y.values) == expected_y
+        
+        # Test with numeric coordinates
+        zCoord = [10, 30, 20]  # non-monotonic but identical
+        
+        ds3 = Dataset(
+            data_vars=dict(data=(['x', 'z'], np.random.rand(2, 3))),
+            coords=dict(x=[1, 2], z=zCoord)
+        )
+        ds4 = Dataset(
+            data_vars=dict(data=(['x', 'z'], np.random.rand(3, 3))),
+            coords=dict(x=[3, 4, 5], z=zCoord)
+        )
+        
+        result2 = combine_by_coords([ds3, ds4])
+        expected_x2 = [1, 2, 3, 4, 5]
+        expected_z = [10, 30, 20]
+        
+        assert result2.data.shape == (5, 3)
+        assert list(result2.x.values) == expected_x2
+        assert list(result2.z.values) == expected_z
+
 
 @pytest.mark.filterwarnings("ignore:In xarray version 0.13 `auto_combine` "
                             "will be deprecated")
