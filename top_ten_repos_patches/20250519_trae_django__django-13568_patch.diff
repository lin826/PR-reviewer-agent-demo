diff --git a/django/contrib/auth/checks.py b/django/contrib/auth/checks.py
index 65fc266f7e..357b883034 100644
--- a/django/contrib/auth/checks.py
+++ b/django/contrib/auth/checks.py
@@ -4,6 +4,7 @@ from types import MethodType
 from django.apps import apps
 from django.conf import settings
 from django.core import checks
+from django.db.models import UniqueConstraint
 
 from .management import _get_builtin_permissions
 
@@ -51,8 +52,26 @@ def check_user_model(app_configs=None, **kwargs):
             )
         )
 
-    # Check that the username field is unique
-    if not cls._meta.get_field(cls.USERNAME_FIELD).unique:
+    # Helper function to check if a field is the only field in a UniqueConstraint
+    def _is_field_in_single_field_unique_constraint(cls, field_name):
+        """
+        Check if the field is the only field in at least one UniqueConstraint without a condition.
+        """
+        for constraint in cls._meta.constraints:
+            if (
+                isinstance(constraint, UniqueConstraint) and
+                len(constraint.fields) == 1 and
+                constraint.fields[0] == field_name and
+                constraint.condition is None
+            ):
+                return True
+        return False
+
+    # Check that the username field is unique (via field's unique attribute or through a UniqueConstraint)
+    field_unique = cls._meta.get_field(cls.USERNAME_FIELD).unique
+    constraint_unique = _is_field_in_single_field_unique_constraint(cls, cls.USERNAME_FIELD)
+    
+    if not (field_unique or constraint_unique):
         if (settings.AUTHENTICATION_BACKENDS ==
                 ['django.contrib.auth.backends.ModelBackend']):
             errors.append(
