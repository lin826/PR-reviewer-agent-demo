diff --git a/django/db/models/query.py b/django/db/models/query.py
index fb6639793a..49beed2945 100644
--- a/django/db/models/query.py
+++ b/django/db/models/query.py
@@ -1949,6 +1949,23 @@ def prefetch_one_level(instances, prefetcher, lookup, level):
                 # cache_name does not point to a descriptor. Store the value of
                 # the field in the object's field cache.
                 obj._state.fields_cache[cache_name] = val
+                
+                # If the related object is of the same model class as the parent object,
+                # we need to ensure deferred field information is properly preserved.
+                # This handles cases where a model has a foreign key to itself and
+                # the related object might have some fields deferred but others loaded.
+                if val is not None and val.__class__ is obj.__class__:
+                    # Ensure the related object uses the same database
+                    val._state.db = obj._state.db
+                    
+                    # Copy any already loaded fields from the related object's fields_cache
+                    # to the parent object's fields_cache to preserve deferred field information
+                    if hasattr(val._state, 'fields_cache'):
+                        for field_name, cached_value in val._state.fields_cache.items():
+                            # Don't override existing values in the parent's cache
+                            # and don't copy the field we just set
+                            if field_name != cache_name and field_name not in obj._state.fields_cache:
+                                obj._state.fields_cache[field_name] = cached_value
         else:
             if as_attr:
                 setattr(obj, to_attr, vals)

