--- a/django/db/models/base.py
+++ b/django/db/models/base.py
@@ -1706,7 +1706,25 @@
         for field in related_fields:
             _cls = cls
             fld = None
-            for part in field.split(LOOKUP_SEP):
+            field_parts = field.split(LOOKUP_SEP)
+            for i, part in enumerate(field_parts):
+                # Skip checking 'pk' as it's always a valid ordering field
+                # (alias for the primary key), but only if it's the last part.
+                # If 'pk' is not the last part, it's invalid because you can't 
+                # look up fields on pk.
+                if part == 'pk':
+                    if i == len(field_parts) - 1:  # pk is the last part
+                        continue
+                    else:  # pk is not the last part - this is invalid
+                        errors.append(
+                            checks.Error(
+                                "'ordering' refers to the nonexistent field, "
+                                "related field, or lookup '%s'." % field,
+                                obj=cls,
+                                id='models.E015',
+                            )
+                        )
+                        break
                 try:
                     fld = _cls._meta.get_field(part)
                     if fld.is_relation:
@@ -1721,6 +1739,7 @@
                                 id='models.E015',
                             )
                         )
+                        break
 
         # Skip ordering on pk. This is always a valid order_by field
         # but is an alias and therefore won't be found by opts.get_field.
