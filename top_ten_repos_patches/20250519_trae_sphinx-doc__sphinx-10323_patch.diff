diff --git a/sphinx/directives/code.py b/sphinx/directives/code.py
index dc44ed314..d1ca8275b 100644
--- a/sphinx/directives/code.py
+++ b/sphinx/directives/code.py
@@ -1,3 +1,4 @@
+import re
 import sys
 import textwrap
 from difflib import unified_diff
@@ -343,14 +344,36 @@ class LiteralIncludeReader:
     def prepend_filter(self, lines: List[str], location: Tuple[str, int] = None) -> List[str]:
         prepend = self.options.get('prepend')
         if prepend:
-            lines.insert(0, prepend + '\n')
+            # Check if there are lines with content to determine indentation
+            indent = ''
+            for line in lines:
+                if line.strip():
+                    # Extract the indentation from the first non-empty line
+                    indent_match = re.match(r'^(\s+)', line)
+                    if indent_match:
+                        indent = indent_match.group(1)
+                    break
+            
+            # Add the prepend text with the same indentation
+            lines.insert(0, indent + prepend + '\n')
 
         return lines
 
     def append_filter(self, lines: List[str], location: Tuple[str, int] = None) -> List[str]:
         append = self.options.get('append')
         if append:
-            lines.append(append + '\n')
+            # Check if there are lines with content to determine indentation
+            indent = ''
+            for line in reversed(lines):
+                if line.strip():
+                    # Extract the indentation from the last non-empty line
+                    indent_match = re.match(r'^(\s+)', line)
+                    if indent_match:
+                        indent = indent_match.group(1)
+                    break
+            
+            # Add the append text with the same indentation
+            lines.append(indent + append + '\n')
 
         return lines
 

