diff --git a/django/db/models/fields/files.py b/django/db/models/fields/files.py
index e10a5bb6d9..4572610822 100644
--- a/django/db/models/fields/files.py
+++ b/django/db/models/fields/files.py
@@ -228,7 +228,10 @@ class FileField(Field):
         self._primary_key_set_explicitly = 'primary_key' in kwargs
 
         self.storage = storage or default_storage
-        if callable(self.storage):
+        # Store information about callable storage for deconstruction
+        self._storage_is_callable = callable(self.storage)
+        if self._storage_is_callable:
+            self._storage_callable = self.storage
             self.storage = self.storage()
             if not isinstance(self.storage, Storage):
                 raise TypeError(
@@ -279,7 +282,13 @@ class FileField(Field):
             del kwargs["max_length"]
         kwargs['upload_to'] = self.upload_to
         if self.storage is not default_storage:
-            kwargs['storage'] = self.storage
+            # Return the original callable if storage was passed as a callable.
+            # This preserves the ability for storage to vary at runtime as described
+            # in the documentation, instead of evaluating the callable during deconstruction.
+            if hasattr(self, '_storage_is_callable') and self._storage_is_callable:
+                kwargs['storage'] = self._storage_callable
+            else:
+                kwargs['storage'] = self.storage
         return name, path, args, kwargs
 
     def get_internal_type(self):

