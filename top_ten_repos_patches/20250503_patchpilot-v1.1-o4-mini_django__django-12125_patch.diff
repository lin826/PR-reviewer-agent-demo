diff --git a/django/db/migrations/serializer.py b/django/db/migrations/serializer.py
index 824ab10..c4033d7 100644
--- a/django/db/migrations/serializer.py
+++ b/django/db/migrations/serializer.py
@@ -88,17 +88,36 @@ class DeconstructableSerializer(BaseSerializer):
             strings.append("%s=%s" % (kw, arg_string))
         return "%s(%s)" % (name, ", ".join(strings)), imports
 
+
     @staticmethod
     def _serialize_path(path):
-        module, name = path.rsplit(".", 1)
-        if module == "django.db.models":
-            imports = {"from django.db import models"}
-            name = "models.%s" % name
+        from importlib import import_module
+        segments = path.split('.')
+        for i in range(len(segments), 0, -1):
+            module_candidate = '.'.join(segments[:i])
+            try:
+                import_module(module_candidate)
+            except ImportError:
+                continue
+            class_part = '.'.join(segments[i:])
+            if module_candidate == 'django.db.models':
+                imports = {'from django.db import models'}
+                name = 'models.%s' % class_part
+            else:
+                imports = {'import %s' % module_candidate}
+                name = '%s.%s' % (module_candidate, class_part)
+            return name, imports
+        # Fallback to original behavior
+        module, name = path.rsplit('.', 1)
+        if module == 'django.db.models':
+            imports = {'from django.db import models'}
+            name = 'models.%s' % name
         else:
-            imports = {"import %s" % module}
+            imports = {'import %s' % module}
             name = path
         return name, imports
 
+
     def serialize(self):
         return self.serialize_deconstructed(*self.value.deconstruct())
 
