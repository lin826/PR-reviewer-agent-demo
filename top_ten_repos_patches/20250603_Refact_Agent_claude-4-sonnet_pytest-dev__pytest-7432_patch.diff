diff --git a/src/_pytest/skipping.py b/src/_pytest/skipping.py
index 7bd975e5a..85778415b 100644
--- a/src/_pytest/skipping.py
+++ b/src/_pytest/skipping.py
@@ -291,7 +291,9 @@ def pytest_runtest_makereport(item: Item, call: CallInfo[None]):
             else:
                 rep.outcome = "passed"
                 rep.wasxfail = xfailed.reason
-    elif (
+    
+    # Fix skip location reporting regardless of runxfail option
+    if (
         item._store.get(skipped_by_mark_key, True)
         and rep.skipped
         and type(rep.longrepr) is tuple
diff --git a/testing/test_skipping.py b/testing/test_skipping.py
index 0b1c0b49b..e29002550 100644
--- a/testing/test_skipping.py
+++ b/testing/test_skipping.py
@@ -648,6 +648,37 @@ class TestSkip:
         result = testdir.runpytest("-rs")
         result.stdout.fnmatch_lines(["*unconditional skip*", "*1 skipped*"])
 
+    def test_skip_location_with_runxfail(self, testdir):
+        """Test that skip location reporting works correctly with --runxfail."""
+        p = testdir.makepyfile(
+            """
+            import pytest
+            @pytest.mark.skip
+            def test_skip_location():
+                assert 0
+            
+            @pytest.mark.skipif(True, reason="skipif test")
+            def test_skipif_location():
+                assert 0
+        """
+        )
+        
+        # Test without --runxfail (should work correctly)
+        result = testdir.runpytest(p, "-rs")
+        result.stdout.fnmatch_lines([
+            "*test_skip_location_with_runxfail.py:2: unconditional skip*",
+            "*test_skip_location_with_runxfail.py:6: skipif test*"
+        ])
+        
+        # Test with --runxfail (this was broken before the fix)
+        result = testdir.runpytest(p, "-rs", "--runxfail")
+        result.stdout.fnmatch_lines([
+            "*test_skip_location_with_runxfail.py:2: unconditional skip*",
+            "*test_skip_location_with_runxfail.py:6: skipif test*"
+        ])
+        # Ensure it doesn't show the internal pytest location
+        assert "src/_pytest/skipping.py" not in result.stdout.str()
+
 
 class TestSkipif:
     def test_skipif_conditional(self, testdir):
