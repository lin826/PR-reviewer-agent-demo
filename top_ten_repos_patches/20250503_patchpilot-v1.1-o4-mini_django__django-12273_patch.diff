diff --git a/django/db/models/base.py b/django/db/models/base.py
index 07c5013..1275652 100644
--- a/django/db/models/base.py
+++ b/django/db/models/base.py
@@ -700,10 +700,23 @@ class Model(metaclass=ModelBase):
                     setattr(self, field.attname, obj.pk)
                 # If the relationship's pk/to_field was changed, clear the
                 # cached relationship.
+
                 if getattr(obj, field.target_field.attname) != getattr(self, field.attname):
                     field.delete_cached_value(self)
 
+        # Keep parent-link fields in sync with cleared ancestor primary keys.
+        for parent, link_field in self._meta.parents.items():
+            if link_field is not None:
+                parent_pk_attr = parent._meta.pk.attname
+                if getattr(self, parent_pk_attr) is None and getattr(self, link_field.attname) is not None:
+                    setattr(self, link_field.attname, None)
+        # If clearing the link fields resulted in no primary key, ensure the
+        # instance is treated as a new object so an INSERT is executed.
+        if self.pk is None:
+            self._state.adding = True
+
         using = using or router.db_for_write(self.__class__, instance=self)
+
         if force_insert and (force_update or update_fields):
             raise ValueError("Cannot force both insert and updating in model saving.")
 
