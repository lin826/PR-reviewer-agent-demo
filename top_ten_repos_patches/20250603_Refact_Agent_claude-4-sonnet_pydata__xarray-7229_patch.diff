diff --git a/xarray/core/computation.py b/xarray/core/computation.py
index 3f7e8f74..11c5fc5d 100644
--- a/xarray/core/computation.py
+++ b/xarray/core/computation.py
@@ -1860,7 +1860,20 @@ def where(cond, x, y, keep_attrs=None):
     if keep_attrs is True:
         # keep the attributes of x, the second parameter, by default to
         # be consistent with the `where` method of `DataArray` and `Dataset`
-        keep_attrs = lambda attrs, context: getattr(x, "attrs", {})
+        def keep_attrs_func(attrs, context):
+            # attrs is a list of attribute dicts to merge
+            if len(attrs) >= 3:
+                # Main variable case: attrs = [cond.attrs, x.attrs, y.attrs, ...]
+                # Return x.attrs (the second parameter)
+                return attrs[1]
+            elif len(attrs) == 2:
+                # Coordinate case: attrs = [coord.attrs, coord.attrs]
+                # Return the coordinate's own attributes
+                return attrs[0]
+            else:
+                # Fallback
+                return getattr(x, "attrs", {})
+        keep_attrs = keep_attrs_func
 
     # alignment for three arguments is complicated, so don't support it yet
     return apply_ufunc(
diff --git a/xarray/tests/test_computation.py b/xarray/tests/test_computation.py
index da1bd014..b8c87a0b 100644
--- a/xarray/tests/test_computation.py
+++ b/xarray/tests/test_computation.py
@@ -1937,6 +1937,38 @@ def test_where_attrs() -> None:
     assert actual.attrs == {}
 
 
+def test_where_keep_attrs_coordinates() -> None:
+    """Test that xr.where(..., keep_attrs=True) preserves coordinate attributes.
+    
+    Regression test for issue where coordinate attributes were being overwritten
+    by variable attributes when using keep_attrs=True.
+    """
+    # Create a DataArray with coordinates that have attributes
+    time_attrs = {'standard_name': 'time', 'long_name': 'Time'}
+    space_attrs = {'standard_name': 'space', 'long_name': 'Space coordinate'}
+    var_attrs = {'long_name': 'Test variable', 'units': 'meters'}
+    
+    da = xr.DataArray(
+        [[1, 2], [3, 4]],
+        dims=['time', 'space'],
+        coords={
+            'time': ('time', [1, 2], time_attrs),
+            'space': ('space', [10, 20], space_attrs)
+        },
+        attrs=var_attrs
+    )
+    
+    # Test with keep_attrs=True
+    result = xr.where(True, da, da, keep_attrs=True)
+    
+    # Check that coordinate attributes are preserved
+    assert result.time.attrs == time_attrs
+    assert result.space.attrs == space_attrs
+    
+    # Check that main variable attributes are preserved
+    assert result.attrs == var_attrs
+
+
 @pytest.mark.parametrize(
     "use_dask", [pytest.param(False, id="nodask"), pytest.param(True, id="dask")]
 )
