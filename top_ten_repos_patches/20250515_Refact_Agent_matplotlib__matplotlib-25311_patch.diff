diff --git a/lib/matplotlib/offsetbox.py b/lib/matplotlib/offsetbox.py
index 1dee8a23d9..c084eccb6a 100644
--- a/lib/matplotlib/offsetbox.py
+++ b/lib/matplotlib/offsetbox.py
@@ -1513,6 +1513,33 @@ class DraggableBase:
             self.canvas.callbacks._connect_picklable(
                 'button_release_event', self.on_release),
         ]
+        
+    def __getstate__(self):
+        """
+        Return the state of the object for pickling.
+        
+        The canvas, callback ids, and other non-picklable attributes are
+        removed to allow pickling of figures with draggable artists.
+        """
+        state = self.__dict__.copy()
+        # Drop non-picklable / volatile runtime members
+        state["canvas"] = None          # FigureCanvas*
+        state["cids"] = []              # callback ids
+        state.pop("background", None)   # blit background (np array)
+        # the motion-drag callback id (set only while dragging)
+        state.pop("_c1", None)
+        return state
+
+    def __setstate__(self, state):
+        """
+        Restore the state of the object after unpickling.
+        
+        The helper is dormant (canvas=None); if the user wants it
+        interactive again they can call `legend.set_draggable(True)`
+        which will create a fresh DraggableLegend with proper
+        callbacks on the new live canvas.
+        """
+        self.__dict__.update(state)
 
     def on_motion(self, evt):
         if self._check_still_parented() and self.got_artist:
