diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py
index 1f4c98284..a28b7a074 100644
--- a/sphinx/ext/autodoc/__init__.py
+++ b/sphinx/ext/autodoc/__init__.py
@@ -1798,8 +1798,13 @@ class GenericAliasMixin(DataDocumenterMixinBase):
 
     def update_content(self, more_content: StringList) -> None:
         if inspect.isgenericalias(self.object):
-            more_content.append(_('alias of %s') % restify(self.object), '')
-            more_content.append('', '')
+            # Only add "alias of ..." if no docstring will be available
+            # Check if get_doc() would return any content
+            doc = self.get_doc()
+            has_docstring = doc and any(any(line.strip() for line in doclines) for doclines in doc)
+            if not has_docstring:
+                more_content.append(_('alias of %s') % restify(self.object), '')
+                more_content.append('', '')
 
         super().update_content(more_content)
 
@@ -1816,9 +1821,14 @@ class NewTypeMixin(DataDocumenterMixinBase):
 
     def update_content(self, more_content: StringList) -> None:
         if inspect.isNewType(self.object):
-            supertype = restify(self.object.__supertype__)
-            more_content.append(_('alias of %s') % supertype, '')
-            more_content.append('', '')
+            # Only add "alias of ..." if no docstring will be available
+            # Check if get_doc() would return any content
+            doc = self.get_doc()
+            has_docstring = doc and any(any(line.strip() for line in doclines) for doclines in doc)
+            if not has_docstring:
+                supertype = restify(self.object.__supertype__)
+                more_content.append(_('alias of %s') % supertype, '')
+                more_content.append('', '')
 
         super().update_content(more_content)
 
@@ -1849,18 +1859,23 @@ class TypeVarMixin(DataDocumenterMixinBase):
 
     def update_content(self, more_content: StringList) -> None:
         if isinstance(self.object, TypeVar):
-            attrs = [repr(self.object.__name__)]
-            for constraint in self.object.__constraints__:
-                attrs.append(stringify_typehint(constraint))
-            if self.object.__bound__:
-                attrs.append(r"bound=\ " + restify(self.object.__bound__))
-            if self.object.__covariant__:
-                attrs.append("covariant=True")
-            if self.object.__contravariant__:
-                attrs.append("contravariant=True")
-
-            more_content.append(_('alias of TypeVar(%s)') % ", ".join(attrs), '')
-            more_content.append('', '')
+            # Only add "alias of ..." if no docstring will be available
+            # Check if get_doc() would return any content
+            doc = self.get_doc()
+            has_docstring = doc and any(any(line.strip() for line in doclines) for doclines in doc)
+            if not has_docstring:
+                attrs = [repr(self.object.__name__)]
+                for constraint in self.object.__constraints__:
+                    attrs.append(stringify_typehint(constraint))
+                if self.object.__bound__:
+                    attrs.append(r"bound=\ " + restify(self.object.__bound__))
+                if self.object.__covariant__:
+                    attrs.append("covariant=True")
+                if self.object.__contravariant__:
+                    attrs.append("contravariant=True")
+
+                more_content.append(_('alias of TypeVar(%s)') % ", ".join(attrs), '')
+                more_content.append('', '')
 
         super().update_content(more_content)
 
diff --git a/tests/test_ext_autodoc.py b/tests/test_ext_autodoc.py
index 4c16886b3..98251781f 100644
--- a/tests/test_ext_autodoc.py
+++ b/tests/test_ext_autodoc.py
@@ -1943,16 +1943,12 @@ def test_autodoc_GenericAlias(app):
             '',
             '      A list of int',
             '',
-            '      alias of :class:`~typing.List`\\ [:class:`int`]',
-            '',
             '',
             '.. py:data:: T',
             '   :module: target.genericalias',
             '',
             '   A list of int',
             '',
-            '   alias of :class:`~typing.List`\\ [:class:`int`]',
-            '',
         ]
 
 
@@ -1975,64 +1971,48 @@ def test_autodoc_TypeVar(app):
         '',
         '      T1',
         '',
-        "      alias of TypeVar('T1')",
-        '',
         '',
         '   .. py:attribute:: Class.T6',
         '      :module: target.typevar',
         '',
         '      T6',
         '',
-        '      alias of :class:`int`',
-        '',
         '',
         '.. py:data:: T1',
         '   :module: target.typevar',
         '',
         '   T1',
         '',
-        "   alias of TypeVar('T1')",
-        '',
         '',
         '.. py:data:: T3',
         '   :module: target.typevar',
         '',
         '   T3',
         '',
-        "   alias of TypeVar('T3', int, str)",
-        '',
         '',
         '.. py:data:: T4',
         '   :module: target.typevar',
         '',
         '   T4',
         '',
-        "   alias of TypeVar('T4', covariant=True)",
-        '',
         '',
         '.. py:data:: T5',
         '   :module: target.typevar',
         '',
         '   T5',
         '',
-        "   alias of TypeVar('T5', contravariant=True)",
-        '',
         '',
         '.. py:data:: T6',
         '   :module: target.typevar',
         '',
         '   T6',
         '',
-        '   alias of :class:`int`',
-        '',
         '',
         '.. py:data:: T7',
         '   :module: target.typevar',
         '',
         '   T7',
         '',
-        "   alias of TypeVar('T7', bound=\\ :class:`int`)",
-        '',
     ]
 
 
diff --git a/tests/test_ext_autodoc_autoattribute.py b/tests/test_ext_autodoc_autoattribute.py
index 5e7220234..e6dbb0e26 100644
--- a/tests/test_ext_autodoc_autoattribute.py
+++ b/tests/test_ext_autodoc_autoattribute.py
@@ -156,8 +156,6 @@ def test_autoattribute_GenericAlias(app):
             '',
             '   A list of int',
             '',
-            '   alias of :class:`~typing.List`\\ [:class:`int`]',
-            '',
         ]
 
 
@@ -171,8 +169,6 @@ def test_autoattribute_NewType(app):
         '',
         '   T6',
         '',
-        '   alias of :class:`int`',
-        '',
     ]
 
 
diff --git a/tests/test_ext_autodoc_autodata.py b/tests/test_ext_autodoc_autodata.py
index d01e45fc1..af6137766 100644
--- a/tests/test_ext_autodoc_autodata.py
+++ b/tests/test_ext_autodoc_autodata.py
@@ -96,8 +96,6 @@ def test_autodata_GenericAlias(app):
             '',
             '   A list of int',
             '',
-            '   alias of :class:`~typing.List`\\ [:class:`int`]',
-            '',
         ]
 
 
@@ -111,8 +109,6 @@ def test_autodata_NewType(app):
         '',
         '   T6',
         '',
-        '   alias of :class:`int`',
-        '',
     ]
 
 
