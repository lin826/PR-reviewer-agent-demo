diff --git a/sympy/parsing/latex/_parse_latex_antlr.py b/sympy/parsing/latex/_parse_latex_antlr.py
index 2e4a45ad20..dc65caab7d 100644
--- a/sympy/parsing/latex/_parse_latex_antlr.py
+++ b/sympy/parsing/latex/_parse_latex_antlr.py
@@ -380,11 +380,21 @@ def convert_frac(frac):
         if expr_top:
             return sympy.Derivative(expr_top, wrt)
 
     expr_top = convert_expr(frac.upper)
     expr_bot = convert_expr(frac.lower)
-    inverse_denom = sympy.Pow(expr_bot, -1, evaluate=False)
+    
+    # Handle the case where the denominator is already a power with negative exponent
+    # e.g., when we have \frac{A}{\frac{1}{B}}, expr_bot will be B**(-1)
+    # Instead of creating (B**(-1))**(-1), we should create B
+    if isinstance(expr_bot, sympy.Pow) and expr_bot.args[1] < 0:
+        # If expr_bot is base**(-exp), then 1/expr_bot should be base**exp
+        base, neg_exp = expr_bot.args
+        inverse_denom = sympy.Pow(base, -neg_exp, evaluate=False)
+    else:
+        inverse_denom = sympy.Pow(expr_bot, -1, evaluate=False)
+    
     if expr_top == 1:
         return inverse_denom
     else:
         return sympy.Mul(expr_top, inverse_denom, evaluate=False)
 
