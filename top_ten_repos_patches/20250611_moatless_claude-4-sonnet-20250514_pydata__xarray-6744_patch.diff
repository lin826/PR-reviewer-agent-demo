--- a/xarray/core/rolling.py
+++ b/xarray/core/rolling.py
@@ -270,12 +270,20 @@
     def __iter__(self) -> Iterator[tuple[RollingKey, DataArray]]:
         if self.ndim > 1:
             raise ValueError("__iter__ is only supported for 1d-rolling")
-        stops = np.arange(1, len(self.window_labels) + 1)
-        starts = stops - int(self.window[0])
-        starts[: int(self.window[0])] = 0
-        for (label, start, stop) in zip(self.window_labels, starts, stops):
-            window = self.obj.isel({self.dim[0]: slice(start, stop)})
-
+        
+        # Use construct to create a properly padded and centered rolling window view
+        window_dim = "_window_dim"
+        constructed = self.construct(window_dim, keep_attrs=True)
+        
+        # Extract individual windows from the constructed array
+        for i, label in enumerate(self.window_labels):
+            # Select the i-th window along the rolling dimension
+            window = constructed.isel({self.dim[0]: i}).drop_vars(self.dim[0], errors="ignore")
+            
+            # Rename the window dimension back to the original dimension
+            window = window.rename({window_dim: self.dim[0]})
+            
+            # Apply min_periods filtering
             counts = window.count(dim=self.dim[0])
             window = window.where(counts >= self.min_periods)
 
