diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py
index eaccc96d7d..9eefb95353 100644
--- a/django/db/models/sql/compiler.py
+++ b/django/db/models/sql/compiler.py
@@ -704,6 +704,16 @@ class SQLCompiler:
         not be) and column name for ordering by the given 'name' parameter.
         The 'name' is of the form 'field1__field2__...__fieldN'.
         """
+        from django.db.models.expressions import OrderBy
+        
+        # If this is already an OrderBy or expression, return it directly
+        if hasattr(name, 'resolve_expression'):
+            if isinstance(name, OrderBy):
+                return [(name, False)]
+            else:
+                return [(name.asc(), False)]
+            
+        # Otherwise, it's a string, so process it normally
         name, order = get_order_dir(name, default_order)
         descending = order == 'DESC'
         pieces = name.split(LOOKUP_SEP)
diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py
index e15e64cde4..61fcecfaa5 100644
--- a/django/db/models/sql/query.py
+++ b/django/db/models/sql/query.py
@@ -2217,7 +2217,15 @@ def get_order_dir(field, default='ASC'):
     The 'default' param is used to indicate which way no prefix (or a '+'
     prefix) should sort. The '-' prefix always sorts the opposite way.
     """
+    from django.db.models.expressions import OrderBy
+    
     dirn = ORDER_DIR[default]
+    
+    # If we received an OrderBy object directly
+    if isinstance(field, OrderBy):
+        return field.expression, 'DESC' if field.descending else 'ASC'
+    
+    # Original string handling
     if field[0] == '-':
         return field[1:], dirn[1]
     return field, dirn[0]
