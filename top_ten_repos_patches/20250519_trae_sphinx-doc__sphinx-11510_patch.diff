diff --git a/sphinx/directives/other.py b/sphinx/directives/other.py
index 19f7c0a8d..3dbe7e794 100644
--- a/sphinx/directives/other.py
+++ b/sphinx/directives/other.py
@@ -376,6 +376,46 @@ class Include(BaseInclude, SphinxDirective):
         rel_filename, filename = self.env.relfn2path(self.arguments[0])
         self.arguments[0] = filename
         self.env.note_included(filename)
+        
+        # Process included content through source-read event
+        try:
+            included_docname = self.env.path2doc(filename)
+            if included_docname:
+                encoding = self.options.get('encoding', self.state.document.settings.input_encoding)
+                error_handler = self.state.document.settings.input_encoding_error_handler
+                
+                # Read content
+                with open(filename, encoding=encoding, errors=error_handler) as f:
+                    content = f.read()
+                
+                # Apply source-read event
+                source_array = [content]
+                self.env.app.emit('source-read', included_docname, source_array)
+                
+                # If content was changed by the event
+                if content != source_array[0]:
+                    import os
+                    # Write to temp file
+                    temp_filename = os.path.join(os.path.dirname(filename), 
+                                              os.path.basename(filename) + '.temp')
+                    with open(temp_filename, 'w', encoding=encoding) as f:
+                        f.write(source_array[0])
+                    
+                    # Update the argument to point to our temp file
+                    self.arguments[0] = temp_filename
+                    
+                    # Get the result nodes
+                    result = super().run()
+                    
+                    # Clean up
+                    if os.path.exists(temp_filename):
+                        os.unlink(temp_filename)
+                    
+                    return result
+        except Exception:
+            # If any error occurs, fall back to standard behavior
+            pass
+            
         return super().run()
 
 

