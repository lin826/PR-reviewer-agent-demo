diff --git a/astropy/utils/misc.py b/astropy/utils/misc.py
index de3fb01d18..dde34b088f 100644
--- a/astropy/utils/misc.py
+++ b/astropy/utils/misc.py
@@ -494,19 +494,19 @@ def did_you_mean(s, candidates, n=3, cutoff=0.8, fix=None):
     return ''
 
 
 class InheritDocstrings(type):
     """
-    This metaclass makes methods of a class automatically have their
-    docstrings filled in from the methods they override in the base
+    This metaclass makes methods and properties of a class automatically have their
+    docstrings filled in from the methods or properties they override in the base
     class.
 
     If the class uses multiple inheritance, the docstring will be
     chosen from the first class in the bases list, in the same way as
     methods are normally resolved in Python.  If this results in
     selecting the wrong docstring, the docstring will need to be
-    explicitly included on the method.
+    explicitly included on the method or property.
 
     For example::
 
         >>> from astropy.utils.misc import InheritDocstrings
         >>> class A(metaclass=InheritDocstrings):
@@ -526,11 +526,11 @@ class InheritDocstrings(type):
                 (key.startswith('__') and key.endswith('__')
                  and len(key) > 4) or
                 not key.startswith('_'))
 
         for key, val in dct.items():
-            if (inspect.isfunction(val) and
+            if ((inspect.isfunction(val) or inspect.isdatadescriptor(val)) and
                 is_public_member(key) and
                 val.__doc__ is None):
                 for base in cls.__mro__[1:]:
                     super_method = getattr(base, key, None)
                     if super_method is not None:
