--- a/sympy/combinatorics/permutations.py
+++ b/sympy/combinatorics/permutations.py
@@ -896,10 +896,7 @@
 
         temp = flatten(args)
         if has_dups(temp):
-            if is_cycle:
-                raise ValueError('there were repeated elements; to resolve '
-                'cycles use Cycle%s.' % ''.join([str(tuple(c)) for c in args]))
-            else:
+            if not is_cycle:
                 raise ValueError('there were repeated elements.')
         temp = set(temp)
 
@@ -911,8 +908,9 @@
         if is_cycle:
             # it's not necessarily canonical so we won't store
             # it -- use the array form instead
+            # For non-disjoint cycles, apply them left-to-right
             c = Cycle()
-            for ci in args:
+            for ci in args:  # apply left-to-right
                 c = c(*ci)
             aform = c.list()
         else:
