diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py
index d913658291..bd643cfecf 100644
--- a/django/db/models/expressions.py
+++ b/django/db/models/expressions.py
@@ -359,7 +359,7 @@ class BaseExpression:
 
     def get_source_fields(self):
         """Return the underlying field types used by this aggregate."""
-        return [e._output_field_or_none for e in self.get_source_expressions()]
+        return [getattr(e, '_output_field_or_none', None) for e in self.get_source_expressions()]
 
     def asc(self, **kwargs):
         return OrderBy(self, **kwargs)
@@ -478,6 +478,20 @@ class CombinedExpression(SQLiteNumericMixin, Expression):
         c.is_summary = summarize
         c.lhs = c.lhs.resolve_expression(query, allow_joins, reuse, summarize, for_save)
         c.rhs = c.rhs.resolve_expression(query, allow_joins, reuse, summarize, for_save)
+        
+        # Handle temporal subtraction case - if we're subtracting two datetime fields,
+        # the result should be a DurationField
+        if c.connector == c.SUB:
+            try:
+                lhs_type = c.lhs.output_field.get_internal_type()
+                rhs_type = c.rhs.output_field.get_internal_type()
+                datetime_fields = {'DateField', 'DateTimeField', 'TimeField'}
+                if lhs_type in datetime_fields and lhs_type == rhs_type:
+                    c.output_field = fields.DurationField()
+            except (FieldError, AttributeError):
+                # If we can't determine the field types, let the normal resolution continue
+                pass
+        
         return c
 
 
