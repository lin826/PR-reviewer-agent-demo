diff --git a/astropy/wcs/wcsapi/wrappers/sliced_wcs.py b/astropy/wcs/wcsapi/wrappers/sliced_wcs.py
index d7605b078c..78a81285f7 100644
--- a/astropy/wcs/wcsapi/wrappers/sliced_wcs.py
+++ b/astropy/wcs/wcsapi/wrappers/sliced_wcs.py
@@ -152,6 +152,12 @@ class SlicedLowLevelWCS(BaseWCSWrapper):
         if len(self._pixel_keep) == 0 or len(self._world_keep) == 0:
             raise ValueError("Cannot slice WCS: the resulting WCS should have "
                              "at least one pixel and one world dimension.")
+            
+        # Compute reference world coordinates for dropped axes based on slice
+        pixel_arrays_zero = [0] * len(self._pixel_keep)
+        world_sample = self._pixel_to_world_values_all(*pixel_arrays_zero)
+        self._dropped_world_values = [world_sample[i] if i not in self._world_keep else None
+                                     for i in range(self._wcs.world_n_dim)]
 
     @lazyproperty
     def dropped_world_dimensions(self):
@@ -251,7 +257,7 @@ class SlicedLowLevelWCS(BaseWCSWrapper):
                 iworld_curr += 1
                 world_arrays_new.append(world_arrays[iworld_curr])
             else:
-                world_arrays_new.append(1.)
+                world_arrays_new.append(self._dropped_world_values[iworld])
 
         world_arrays_new = np.broadcast_arrays(*world_arrays_new)
         pixel_arrays = list(self._wcs.world_to_pixel_values(*world_arrays_new))
