diff --git a/xarray/core/computation.py b/xarray/core/computation.py
index 9fe93c88..0066f196 100644
--- a/xarray/core/computation.py
+++ b/xarray/core/computation.py
@@ -1817,6 +1817,7 @@ def where(cond, x, y):
         join="exact",
         dataset_join="exact",
         dask="allowed",
+        keep_attrs=True,
     )
 
 
diff --git a/xarray/tests/test_computation.py b/xarray/tests/test_computation.py
index c9a10b7c..5dc6ece2 100644
--- a/xarray/tests/test_computation.py
+++ b/xarray/tests/test_computation.py
@@ -1922,6 +1922,55 @@ def test_where() -> None:
     assert_identical(expected, actual)
 
 
+def test_where_attrs() -> None:
+    """Test that xr.where preserves attributes from the first DataArray argument."""
+    
+    # Test 1: Condition has attributes
+    cond = xr.DataArray([True, False, True], dims=['x'])
+    cond.attrs['cond_attr'] = 'condition_value'
+    
+    x = xr.DataArray([1, 2, 3], dims=['x'])
+    x.attrs['x_attr'] = 'x_value'
+    
+    y = xr.DataArray([10, 20, 30], dims=['x'])
+    y.attrs['y_attr'] = 'y_value'
+    
+    result = xr.where(cond, x, y)
+    assert result.attrs == {'cond_attr': 'condition_value'}
+    
+    # Test 2: Condition has no attributes, x has attributes
+    cond_no_attrs = xr.DataArray([True, False, True], dims=['x'])
+    
+    result2 = xr.where(cond_no_attrs, x, y)
+    # Since condition (first argument) has no attributes, result should have no attributes
+    assert result2.attrs == {}
+    
+    # Test 3: Scalar condition, DataArray with attributes
+    result3 = xr.where(True, x, y)
+    assert result3.attrs == {'x_attr': 'x_value'}
+    
+    # Test 4: All arguments have no attributes
+    cond_empty = xr.DataArray([True, False, True], dims=['x'])
+    x_empty = xr.DataArray([1, 2, 3], dims=['x'])
+    y_empty = xr.DataArray([10, 20, 30], dims=['x'])
+    
+    result4 = xr.where(cond_empty, x_empty, y_empty)
+    assert result4.attrs == {}
+    
+    # Test 5: With keep_attrs option for comparison operations
+    with xr.set_options(keep_attrs=True):
+        data = xr.DataArray(np.ones([3, 3], dtype=np.int8))
+        data.attrs["attr_1"] = "test1"
+        data.attrs["attr_2"] = "test2"
+        
+        # Now the comparison should preserve attributes
+        cond = data == 1
+        assert cond.attrs == {'attr_1': 'test1', 'attr_2': 'test2'}
+        
+        result5 = xr.where(cond, 5, 0)
+        assert result5.attrs == {'attr_1': 'test1', 'attr_2': 'test2'}
+
+
 @pytest.mark.parametrize("use_dask", [True, False])
 @pytest.mark.parametrize("use_datetime", [True, False])
 def test_polyval(use_dask, use_datetime) -> None:
