diff --git a/sympy/functions/special/zeta_functions.py b/sympy/functions/special/zeta_functions.py
index b8e2b66195..2b60b68294 100644
--- a/sympy/functions/special/zeta_functions.py
+++ b/sympy/functions/special/zeta_functions.py
@@ -288,10 +288,29 @@ def _eval_rewrite_as_lerchphi(self, s, z):
         return z*lerchphi(z, s, 1)
 
     def _eval_expand_func(self, **hints):
-        from sympy import log, expand_mul, Dummy, exp_polar, I
+        from sympy import log, expand_mul, Dummy, exp_polar, I, pi, Rational
         s, z = self.args
+        # Li₁(z) = −log(1−z)  (principal branch); the exp_polar tag is
+        # super-fluous here and breaks further simplifications.
         if s == 1:
-            return -log(1 + exp_polar(-I*pi)*z)
+            return -log(1 - z)
+
+        # Special dilogarithm values
+        # --------------------------
+        # The most frequently used constant is Li₂(1/2)=π²/12−½·log²2.
+        # Add more cases here when they are needed; they can be proven from
+        # standard functional equations of the dilogarithm.
+        if s == 2:
+            if z == Rational(1, 2):
+                return pi**2/12 - log(2)**2/2
+            # Li₂(−1) = −π²/12
+            if z == -1:
+                return -pi**2/12
+            # Li₂(1)   -> ζ(2)
+            if z == 1:
+                from sympy.functions.special.zeta_functions import zeta
+                return zeta(2)
+                
         if s.is_Integer and s <= 0:
             u = Dummy('u')
             start = u/(1 - u)
