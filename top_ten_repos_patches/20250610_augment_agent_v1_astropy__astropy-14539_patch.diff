diff --git a/astropy/io/fits/diff.py b/astropy/io/fits/diff.py
index 100cdf1b8c..d3608ef01d 100644
--- a/astropy/io/fits/diff.py
+++ b/astropy/io/fits/diff.py
@@ -1447,11 +1447,11 @@ class TableDataDiff(_BaseDiff):
 
             if np.issubdtype(arra.dtype, np.floating) and np.issubdtype(
                 arrb.dtype, np.floating
             ):
                 diffs = where_not_allclose(arra, arrb, rtol=self.rtol, atol=self.atol)
-            elif "P" in col.format:
+            elif "P" in col.format or "Q" in col.format:
                 diffs = (
                     [
                         idx
                         for idx in range(len(arra))
                         if not np.allclose(
diff --git a/conftest.py b/conftest.py
deleted file mode 100644
index 3eff71400e..0000000000
--- a/conftest.py
+++ /dev/null
@@ -1,74 +0,0 @@
-# Licensed under a 3-clause BSD style license - see LICENSE.rst
-
-# This file is the main file used when running tests with pytest directly,
-# in particular if running e.g. ``pytest docs/``.
-
-import os
-import tempfile
-
-import hypothesis
-
-from astropy import __version__
-
-try:
-    from pytest_astropy_header.display import PYTEST_HEADER_MODULES, TESTED_VERSIONS
-except ImportError:
-    PYTEST_HEADER_MODULES = {}
-    TESTED_VERSIONS = {}
-
-
-# This has to be in the root dir or it will not display in CI.
-def pytest_configure(config):
-    PYTEST_HEADER_MODULES["PyERFA"] = "erfa"
-    PYTEST_HEADER_MODULES["Cython"] = "cython"
-    PYTEST_HEADER_MODULES["Scikit-image"] = "skimage"
-    PYTEST_HEADER_MODULES["asdf"] = "asdf"
-    PYTEST_HEADER_MODULES["pyarrow"] = "pyarrow"
-    TESTED_VERSIONS["Astropy"] = __version__
-
-
-# This has to be in the root dir or it will not display in CI.
-def pytest_report_header(config):
-    # This gets added after the pytest-astropy-header output.
-    return (
-        f'CI: {os.environ.get("CI", "undefined")}\n'
-        f'ARCH_ON_CI: {os.environ.get("ARCH_ON_CI", "undefined")}\n'
-        f'IS_CRON: {os.environ.get("IS_CRON", "undefined")}\n'
-    )
-
-
-# Tell Hypothesis that we might be running slow tests, to print the seed blob
-# so we can easily reproduce failures from CI, and derive a fuzzing profile
-# to try many more inputs when we detect a scheduled build or when specifically
-# requested using the HYPOTHESIS_PROFILE=fuzz environment variable or
-# `pytest --hypothesis-profile=fuzz ...` argument.
-
-hypothesis.settings.register_profile(
-    "ci", deadline=None, print_blob=True, derandomize=True
-)
-hypothesis.settings.register_profile(
-    "fuzzing", deadline=None, print_blob=True, max_examples=1000
-)
-default = (
-    "fuzzing"
-    if (
-        os.environ.get("IS_CRON") == "true"
-        and os.environ.get("ARCH_ON_CI") not in ("aarch64", "ppc64le")
-    )
-    else "ci"
-)
-hypothesis.settings.load_profile(os.environ.get("HYPOTHESIS_PROFILE", default))
-
-# Make sure we use temporary directories for the config and cache
-# so that the tests are insensitive to local configuration.
-
-os.environ["XDG_CONFIG_HOME"] = tempfile.mkdtemp("astropy_config")
-os.environ["XDG_CACHE_HOME"] = tempfile.mkdtemp("astropy_cache")
-
-os.mkdir(os.path.join(os.environ["XDG_CONFIG_HOME"], "astropy"))
-os.mkdir(os.path.join(os.environ["XDG_CACHE_HOME"], "astropy"))
-
-# Note that we don't need to change the environment variables back or remove
-# them after testing, because they are only changed for the duration of the
-# Python process, and this configuration only matters if running pytest
-# directly, not from e.g. an IPython session.
diff --git a/setup.py b/setup.py
deleted file mode 100755
index 0b18ffd8f2..0000000000
--- a/setup.py
+++ /dev/null
@@ -1,69 +0,0 @@
-#!/usr/bin/env python
-# Licensed under a 3-clause BSD style license - see LICENSE.rst
-
-# NOTE: The configuration for the package, including the name, version, and
-# other information are set in the setup.cfg file.
-
-import sys
-
-# First provide helpful messages if contributors try and run legacy commands
-# for tests or docs.
-
-TEST_HELP = """
-Note: running tests is no longer done using 'python setup.py test'. Instead
-you will need to run:
-
-    tox -e test
-
-If you don't already have tox installed, you can install it with:
-
-    pip install tox
-
-If you only want to run part of the test suite, you can also use pytest
-directly with::
-
-    pip install -e .[test]
-    pytest
-
-For more information, see:
-
-  https://docs.astropy.org/en/latest/development/testguide.html#running-tests
-"""
-
-if "test" in sys.argv:
-    print(TEST_HELP)
-    sys.exit(1)
-
-DOCS_HELP = """
-Note: building the documentation is no longer done using
-'python setup.py build_docs'. Instead you will need to run:
-
-    tox -e build_docs
-
-If you don't already have tox installed, you can install it with:
-
-    pip install tox
-
-You can also build the documentation with Sphinx directly using::
-
-    pip install -e .[docs]
-    cd docs
-    make html
-
-For more information, see:
-
-  https://docs.astropy.org/en/latest/install.html#builddocs
-"""
-
-if "build_docs" in sys.argv or "build_sphinx" in sys.argv:
-    print(DOCS_HELP)
-    sys.exit(1)
-
-
-# Only import these if the above checks are okay
-# to avoid masking the real problem with import error.
-from setuptools import setup  # noqa: E402
-
-from extension_helpers import get_extensions  # noqa: E402
-
-setup(ext_modules=get_extensions())
