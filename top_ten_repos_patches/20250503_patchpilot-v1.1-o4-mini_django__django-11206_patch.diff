diff --git a/django/utils/numberformat.py b/django/utils/numberformat.py
index d5baf57..6a9da96 100644
--- a/django/utils/numberformat.py
+++ b/django/utils/numberformat.py
@@ -29,8 +29,17 @@ def format(number, decimal_sep, decimal_pos=None, grouping=0, thousand_sep='',
     if isinstance(number, Decimal):
         # Format values with more than 200 digits (an arbitrary cutoff) using
         # scientific notation to avoid high memory usage in {:f}'.format().
+
         _, digits, exponent = number.as_tuple()
+        # If 'decimal_pos' is given and the number is too small to reach the
+        # first requested decimal place, it should be rendered as 0.[zeros]
+        # instead of scientific notation.
+        if decimal_pos is not None and exponent < 0 and abs(exponent) >= decimal_pos + len(digits):
+            sign_char = '-' if number.is_signed() else ''
+            dec_part = '0' * decimal_pos if decimal_pos else ''
+            return sign_char + '0' + (decimal_sep + dec_part if decimal_pos else '')
         if abs(exponent) + len(digits) > 200:
+
             number = '{:e}'.format(number)
             coefficient, exponent = number.split('e')
             # Format the coefficient.
@@ -76,4 +85,4 @@ def format(number, decimal_sep, decimal_pos=None, grouping=0, thousand_sep='',
             int_part_gd += digit
             cnt += 1
         int_part = int_part_gd[::-1]
-    return sign + int_part + dec_part
+    return sign + int_part + dec_part
