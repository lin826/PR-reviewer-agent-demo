diff --git a/django/db/migrations/serializer.py b/django/db/migrations/serializer.py
index d88cda6e20..2d5158fdc9 100644
--- a/django/db/migrations/serializer.py
+++ b/django/db/migrations/serializer.py
@@ -168,7 +168,22 @@ class FunctionTypeSerializer(BaseSerializer):
         ):
             klass = self.value.__self__
             module = klass.__module__
-            return "%s.%s.%s" % (module, klass.__name__, self.value.__name__), {
+            
+            # Get the path to the class
+            # For nested classes, we need the full path including parent classes
+            if "<" in klass.__qualname__:
+                # For classes defined in local scopes (inside functions/methods),
+                # we can't reliably serialize them, so raise an error
+                raise ValueError(
+                    "Could not find class %s in %s.\n"
+                    % (klass.__name__, module)
+                )
+            
+            # For nested classes, use __qualname__ which includes the full path
+            # e.g., "OuterClass.NestedClass" instead of just "NestedClass"
+            class_path = klass.__qualname__
+            
+            return "%s.%s.%s" % (module, class_path, self.value.__name__), {
                 "import %s" % module
             }
         # Further error checking
