diff --git a/django/db/backends/base/schema.py b/django/db/backends/base/schema.py
index f2ca8c8df9..ff97dc2822 100644
--- a/django/db/backends/base/schema.py
+++ b/django/db/backends/base/schema.py
@@ -562,11 +562,19 @@ class BaseDatabaseSchemaEditor:
         }
         meta_index_names = {constraint.name for constraint in model._meta.indexes}
         columns = [model._meta.get_field(field).column for field in fields]
+        
+        # When removing a UNIQUE imposed by unique_together we want to
+        # ignore the table's primary-key constraint which is also
+        # reported as unique=True by most back-ends (e.g. PostgreSQL).
+        lookup_kwargs = dict(constraint_kwargs)
+        if lookup_kwargs.get("unique") and "primary_key" not in lookup_kwargs:
+            lookup_kwargs["primary_key"] = False
+            
         constraint_names = self._constraint_names(
             model,
             columns,
             exclude=meta_constraint_names | meta_index_names,
-            **constraint_kwargs,
+            **lookup_kwargs,
         )
         if len(constraint_names) != 1:
             raise ValueError(
diff --git a/tests/migrations/__init__.py b/tests/migrations/__init__.py
index e69de29bb2..8b13789179 100644
--- a/tests/migrations/__init__.py
+++ b/tests/migrations/__init__.py
@@ -0,0 +1 @@
+
