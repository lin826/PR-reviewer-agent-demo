diff --git a/django/views/generic/base.py b/django/views/generic/base.py
index db1842e3e5..0bdab01e78 100644
--- a/django/views/generic/base.py
+++ b/django/views/generic/base.py
@@ -148,7 +148,20 @@ class View:
             request.path,
             extra={"status_code": 405, "request": request},
         )
-        return HttpResponseNotAllowed(self._allowed_methods())
+        # Return immediately for purely sync views.
+        response = HttpResponseNotAllowed(self._allowed_methods())
+        if not self.view_is_async:
+            return response
+
+        # For async views wrap the sync response in a coroutine so the async
+        # request path can safely ``await`` the result without raising a
+        # TypeError.  Using a tiny async wrapper avoids hitting the thread-
+        # sensitive sync_to_async adapter for such a trivial constant response.
+
+        async def _wrapped_response():
+            return response
+
+        return _wrapped_response()
 
     def options(self, request, *args, **kwargs):
         """Handle responding to requests for the OPTIONS HTTP verb."""
