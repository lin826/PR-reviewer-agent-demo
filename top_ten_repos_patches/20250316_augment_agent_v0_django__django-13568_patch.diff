diff --git a/django/contrib/auth/checks.py b/django/contrib/auth/checks.py
index 65fc266f7e..350c5a6412 100644
--- a/django/contrib/auth/checks.py
+++ b/django/contrib/auth/checks.py
@@ -2,10 +2,11 @@ from itertools import chain
 from types import MethodType
 
 from django.apps import apps
 from django.conf import settings
 from django.core import checks
+from django.db.models import UniqueConstraint
 
 from .management import _get_builtin_permissions
 
 
 def check_user_model(app_configs=None, **kwargs):
@@ -49,12 +50,25 @@ def check_user_model(app_configs=None, **kwargs):
                 obj=cls,
                 id='auth.E002',
             )
         )
 
-    # Check that the username field is unique
-    if not cls._meta.get_field(cls.USERNAME_FIELD).unique:
+    # Check that the username field is unique or has a UniqueConstraint
+    username_field = cls.USERNAME_FIELD
+    field_is_unique = cls._meta.get_field(username_field).unique
+    
+    # Check if the field is in a UniqueConstraint
+    has_unique_constraint = False
+    if not field_is_unique:
+        for constraint in cls._meta.constraints:
+            if (isinstance(constraint, UniqueConstraint) and 
+                username_field in constraint.fields and 
+                constraint.condition is None):
+                has_unique_constraint = True
+                break
+    
+    if not field_is_unique and not has_unique_constraint:
         if (settings.AUTHENTICATION_BACKENDS ==
                 ['django.contrib.auth.backends.ModelBackend']):
             errors.append(
                 checks.Error(
                     "'%s.%s' must be unique because it is named as the 'USERNAME_FIELD'." % (
