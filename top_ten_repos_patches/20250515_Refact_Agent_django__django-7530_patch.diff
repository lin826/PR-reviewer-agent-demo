diff --git a/django/core/management/commands/makemigrations.py b/django/core/management/commands/makemigrations.py
index 0b39536f5b..aee38c6724 100644
--- a/django/core/management/commands/makemigrations.py
+++ b/django/core/management/commands/makemigrations.py
@@ -101,12 +101,19 @@ class Command(BaseCommand):
         aliases_to_check = connections if settings.DATABASE_ROUTERS else [DEFAULT_DB_ALIAS]
         for alias in sorted(aliases_to_check):
             connection = connections[alias]
-            if (connection.settings_dict['ENGINE'] != 'django.db.backends.dummy' and any(
+            if (
+                connection.settings_dict['ENGINE'] != 'django.db.backends.dummy'
+                and any(
                     # At least one model must be migrated to the database.
-                    router.allow_migrate(connection.alias, app_label, model_name=model._meta.object_name)
+                    router.allow_migrate(
+                        connection.alias,
+                        model._meta.app_label,
+                        model_name=model._meta.object_name,
+                    )
                     for app_label in consistency_check_labels
-                    for model in apps.get_models(app_label)
-            )):
+                    for model in apps.get_app_config(app_label).get_models()
+                )
+            ):
                 loader.check_consistent_history(connection)
 
         # Before anything else, see if there's conflicting apps and drop out
