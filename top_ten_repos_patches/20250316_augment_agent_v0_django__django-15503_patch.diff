diff --git a/django/db/models/fields/json.py b/django/db/models/fields/json.py
index fdca700c9d..0110a8d57f 100644
--- a/django/db/models/fields/json.py
+++ b/django/db/models/fields/json.py
@@ -124,20 +124,24 @@ class JSONField(CheckFieldDefaultMixin, Field):
                 **kwargs,
             }
         )
 
 
-def compile_json_path(key_transforms, include_root=True):
+def compile_json_path(key_transforms, include_root=True, treat_numeric_as_string=False):
     path = ["$"] if include_root else []
     for key_transform in key_transforms:
         try:
             num = int(key_transform)
         except ValueError:  # non-integer
             path.append(".")
             path.append(json.dumps(key_transform))
         else:
-            path.append("[%s]" % num)
+            if treat_numeric_as_string:
+                path.append(".")
+                path.append(json.dumps(str(num)))
+            else:
+                path.append("[%s]" % num)
     return "".join(path)
 
 
 class DataContains(PostgresOperatorLookup):
     lookup_name = "contains"
@@ -195,11 +199,11 @@ class HasKeyLookup(PostgresOperatorLookup):
                 rhs_key_transforms = [key]
             rhs_params.append(
                 "%s%s"
                 % (
                     lhs_json_path,
-                    compile_json_path(rhs_key_transforms, include_root=False),
+                    compile_json_path(rhs_key_transforms, include_root=False, treat_numeric_as_string=True),
                 )
             )
         # Add condition for each key.
         if self.logical_operator:
             sql = "(%s)" % self.logical_operator.join([sql] * len(rhs_params))
