diff --git a/astropy/io/fits/connect.py b/astropy/io/fits/connect.py
index 4b6150f4ac..1f51fe4835 100644
--- a/astropy/io/fits/connect.py
+++ b/astropy/io/fits/connect.py
@@ -69,7 +69,7 @@ def is_fits(origin, filepath, fileobj, *args, **kwargs):
             (".fits", ".fits.gz", ".fit", ".fit.gz", ".fts", ".fts.gz")
         ):
             return True
-    return isinstance(args[0], (HDUList, TableHDU, BinTableHDU, GroupsHDU))
+    return len(args) > 0 and isinstance(args[0], (HDUList, TableHDU, BinTableHDU, GroupsHDU))
 
 
 def _decode_mixins(tbl):
diff --git a/astropy/io/fits/tests/test_connect.py b/astropy/io/fits/tests/test_connect.py
index c5c31033f3..7fc1a2b66e 100644
--- a/astropy/io/fits/tests/test_connect.py
+++ b/astropy/io/fits/tests/test_connect.py
@@ -24,6 +24,8 @@ from astropy.utils.compat import NUMPY_LT_1_22
 from astropy.utils.data import get_pkg_data_filename
 from astropy.utils.exceptions import AstropyDeprecationWarning, AstropyUserWarning
 from astropy.utils.misc import _NOT_OVERWRITING_MSG_MATCH
+from astropy.io.registry import identify_format
+from astropy.io.fits.connect import is_fits
 
 # FITS does not preserve precision, in_subfmt, and out_subfmt.
 time_attrs = ["value", "shape", "format", "scale", "location"]
@@ -1002,3 +1004,24 @@ def test_meta_not_modified(tmp_path):
     t.write(filename)
     assert len(t.meta) == 1
     assert t.meta["comments"] == ["a", "b"]
+
+
+def test_is_fits_empty_args_regression():
+    """
+    Regression test for IndexError when is_fits is called with empty args
+    and non-FITS extension.
+    
+    This tests the fix for: https://github.com/astropy/astropy/issues/XXXX
+    """
+    # Test is_fits function directly - should not raise IndexError
+    result = is_fits("write", "test.ecsv", None)
+    assert result is False
+    
+    # Test with FITS extension - should work as before
+    result = is_fits("write", "test.fits", None)
+    assert result is True
+    
+    # Test identify_format - the original failing case
+    result = identify_format("write", Table, "bububu.ecsv", None, [], {})
+    assert isinstance(result, list)
+    assert "ascii.ecsv" in result
