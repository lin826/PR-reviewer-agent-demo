diff --git a/lib/matplotlib/contour.py b/lib/matplotlib/contour.py
index 144eadeae2..9d3c97e88d 100644
--- a/lib/matplotlib/contour.py
+++ b/lib/matplotlib/contour.py
@@ -1446,6 +1446,15 @@ class QuadContourSet(ContourSet):
         else:
             fn = 'contour'
         nargs = len(args)
+        
+        # Check if input is a boolean array before any processing
+        is_bool_array = False
+        if nargs >= 1:
+            if nargs <= 2:
+                is_bool_array = hasattr(args[0], 'dtype') and args[0].dtype == np.bool_
+            elif nargs <= 4:
+                is_bool_array = hasattr(args[2], 'dtype') and args[2].dtype == np.bool_
+        
         if nargs <= 2:
             z = ma.asarray(args[0], dtype=np.float64)
             x, y = self._initialize_x_y(z)
@@ -1455,6 +1464,7 @@ class QuadContourSet(ContourSet):
             args = args[3:]
         else:
             raise _api.nargs_error(fn, takes="from 1 to 4", given=nargs)
+        
         z = ma.masked_invalid(z, copy=False)
         self.zmax = float(z.max())
         self.zmin = float(z.min())
@@ -1462,7 +1472,14 @@ class QuadContourSet(ContourSet):
             z = ma.masked_where(z <= 0, z)
             _api.warn_external('Log scale: values of z <= 0 have been masked')
             self.zmin = float(z.min())
-        self._process_contour_level_args(args)
+        
+        # If input was a boolean array and levels not specified, use [0.5]
+        # Note: self.levels is set in __init__ before _contour_args is called
+        if is_bool_array and self.levels is None:
+            self.levels = [0.5]
+        else:
+            self._process_contour_level_args(args)
+            
         return (x, y, z)
 
     def _check_xyz(self, args, kwargs):
