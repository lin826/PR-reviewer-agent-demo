diff --git a/django/contrib/admin/sites.py b/django/contrib/admin/sites.py
index 61be31d890..90382ad665 100644
--- a/django/contrib/admin/sites.py
+++ b/django/contrib/admin/sites.py
@@ -453,7 +453,14 @@ class AdminSite:
                 pass
             else:
                 if getattr(match.func, "should_append_slash", True):
-                    return HttpResponsePermanentRedirect("%s/" % request.path)
+                    # Preserve query string when redirecting with trailing slash
+                    full_path = request.get_full_path()
+                    if '?' in full_path:
+                        path_part, query_part = full_path.split('?', 1)
+                        redirect_url = path_part + '/?' + query_part
+                    else:
+                        redirect_url = full_path + '/'
+                    return HttpResponsePermanentRedirect(redirect_url)
         raise Http404
 
     def _build_app_dict(self, request, label=None):
diff --git a/tests/admin_views/tests.py b/tests/admin_views/tests.py
index 5f7aafe430..60ec13221f 100644
--- a/tests/admin_views/tests.py
+++ b/tests/admin_views/tests.py
@@ -8463,6 +8463,23 @@ class AdminSiteFinalCatchAllPatternTests(TestCase):
             response, known_url, status_code=301, target_status_code=403
         )
 
+    @override_settings(APPEND_SLASH=True)
+    def test_missing_slash_append_slash_true_preserves_query_string(self):
+        superuser = User.objects.create_user(
+            username="staff",
+            password="secret",
+            email="staff@example.com",
+            is_staff=True,
+        )
+        self.client.force_login(superuser)
+        known_url = reverse("admin:admin_views_article_changelist")
+        # Test with query string
+        response = self.client.get(known_url[:-1] + "?id=123&test=value")
+        expected_url = known_url + "?id=123&test=value"
+        self.assertRedirects(
+            response, expected_url, status_code=301, target_status_code=403
+        )
+
     @override_settings(APPEND_SLASH=True)
     def test_missing_slash_append_slash_true_script_name(self):
         superuser = User.objects.create_user(
