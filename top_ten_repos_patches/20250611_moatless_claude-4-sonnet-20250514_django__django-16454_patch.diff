--- a/django/core/management/base.py
+++ b/django/core/management/base.py
@@ -70,6 +70,26 @@
             super().error(message)
         else:
             raise CommandError("Error: %s" % message)
+
+    def add_subparsers(self, **kwargs):
+        # Ensure subparsers inherit error handling attributes from parent
+        if 'parser_class' not in kwargs:
+            kwargs['parser_class'] = type(self)
+        
+        # Create a wrapper class that passes parent attributes to subparsers
+        parent_parser_class = kwargs['parser_class']
+        parent_missing_args_message = self.missing_args_message
+        parent_called_from_command_line = self.called_from_command_line
+        
+        class SubparserWrapper(parent_parser_class):
+            def __init__(self, **subparser_kwargs):
+                # Set the parent's special attributes if they're not explicitly provided
+                subparser_kwargs.setdefault('missing_args_message', parent_missing_args_message)
+                subparser_kwargs.setdefault('called_from_command_line', parent_called_from_command_line)
+                super().__init__(**subparser_kwargs)
+        
+        kwargs['parser_class'] = SubparserWrapper
+        return super().add_subparsers(**kwargs)
 
 
 def handle_default_options(options):
