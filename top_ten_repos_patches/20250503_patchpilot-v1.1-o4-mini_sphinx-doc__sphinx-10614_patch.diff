diff --git a/sphinx/ext/inheritance_diagram.py b/sphinx/ext/inheritance_diagram.py
index 5f0da13..cfc58dd 100644
--- a/sphinx/ext/inheritance_diagram.py
+++ b/sphinx/ext/inheritance_diagram.py
@@ -56,8 +56,12 @@ from sphinx.ext.graphviz import (
 from sphinx.util.docutils import SphinxDirective
 from sphinx.util.typing import OptionSpec
 from sphinx.writers.html import HTML5Translator
+
 from sphinx.writers.latex import LaTeXTranslator
 from sphinx.writers.texinfo import TexinfoTranslator
+import posixpath
+from sphinx.util.osutil import relative_uri
+
 
 module_sig_re = re.compile(r'''^(?:([\w.]*)\.)?  # module names
                            (\w+)  \s* $          # class/final module name
@@ -406,22 +410,34 @@ def html_visit_inheritance_diagram(self: HTML5Translator, node: inheritance_diag
     name = 'inheritance%s' % graph_hash
 
     # Create a mapping from fully-qualified class names to URLs.
+
     graphviz_output_format = self.builder.env.config.graphviz_output_format.upper()
-    current_filename = self.builder.current_docname + self.builder.out_suffix
+    imgdir = self.builder.imgpath
+    current_html = self.builder.current_docname + self.builder.out_suffix
     urls = {}
     pending_xrefs = cast(Iterable[addnodes.pending_xref], node)
     for child in pending_xrefs:
         if child.get('refuri') is not None:
             if graphviz_output_format == 'SVG':
-                urls[child['reftitle']] = "../" + child.get('refuri')
+                refuri = child['refuri']
+                if '#' in refuri:
+                    path_part, anchor = refuri.split('#', 1)
+                    anchor = '#' + anchor
+                else:
+                    path_part, anchor = refuri, ''
+                abs_target = posixpath.normpath(
+                    posixpath.join(posixpath.dirname(current_html), path_part)
+                )
+                urls[child['reftitle']] = relative_uri(imgdir, abs_target) + anchor
             else:
-                urls[child['reftitle']] = child.get('refuri')
+                urls[child['reftitle']] = child['refuri']
         elif child.get('refid') is not None:
             if graphviz_output_format == 'SVG':
-                urls[child['reftitle']] = '../' + current_filename + '#' + child.get('refid')
+                urls[child['reftitle']] = relative_uri(imgdir, current_html) + '#' + child.get('refid')
             else:
                 urls[child['reftitle']] = '#' + child.get('refid')
 
+
     dotcode = graph.generate_dot(name, urls, env=self.builder.env)
     render_dot_html(self, node, dotcode, {}, 'inheritance', 'inheritance',
                     alt='Inheritance diagram of ' + node['content'])
