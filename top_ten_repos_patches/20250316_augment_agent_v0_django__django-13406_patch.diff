diff --git a/django/db/models/query.py b/django/db/models/query.py
index b48d0df9c0..f075d13e83 100644
--- a/django/db/models/query.py
+++ b/django/db/models/query.py
@@ -209,10 +209,13 @@ class QuerySet:
         return self._query
 
     @query.setter
     def query(self, value):
         self._query = value
+        # If the query has values_select set, ensure the correct iterable class is used
+        if value.values_select:
+            self._iterable_class = ValuesIterable
 
     def as_manager(cls):
         # Address the circular dependency between `Queryset` and `Manager`.
         from django.db.models.manager import Manager
         manager = Manager.from_queryset(cls)()
@@ -256,10 +259,16 @@ class QuerySet:
                 "Pickled queryset instance's Django version is not specified.",
                 RuntimeWarning,
                 stacklevel=2,
             )
         self.__dict__.update(state)
+        
+        # If the query was pickled from a values() or values_list() queryset,
+        # ensure the correct iterable class is used
+        if hasattr(self, '_query') and self._query.values_select:
+            if not hasattr(self, '_iterable_class') or self._iterable_class == ModelIterable:
+                self._iterable_class = ValuesIterable
 
     def __repr__(self):
         data = list(self[:REPR_OUTPUT_SIZE + 1])
         if len(data) > REPR_OUTPUT_SIZE:
             data[-1] = "...(remaining elements truncated)..."
