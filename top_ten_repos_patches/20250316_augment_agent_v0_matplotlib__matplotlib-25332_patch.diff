diff --git a/lib/matplotlib/figure.py b/lib/matplotlib/figure.py
index b4c38368bf..36f5560d5d 100644
--- a/lib/matplotlib/figure.py
+++ b/lib/matplotlib/figure.py
@@ -3172,10 +3172,15 @@ None}, default: None
 
         # check whether the figure manager (if any) is registered with pyplot
         from matplotlib import _pylab_helpers
         if self.canvas.manager in _pylab_helpers.Gcf.figs.values():
             state['_restore_to_pylab'] = True
+            
+        # Remove _align_label_groups which contains unpicklable weak references
+        if '_align_label_groups' in state:
+            state.pop('_align_label_groups')
+            
         return state
 
     def __setstate__(self, state):
         version = state.pop('__mpl_version__')
         restore_to_pylab = state.pop('_restore_to_pylab', False)
@@ -3187,10 +3192,13 @@ None}, default: None
 
         self.__dict__ = state
 
         # re-initialise some of the unstored state information
         FigureCanvasBase(self)  # Set self.canvas.
+        
+        # Reinitialize _align_label_groups which was excluded from the pickled state
+        self._align_label_groups = {"x": cbook.Grouper(), "y": cbook.Grouper()}
 
         if restore_to_pylab:
             # lazy import to avoid circularity
             import matplotlib.pyplot as plt
             import matplotlib._pylab_helpers as pylab_helpers
