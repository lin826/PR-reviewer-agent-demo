--- a/sympy/simplify/simplify.py
+++ b/sympy/simplify/simplify.py
@@ -251,8 +251,24 @@
             eq[i] = e.subs(reps)
         return f(eq), {r: s for s, r in reps.items()}
 
-    reps = {s: Dummy(s.name, positive=True)
-                 for s in eq.free_symbols if s.is_positive is None}
+    # Preserve assumptions that are compatible with positive
+    # These are mathematical properties that don't conflict with being positive
+    preserved_assumptions = [
+        'finite', 'integer', 'rational', 'algebraic', 'irrational',
+        'transcendental', 'even', 'odd', 'prime', 'composite'
+    ]
+    
+    reps = {}
+    for s in eq.free_symbols:
+        if s.is_positive is None:
+            # Start with positive=True and preserve compatible assumptions
+            new_assumptions = {'positive': True}
+            for assumption in preserved_assumptions:
+                value = getattr(s, f'is_{assumption}', None)
+                if value is True:
+                    new_assumptions[assumption] = True
+            
+            reps[s] = Dummy(s.name, **new_assumptions)
     eq = eq.subs(reps)
     return eq, {r: s for s, r in reps.items()}
 
