diff --git a/sphinx/ext/autodoc/mock.py b/sphinx/ext/autodoc/mock.py
index 98a3a3a96..f66a9379d 100644
--- a/sphinx/ext/autodoc/mock.py
+++ b/sphinx/ext/autodoc/mock.py
@@ -52,10 +52,10 @@ class _MockObject:
     def __mro_entries__(self, bases: Tuple) -> Tuple:
         return (self.__class__,)
 
-    def __getitem__(self, key: str) -> "_MockObject":
+    def __getitem__(self, key: Any) -> "_MockObject":
         return _make_subclass(key, self.__display_name__, self.__class__)()
 
-    def __getattr__(self, key: str) -> "_MockObject":
+    def __getattr__(self, key: Any) -> "_MockObject":
         return _make_subclass(key, self.__display_name__, self.__class__)()
 
     def __call__(self, *args: Any, **kwargs: Any) -> Any:
@@ -68,12 +68,14 @@ class _MockObject:
         return self.__display_name__
 
 
-def _make_subclass(name: str, module: str, superclass: Any = _MockObject,
+def _make_subclass(name: Any, module: str, superclass: Any = _MockObject,
                    attributes: Any = None) -> Any:
-    attrs = {'__module__': module, '__display_name__': module + '.' + name}
+    from sphinx.util.typing import stringify
+    name_str = stringify(name)
+    attrs = {'__module__': module, '__display_name__': module + '.' + name_str}
     attrs.update(attributes or {})
 
-    return type(name, (superclass,), attrs)
+    return type(name_str, (superclass,), attrs)
 
 
 class _MockModule(ModuleType):

