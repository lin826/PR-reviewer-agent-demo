diff --git a/sympy/concrete/expr_with_limits.py b/sympy/concrete/expr_with_limits.py
index 8ecef66133..00a9ba5973 100644
--- a/sympy/concrete/expr_with_limits.py
+++ b/sympy/concrete/expr_with_limits.py
@@ -427,4 +427,4 @@ def _eval_expand_basic(self, **hints):
                 [self.func(i, *self.limits) for i in summand._mat])
         elif summand != self.function:
             return self.func(summand, *self.limits)
-        return self
+        return self
diff --git a/sympy/concrete/products.py b/sympy/concrete/products.py
index 66aafde2d6..82925595f8 100644
--- a/sympy/concrete/products.py
+++ b/sympy/concrete/products.py
@@ -274,8 +274,21 @@ def _eval_product(self, term, limits):
 
             return poly.LC()**(n - a + 1) * A * B
 
+
         elif term.is_Add:
+            # Products do not distribute over addition.  If the summand
+            # depends on the dummy variable we cannot evaluate the product
+            # directly, so leave it unevaluated.
+
+            if term.has(k):
+                # Evaluate only if the Add represents a rational function
+                # (numerator and denominator both polynomial in the dummy).
+                p, q = term.as_numer_denom()
+                if not (p.is_polynomial(k) and q.is_polynomial(k)):
+                    return None
+
             p, q = term.as_numer_denom()
+
             q = self._eval_product(q, (k, a, n))
             if q.is_Number:
 
@@ -514,4 +527,4 @@ def product(*args, **kwargs):
     if isinstance(prod, Product):
         return prod.doit(deep=False)
     else:
-        return prod
+        return prod
diff --git a/sympy/core/basic.py b/sympy/core/basic.py
index afcdd46be5..bfafb3956a 100644
--- a/sympy/core/basic.py
+++ b/sympy/core/basic.py
@@ -1911,4 +1911,4 @@ def _make_find_query(query):
         return lambda expr: isinstance(expr, query)
     elif isinstance(query, Basic):
         return lambda expr: expr.match(query) is not None
-    return query
+    return query
diff --git a/sympy/core/expr.py b/sympy/core/expr.py
index 25fc5a0fd9..4f03a33b5e 100644
--- a/sympy/core/expr.py
+++ b/sympy/core/expr.py
@@ -3402,4 +3402,4 @@ def _n2(a, b):
 from .function import Derivative, Function
 from .mod import Mod
 from .exprtools import factor_terms
-from .numbers import Integer, Rational
+from .numbers import Integer, Rational
diff --git a/sympy/simplify/hyperexpand.py b/sympy/simplify/hyperexpand.py
index 8cd3f06330..3b95d26324 100644
--- a/sympy/simplify/hyperexpand.py
+++ b/sympy/simplify/hyperexpand.py
@@ -2470,4 +2470,4 @@ def do_meijer(ap, bq, z):
                    allow_hyper, rewrite=rewrite, place=place)
         if not r.has(nan, zoo, oo, -oo):
             return r
-    return f.replace(hyper, do_replace).replace(meijerg, do_meijer)
+    return f.replace(hyper, do_replace).replace(meijerg, do_meijer)
