diff --git a/src/_pytest/pastebin.py b/src/_pytest/pastebin.py
index 41576a615..4e50d513a 100644
--- a/src/_pytest/pastebin.py
+++ b/src/_pytest/pastebin.py
@@ -75,22 +75,26 @@ def create_new_paste(contents):
         from urllib import urlopen, urlencode
     else:
         from urllib.request import urlopen
         from urllib.parse import urlencode
 
+    # Convert bytes to string if necessary
+    if isinstance(contents, bytes):
+        contents = contents.decode("utf-8")
+    
     params = {
         "code": contents,
-        "lexer": "python3" if sys.version_info[0] >= 3 else "python",
+        "lexer": "text",
         "expiry": "1week",
     }
     url = "https://bpaste.net"
     response = urlopen(url, data=urlencode(params).encode("ascii")).read()
     m = re.search(r'href="/raw/(\w+)"', response.decode("utf-8"))
     if m:
         return "%s/show/%s" % (url, m.group(1))
     else:
-        return "bad response: " + response
+        return "bad response: " + response.decode("utf-8")
 
 
 def pytest_terminal_summary(terminalreporter):
     import _pytest.config
 
diff --git a/testing/test_pastebin.py b/testing/test_pastebin.py
index bac8f9802..02efdb554 100644
--- a/testing/test_pastebin.py
+++ b/testing/test_pastebin.py
@@ -124,10 +124,10 @@ class TestPaste(object):
         result = pastebin.create_new_paste(b"full-paste-contents")
         assert result == "https://bpaste.net/show/3c0c6750bd"
         assert len(mocked_urlopen) == 1
         url, data = mocked_urlopen[0]
         assert type(data) is bytes
-        lexer = "python3" if sys.version_info[0] >= 3 else "python"
+        lexer = "text"
         assert url == "https://bpaste.net"
         assert "lexer=%s" % lexer in data.decode()
         assert "code=full-paste-contents" in data.decode()
         assert "expiry=1week" in data.decode()
