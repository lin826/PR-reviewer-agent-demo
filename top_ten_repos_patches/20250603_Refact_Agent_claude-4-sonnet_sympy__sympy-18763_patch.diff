diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py
index 8743723ea0..f801159c86 100644
--- a/sympy/printing/latex.py
+++ b/sympy/printing/latex.py
@@ -15,7 +15,7 @@
 from sympy.logic.boolalg import true
 
 # sympy.printing imports
-from sympy.printing.precedence import precedence_traditional
+from sympy.printing.precedence import precedence_traditional, PRECEDENCE
 from sympy.printing.printer import Printer
 from sympy.printing.conventions import split_super_sub, requires_partial
 from sympy.printing.precedence import precedence, PRECEDENCE
@@ -698,7 +698,7 @@ def _print_Derivative(self, expr):
 
     def _print_Subs(self, subs):
         expr, old, new = subs.args
-        latex_expr = self._print(expr)
+        latex_expr = self.parenthesize(expr, PRECEDENCE['Mul'])
         latex_old = (self._print(e) for e in old)
         latex_new = (self._print(e) for e in new)
         latex_subs = r'\\ '.join(
diff --git a/sympy/printing/tests/test_latex.py b/sympy/printing/tests/test_latex.py
index 3d387cf052..d1d7114924 100644
--- a/sympy/printing/tests/test_latex.py
+++ b/sympy/printing/tests/test_latex.py
@@ -674,7 +674,15 @@ def test_latex_derivatives():
 
 def test_latex_subs():
     assert latex(Subs(x*y, (
-        x, y), (1, 2))) == r'\left. x y \right|_{\substack{ x=1\\ y=2 }}'
+        x, y), (1, 2))) == r'\left. \left(x y\right) \right|_{\substack{ x=1\\ y=2 }}'
+    
+    # Test the original issue: multiplication with Subs should parenthesize inner expression
+    assert latex(3*Subs(-x+y, (x,), (1,))) == r'3 \left. \left(- x + y\right) \right|_{\substack{ x=1 }}'
+    
+    # Test various precedence cases
+    assert latex(2*Subs(x + y, (x,), (1,))) == r'2 \left. \left(x + y\right) \right|_{\substack{ x=1 }}'
+    assert latex(Subs(x**2, (x,), (1,))) == r'\left. x^{2} \right|_{\substack{ x=1 }}'
+    assert latex(Subs(x, (x,), (1,))) == r'\left. x \right|_{\substack{ x=1 }}'
 
 
 def test_latex_integrals():
