diff --git a/django/forms/models.py b/django/forms/models.py
index 192d9fad94..cb0d7d9d33 100644
--- a/django/forms/models.py
+++ b/django/forms/models.py
@@ -253,6 +253,7 @@ class ModelFormOptions:
         self.help_texts = getattr(options, "help_texts", None)
         self.error_messages = getattr(options, "error_messages", None)
         self.field_classes = getattr(options, "field_classes", None)
+        self.formfield_callback = getattr(options, "formfield_callback", None)
 
 
 class ModelFormMetaclass(DeclarativeFieldsMetaclass):
@@ -263,6 +264,11 @@ class ModelFormMetaclass(DeclarativeFieldsMetaclass):
                 base_formfield_callback = b.Meta.formfield_callback
                 break
 
+        # Check for formfield_callback in current class's Meta
+        meta = attrs.get("Meta")
+        if meta and hasattr(meta, "formfield_callback"):
+            base_formfield_callback = meta.formfield_callback
+            
         formfield_callback = attrs.pop("formfield_callback", base_formfield_callback)
 
         new_class = super().__new__(mcs, name, bases, attrs)
@@ -303,12 +309,15 @@ class ModelFormMetaclass(DeclarativeFieldsMetaclass):
                 # fields from the model"
                 opts.fields = None
 
+            # Use the formfield_callback from the Meta class if available and no callback is explicitly defined
+            callback = formfield_callback or opts.formfield_callback
+
             fields = fields_for_model(
                 opts.model,
                 opts.fields,
                 opts.exclude,
                 opts.widgets,
-                formfield_callback,
+                callback,
                 opts.localized_fields,
                 opts.labels,
                 opts.help_texts,
@@ -636,7 +645,10 @@ def modelform_factory(
     class_name = model.__name__ + "Form"
 
     # Class attributes for the new form class.
-    form_class_attrs = {"Meta": Meta, "formfield_callback": formfield_callback}
+    form_class_attrs = {"Meta": Meta}
+    # Only set formfield_callback at the class level if explicitly provided
+    if formfield_callback:
+        form_class_attrs["formfield_callback"] = formfield_callback
 
     if getattr(Meta, "fields", None) is None and getattr(Meta, "exclude", None) is None:
         raise ImproperlyConfigured(

