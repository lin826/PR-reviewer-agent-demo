diff --git a/sklearn/model_selection/_split.py b/sklearn/model_selection/_split.py
index c49a3ce6a..63ef0a301 100644
--- a/sklearn/model_selection/_split.py
+++ b/sklearn/model_selection/_split.py
@@ -1163,6 +1163,29 @@ class _RepeatedSplits(metaclass=ABCMeta):
                      **self.cvargs)
         return cv.get_n_splits(X, y, groups) * self.n_repeats
 
+    def __repr__(self):
+        # Use the same approach as _build_repr but handle the special case
+        # where n_splits is stored in cvargs instead of as a direct attribute
+        class_name = self.__class__.__name__
+        
+        # Get the constructor signature to determine parameter order
+        init_signature = signature(self.__class__.__init__)
+        # Consider the constructor parameters excluding 'self', sorted alphabetically
+        # to match the behavior of _build_repr
+        args = sorted([p.name for p in init_signature.parameters.values()
+                       if p.name != 'self' and p.kind != p.VAR_KEYWORD])
+        
+        params = dict()
+        for key in args:
+            if key == 'n_splits':
+                # n_splits is stored in cvargs, not as a direct attribute
+                params[key] = self.cvargs.get('n_splits', 5)
+            else:
+                # For other parameters, get them as direct attributes
+                params[key] = getattr(self, key, None)
+        
+        return '%s(%s)' % (class_name, _pprint(params, offset=len(class_name)))
+
 
 class RepeatedKFold(_RepeatedSplits):
     """Repeated K-Fold cross validator.
