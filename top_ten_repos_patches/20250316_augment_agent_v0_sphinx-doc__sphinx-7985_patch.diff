diff --git b/sphinx/builders/linkcheck.py a/sphinx/builders/linkcheck.py
index 4fd1e8623..dd5317087 100644
--- b/sphinx/builders/linkcheck.py
+++ a/sphinx/builders/linkcheck.py
@@ -23,11 +23,11 @@ from docutils.nodes import Node
 from requests.exceptions import HTTPError
 
 from sphinx.application import Sphinx
 from sphinx.builders import Builder
 from sphinx.locale import __
-from sphinx.util import encode_uri, requests, logging, docname_join
+from sphinx.util import encode_uri, requests, logging
 from sphinx.util.console import (  # type: ignore
     purple, red, darkgreen, darkgray, turquoise
 )
 from sphinx.util.nodes import get_node_line
 from sphinx.util.requests import is_ssl_error
@@ -211,29 +211,11 @@ class CheckExternalLinksBuilder(Builder):
         def check() -> Tuple[str, str, int]:
             # check for various conditions without bothering the network
             if len(uri) == 0 or uri.startswith(('#', 'mailto:', 'ftp:')):
                 return 'unchecked', '', 0
             elif not uri.startswith(('http:', 'https:')):
-                # Check if local link exists
-                try:
-                    # Get the current document name
-                    refdoc = docname
-                    
-                    # Join the reference document with the target URI to get the full document name
-                    target_docname = docname_join(refdoc, uri)
-                    
-                    # Check if the document exists in the environment
-                    if target_docname in self.env.all_docs:
-                        return 'working', '', 0
-                    else:
-                        # Try to see if it's a file in the source directory
-                        if path.isfile(path.join(self.env.srcdir, uri)):
-                            return 'working', '', 0
-                        else:
-                            return 'broken', 'document not found: ' + uri, 0
-                except Exception as exc:
-                    return 'broken', str(exc), 0
+                return 'local', '', 0
             elif uri in self.good:
                 return 'working', 'old', 0
             elif uri in self.broken:
                 return 'broken', self.broken[uri], 0
             elif uri in self.redirected:
@@ -284,12 +266,10 @@ class CheckExternalLinksBuilder(Builder):
                 logger.info(darkgray('-ignored- ') + uri + ': ' + info)
             else:
                 logger.info(darkgray('-ignored- ') + uri)
             self.write_linkstat(linkstat)
         elif status == 'local':
-            # Local links are now checked, so this case should not occur anymore
-            # But we keep it for backward compatibility
             logger.info(darkgray('-local-   ') + uri)
             self.write_entry('local', docname, filename, lineno, uri)
             self.write_linkstat(linkstat)
         elif status == 'working':
             logger.info(darkgreen('ok        ') + uri + info)
