diff --git a/lib/matplotlib/colors.py b/lib/matplotlib/colors.py
index 2d3072da04..7b0d295d52 100644
--- a/lib/matplotlib/colors.py
+++ b/lib/matplotlib/colors.py
@@ -725,10 +725,30 @@ class Colormap:
                 # Avoid converting large positive values to negative integers.
                 np.clip(xa, -1, self.N, out=xa)
                 xa = xa.astype(int)
         # Set the over-range indices before the under-range;
         # otherwise the under-range values get converted to over-range.
+        # Ensure xa can hold the special indices without overflow
+        max_index = self._i_bad  # Largest index we'll assign
+        if xa.dtype.kind in 'ui' and np.issubdtype(xa.dtype, np.integer):
+            # Check if the current dtype can hold max_index
+            info = np.iinfo(xa.dtype)
+            if max_index > info.max or max_index < info.min:
+                # Promote to a larger dtype that can hold the values
+                if max_index <= np.iinfo(np.int32).max:
+                    xa = xa.astype(np.int32)
+                elif xa.dtype == np.uint64:
+                    # uint64 is special - numpy.take() doesn't handle it well
+                    # Convert to int64, clipping very large values first
+                    xa = np.clip(xa, 0, np.iinfo(np.int64).max).astype(np.int64)
+                else:
+                    xa = xa.astype(np.int64)
+            elif xa.dtype == np.uint64:
+                # Even if max_index fits in uint64, numpy.take() has issues with uint64
+                # Convert to int64, clipping very large values first
+                xa = np.clip(xa, 0, np.iinfo(np.int64).max).astype(np.int64)
+        
         xa[xa > self.N - 1] = self._i_over
         xa[xa < 0] = self._i_under
         xa[mask_bad] = self._i_bad
 
         lut = self._lut
