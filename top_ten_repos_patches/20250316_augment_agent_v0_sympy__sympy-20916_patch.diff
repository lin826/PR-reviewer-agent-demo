diff --git a/sympy/printing/pretty/pretty_symbology.py b/sympy/printing/pretty/pretty_symbology.py
index 3f7c4a2dc7..4e7e52d210 100644
--- a/sympy/printing/pretty/pretty_symbology.py
+++ b/sympy/printing/pretty/pretty_symbology.py
@@ -541,31 +541,48 @@ def pretty_list(l, mapping):
             pretty = mapping.get(s)
             if pretty is None:
                 try:  # match by separate characters
                     pretty = ''.join([mapping[c] for c in s])
                 except (TypeError, KeyError):
+                    # Special case for digits - we know these have Unicode subscripts
+                    if s.isdigit():
+                        pretty = ''.join([mapping[c] for c in s if c in mapping])
+                        if pretty:  # Only return if we got something
+                            result.append(pretty)
+                            continue
                     return None
             result.append(pretty)
         return result
 
     pretty_sups = pretty_list(sups, sup)
-    if pretty_sups is not None:
-        pretty_subs = pretty_list(subs, sub)
-    else:
-        pretty_subs = None
+    pretty_subs = pretty_list(subs, sub)
 
     # glue the results into one string
     if pretty_subs is None:  # nice formatting of sups/subs did not work
+        # Special case for Greek letters with numeric subscripts
+        if subs and all(s.isdigit() for s in subs) and name in greek_unicode.values():
+            # For Greek letters with numeric subscripts, we can use Unicode subscript digits
+            subs_result = ''.join([sub[s] for s in subs if s in sub])
+            return name + subs_result
+        
         if subs:
             name += '_'+'_'.join([translate(s, bold_name) for s in subs])
         if sups:
             name += '__'+'__'.join([translate(s, bold_name) for s in sups])
         return name
     else:
         sups_result = ' '.join(pretty_sups)
         subs_result = ' '.join(pretty_subs)
 
+    # Special case for Greek letters with numeric subscripts
+    # This ensures that subscripts are always properly formatted for Greek letters
+    if name in greek_unicode.values() and subs and all(s.isdigit() for s in subs):
+        # For Greek letters with numeric subscripts, we can use Unicode subscript digits directly
+        # This is a fallback in case the pretty_list function fails
+        subs_result = ''.join([sub[s] for s in subs if s in sub])
+        return name + subs_result
+
     return ''.join([name, sups_result, subs_result])
 
 
 def annotated(letter):
     """
