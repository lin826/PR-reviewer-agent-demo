diff --git a/django/db/migrations/serializer.py b/django/db/migrations/serializer.py
index 27b5cbd379..a1f885d440 100644
--- a/django/db/migrations/serializer.py
+++ b/django/db/migrations/serializer.py
@@ -120,9 +120,17 @@ class EnumSerializer(BaseSerializer):
     def serialize(self):
         enum_class = self.value.__class__
         module = enum_class.__module__
-        v_string, v_imports = serializer_factory(self.value.value).serialize()
-        imports = {'import %s' % module, *v_imports}
-        return "%s.%s(%s)" % (module, enum_class.__name__, v_string), imports
+        # Use the member's *name* rather than its (possibly translated) *value*
+        # to ensure migrations stay valid regardless of runtime localisation or
+        # other value-changes.
+        #
+        # We purposely avoid delegating to `serializer_factory(self.value.name)`
+        # because Enum names are guaranteed to be valid identifiers (thus safe
+        # to embed directly) and this keeps the generated imports minimal.
+        imports = {'import %s' % module}
+        # `EnumClass['NAME']` is the canonical, safe expression that returns the
+        # same Enum member, even if its value changes.
+        return "%s.%s[%r]" % (module, enum_class.__name__, self.value.name), imports
 
 
 class FloatSerializer(BaseSimpleSerializer):
