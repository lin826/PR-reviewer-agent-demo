diff --git a/sympy/polys/polytools.py b/sympy/polys/polytools.py
index d5ac051f63..e2a2fe5a3f 100644
--- a/sympy/polys/polytools.py
+++ b/sympy/polys/polytools.py
@@ -11,7 +11,7 @@
 from sympy.core.basic import preorder_traversal
 from sympy.core.relational import Relational
 from sympy.core.sympify import sympify
-from sympy.core.decorators import _sympifyit
+from sympy.core.decorators import _sympifyit, call_highest_priority
 from sympy.core.function import Derivative
 
 from sympy.logic.boolalg import BooleanAtom
@@ -99,8 +99,9 @@ class Poly(Expr):
     See Also
     ========
     sympy.core.expr.Expr
-
     """
+    # Set a higher priority than Expr's 10.0 to ensure Poly's methods are called
+    _op_priority = 11.0
 
     __slots__ = ['rep', 'gens']
 
@@ -4037,6 +4038,7 @@ def __rsub__(f, g):
 
         return g.sub(f)
 
+    @call_highest_priority('__rmul__')
     @_sympifyit('g', NotImplemented)
     def __mul__(f, g):
         if not g.is_Poly:
@@ -4047,13 +4049,19 @@ def __mul__(f, g):
 
         return f.mul(g)
 
+    @call_highest_priority('__mul__')
     @_sympifyit('g', NotImplemented)
     def __rmul__(f, g):
         if not g.is_Poly:
             try:
                 g = f.__class__(g, *f.gens)
             except PolynomialError:
-                return g*f.as_expr()
+                # Try to convert the result back to a Poly if possible
+                result = g*f.as_expr()
+                try:
+                    return f.__class__(result, *f.gens)
+                except PolynomialError:
+                    return result
 
         return g.mul(f)
 
