diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py
index 29e33c075f..defc7eab37 100644
--- a/django/db/models/sql/compiler.py
+++ b/django/db/models/sql/compiler.py
@@ -1405,13 +1405,26 @@ class SQLInsertCompiler(SQLCompiler):
 
 
 class SQLDeleteCompiler(SQLCompiler):
     @cached_property
     def single_alias(self):
-        return sum(self.query.alias_refcount[t] > 0 for t in self.query.alias_map) == 1
+        # Count aliases with positive refcount
+        used_aliases = sum(self.query.alias_refcount[t] > 0 for t in self.query.alias_map)
+        # If exactly one alias is used, use simple DELETE
+        if used_aliases == 1:
+            return True
+        # If no aliases are used, check if we can use simple DELETE
+        # This handles the case of Model.objects.all().delete()
+        if used_aliases == 0:
+            # If alias_map is empty, we'll have a single table after get_initial_alias()
+            # If alias_map has exactly one table, we can use simple DELETE
+            return len(self.query.alias_map) <= 1
+        return False
 
     def _as_sql(self, query):
+        # Ensure the alias_map is populated
+        query.get_initial_alias()
         result = [
             'DELETE FROM %s' % self.quote_name_unless_alias(query.base_table)
         ]
         where, params = self.compile(query.where)
         if where:
