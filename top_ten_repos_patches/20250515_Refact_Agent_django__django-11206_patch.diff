diff --git a/django/utils/numberformat.py b/django/utils/numberformat.py
index 88b35fc435..94a0fb7b49 100644
--- a/django/utils/numberformat.py
+++ b/django/utils/numberformat.py
@@ -30,6 +30,20 @@ def format(number, decimal_sep, decimal_pos=None, grouping=0, thousand_sep='',
         # Format values with more than 200 digits (an arbitrary cutoff) using
         # scientific notation to avoid high memory usage in {:f}'.format().
         _, digits, exponent = number.as_tuple()
+        # Handle sign early for consistent handling
+        if number < 0:
+            sign = '-'
+            number = abs(number)
+        
+        # Are we on the "huge/small number" fast-path?
+        if abs(exponent) + len(digits) > 200 and decimal_pos is not None:
+            # Is the value smaller than 10**-decimal_pos?
+            if number < 10 ** (-decimal_pos):
+                # Only round to zero if *all* digits after the first are zero â€“
+                # otherwise we would hide significant information.
+                if all(d == 0 for d in digits[1:]):
+                    return sign + '0' + decimal_sep + ('0' * decimal_pos)
+            
         if abs(exponent) + len(digits) > 200:
             number = '{:e}'.format(number)
             coefficient, exponent = number.split('e')
