--- a/sympy/printing/codeprinter.py
+++ b/sympy/printing/codeprinter.py
@@ -496,6 +496,22 @@
                 b_str[b.index(item.base)] = "(%s)" % b_str[b.index(item.base)]
 
         if not b:
+            # For Python code printers, check if we need to parenthesize when we have a negative sign
+            # to avoid precedence issues with operators like % (modulo)
+            if sign == "-" and len(a) >= 1:
+                from sympy.core.mod import Mod
+                # Check if any argument is a Mod operation that needs parenthesization
+                mod_indices = []
+                for i, arg in enumerate(a):
+                    if hasattr(arg, 'func') and arg.func is Mod:
+                        mod_indices.append(i)
+                
+                if mod_indices:
+                    # Parenthesize all Mod operations to avoid precedence issues
+                    a_str_protected = a_str[:]
+                    for i in mod_indices:
+                        a_str_protected[i] = "(" + a_str[i] + ")"
+                    return sign + '*'.join(a_str_protected)
             return sign + '*'.join(a_str)
         elif len(b) == 1:
             return sign + '*'.join(a_str) + "/" + b_str[0]
