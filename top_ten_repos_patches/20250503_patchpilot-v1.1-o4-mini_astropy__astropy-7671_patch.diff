diff --git a/astropy/utils/introspection.py b/astropy/utils/introspection.py
index c8df9c0..f849b8b 100644
--- a/astropy/utils/introspection.py
+++ b/astropy/utils/introspection.py
@@ -134,15 +134,36 @@ def minversion(module, version, inclusive=True, version_path='__version__'):
                          'module, or the import name of the module; '
                          'got {0!r}'.format(module))
 
+
     if '.' not in version_path:
         have_version = getattr(module, version_path)
     else:
         have_version = resolve_name(module.__name__, version_path)
 
+    # Select a robust, PEP 440‑aware version parser
+    try:
+        from pkg_resources import parse_version as parse_version
+    except ImportError:  # pragma: no cover
+        try:
+            from packaging.version import parse as parse_version
+        except ImportError:  # pragma: no cover
+            from distutils.version import LooseVersion as _lv
+            import re as _re
+
+            _pep440 = _re.compile(r'^([1-9]\d*!)?(0|[1-9]\d*)(\.(0|[1-9]\d*))*')
+
+            def _strip_non_numeric(v):
+                m = _pep440.match(v)
+                return m.group(0) if m else v
+
+            def parse_version(v):
+                return _lv(_strip_non_numeric(str(v)))
+
     if inclusive:
-        return LooseVersion(have_version) >= LooseVersion(version)
+        return parse_version(have_version) >= parse_version(version)
     else:
-        return LooseVersion(have_version) > LooseVersion(version)
+        return parse_version(have_version) > parse_version(version)
+
 
 
 def find_current_module(depth=1, finddiff=False):
@@ -382,4 +403,4 @@ def _isinstancemethod(cls, obj):
 
     # This shouldn't happen, though this is the most sensible response if
     # it does.
-    raise AttributeError(name)
+    raise AttributeError(name)
