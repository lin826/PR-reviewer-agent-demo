diff --git a/astropy/io/ascii/rst.py b/astropy/io/ascii/rst.py
index abdeba8efb..43d9207259 100644
--- a/astropy/io/ascii/rst.py
+++ b/astropy/io/ascii/rst.py
@@ -57,10 +57,27 @@ class RST(FixedWidth):
     data_class = SimpleRSTData
     header_class = SimpleRSTHeader
 
-    def __init__(self):
-        super().__init__(delimiter_pad=None, bookend=False)
+    def __init__(self, header_rows=None):
+        super().__init__(delimiter_pad=None, bookend=False, header_rows=header_rows)
 
     def write(self, lines):
         lines = super().write(lines)
-        lines = [lines[1]] + lines + [lines[1]]
-        return lines
+        
+        # Find the separator line (contains only = and spaces)
+        separator_line = None
+        separator_index = None
+        for i, line in enumerate(lines):
+            if line and set(line.strip()) <= {'=', ' '}:
+                separator_line = line
+                separator_index = i
+                break
+        
+        if separator_line is None:
+            # Fallback to old behavior if no separator found
+            if len(lines) > 1:
+                separator_line = lines[1]
+            else:
+                separator_line = ""
+        
+        # RST format: separator + header_rows + separator + data + separator
+        return [separator_line] + lines + [separator_line]
diff --git a/astropy/io/ascii/tests/test_rst.py b/astropy/io/ascii/tests/test_rst.py
index 84d6fed401..57bc36e133 100644
--- a/astropy/io/ascii/tests/test_rst.py
+++ b/astropy/io/ascii/tests/test_rst.py
@@ -185,3 +185,43 @@ Col1      Col2 Col3 Col4
 ==== ========= ==== ====
 """,
     )
+
+
+def test_write_header_rows():
+    """Test RST writer with header_rows parameter"""
+    from astropy.table import QTable
+    import astropy.units as u
+    
+    # Create a test table with units
+    tbl = QTable({'wave': [350, 950]*u.nm, 'response': [0.7, 1.2]*u.count})
+    
+    # Test default behavior
+    out = StringIO()
+    ascii.write(tbl, out, format="rst")
+    assert_equal_splitlines(
+        out.getvalue(),
+        """\
+===== ========
+ wave response
+===== ========
+350.0      0.7
+950.0      1.2
+===== ========
+""",
+    )
+    
+    # Test with header_rows=["name", "unit"]
+    out = StringIO()
+    ascii.write(tbl, out, format="rst", header_rows=["name", "unit"])
+    assert_equal_splitlines(
+        out.getvalue(),
+        """\
+===== ========
+ wave response
+   nm       ct
+===== ========
+350.0      0.7
+950.0      1.2
+===== ========
+""",
+    )
