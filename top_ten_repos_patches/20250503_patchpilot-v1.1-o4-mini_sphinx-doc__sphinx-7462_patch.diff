diff --git a/sphinx/domains/python.py b/sphinx/domains/python.py
index c9ffcef..b3570de 100644
--- a/sphinx/domains/python.py
+++ b/sphinx/domains/python.py
@@ -95,14 +95,21 @@ def _parse_annotation(annotation: str) -> List[Node]:
             return unparse(node.value)
         elif isinstance(node, ast.Index):
             return unparse(node.value)
+
         elif isinstance(node, ast.List):
+            # Handle empty list '[]' safely
+            if not node.elts:
+                return [addnodes.desc_sig_punctuation('', '['),
+                        addnodes.desc_sig_punctuation('', ']')]
             result = [addnodes.desc_sig_punctuation('', '[')]  # type: List[Node]
             for elem in node.elts:
                 result.extend(unparse(elem))
                 result.append(addnodes.desc_sig_punctuation('', ', '))
-            result.pop()
+            if result:
+                result.pop()
             result.append(addnodes.desc_sig_punctuation('', ']'))
             return result
+
         elif isinstance(node, ast.Module):
             return sum((unparse(e) for e in node.body), [])
         elif isinstance(node, ast.Name):
@@ -113,13 +120,20 @@ def _parse_annotation(annotation: str) -> List[Node]:
             result.extend(unparse(node.slice))
             result.append(addnodes.desc_sig_punctuation('', ']'))
             return result
+
         elif isinstance(node, ast.Tuple):
+            # Handle empty tuple '()' safely
+            if not node.elts:
+                return [addnodes.desc_sig_punctuation('', '('),
+                        addnodes.desc_sig_punctuation('', ')')]
             result = []
             for elem in node.elts:
                 result.extend(unparse(elem))
                 result.append(addnodes.desc_sig_punctuation('', ', '))
-            result.pop()
+            if result:
+                result.pop()
             return result
+
         else:
             raise SyntaxError  # unsupported syntax
 
