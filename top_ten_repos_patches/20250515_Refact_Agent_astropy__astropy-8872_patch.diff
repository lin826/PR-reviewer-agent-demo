diff --git a/astropy/units/quantity.py b/astropy/units/quantity.py
index ded609cbe9..f051d21ae5 100644
--- a/astropy/units/quantity.py
+++ b/astropy/units/quantity.py
@@ -376,11 +376,16 @@ class Quantity(np.ndarray, metaclass=InheritDocstrings):
             raise TypeError("The value must be a valid Python or "
                             "Numpy numeric type.")
 
-        # by default, cast any integer, boolean, etc., to float
-        if dtype is None and (not (np.can_cast(np.float32, value.dtype)
-                                   or value.dtype.fields)
-                              or value.dtype.kind == 'O'):
-            value = value.astype(float)
+        # By default, cast *non-floating* or *object* dtypes to float.
+        # Previous logic also converted float16, which is a real floating
+        # type. Here we keep promotion for integers & booleans only,
+        # while preserving any floating dtype (incl. float16, bfloat16, …).
+        if dtype is None:
+            # Structured dtypes (dtype.fields not None) are left untouched.
+            if value.dtype.fields is None:
+                if value.dtype.kind in "iub" or value.dtype.kind == "O":
+                    # integer (i, u), boolean (b) or object (O) → cast
+                    value = value.astype(float)
 
         value = value.view(cls)
         value._set_unit(value_unit)
