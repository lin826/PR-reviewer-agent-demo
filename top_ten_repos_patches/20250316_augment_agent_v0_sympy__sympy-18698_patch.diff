diff --git a/sympy/polys/polytools.py b/sympy/polys/polytools.py
index c9e77a901f..5d7d1d8a00 100644
--- a/sympy/polys/polytools.py
+++ b/sympy/polys/polytools.py
@@ -5875,21 +5875,42 @@ def sqf_part(f, *gens, **args):
 
 
 def _sorted_factors(factors, method):
     """Sort a list of ``(expr, exp)`` pairs. """
     if method == 'sqf':
+        # Group factors by their multiplicity
+        from collections import defaultdict
+        grouped_factors = defaultdict(list)
+        for poly, exp in factors:
+            grouped_factors[exp].append(poly)
+        
+        # Multiply factors in each group
+        combined_factors = []
+        for exp, polys in grouped_factors.items():
+            if len(polys) == 1:
+                combined_factors.append((polys[0], exp))
+            else:
+                # Multiply the polynomials in this group
+                product = polys[0]
+                for poly in polys[1:]:
+                    product = product * poly
+                combined_factors.append((product, exp))
+        
+        # Sort the combined factors by exponent
         def key(obj):
             poly, exp = obj
             rep = poly.rep.rep
             return (exp, len(rep), len(poly.gens), rep)
+        
+        return sorted(combined_factors, key=key)
     else:
         def key(obj):
             poly, exp = obj
             rep = poly.rep.rep
             return (len(rep), len(poly.gens), exp, rep)
 
-    return sorted(factors, key=key)
+        return sorted(factors, key=key)
 
 
 def _factors_product(factors):
     """Multiply a list of ``(expr, exp)`` pairs. """
     return Mul(*[f.as_expr()**k for f, k in factors])
