--- a/sympy/polys/polytools.py
+++ b/sympy/polys/polytools.py
@@ -106,6 +106,7 @@
 
     is_commutative = True
     is_Poly = True
+    _op_priority = 11.0
 
     def __new__(cls, rep, *gens, **args):
         """Create a new polynomial instance out of something useful. """
@@ -4053,7 +4054,13 @@
             try:
                 g = f.__class__(g, *f.gens)
             except PolynomialError:
-                return g*f.as_expr()
+                # Try to create a Poly from the multiplication result
+                result_expr = g*f.as_expr()
+                try:
+                    return f.__class__(result_expr, *f.gens)
+                except PolynomialError:
+                    # If that fails, fall back to the original behavior
+                    return result_expr
 
         return g.mul(f)
 
