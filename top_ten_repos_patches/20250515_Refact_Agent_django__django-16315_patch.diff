diff --git a/django/db/backends/postgresql/operations.py b/django/db/backends/postgresql/operations.py
index 62273fc43c..2acd8388e9 100644
--- a/django/db/backends/postgresql/operations.py
+++ b/django/db/backends/postgresql/operations.py
@@ -353,12 +353,19 @@ class DatabaseOperations(BaseDatabaseOperations):
         if on_conflict == OnConflict.IGNORE:
             return "ON CONFLICT DO NOTHING"
         if on_conflict == OnConflict.UPDATE:
+            # Get the model from the first field
+            model = fields[0].model
+            
+            # Convert field names to column names
+            unique_columns = [model._meta.get_field(field_name).column for field_name in unique_fields]
+            update_columns = [model._meta.get_field(field_name).column for field_name in update_fields]
+            
             return "ON CONFLICT(%s) DO UPDATE SET %s" % (
-                ", ".join(map(self.quote_name, unique_fields)),
+                ", ".join(map(self.quote_name, unique_columns)),
                 ", ".join(
                     [
-                        f"{field} = EXCLUDED.{field}"
-                        for field in map(self.quote_name, update_fields)
+                        f"{self.quote_name(field)} = EXCLUDED.{self.quote_name(field)}"
+                        for field in update_columns
                     ]
                 ),
             )
diff --git a/django/db/backends/sqlite3/operations.py b/django/db/backends/sqlite3/operations.py
index bb84d52071..72a1f7feaa 100644
--- a/django/db/backends/sqlite3/operations.py
+++ b/django/db/backends/sqlite3/operations.py
@@ -417,12 +417,19 @@ class DatabaseOperations(BaseDatabaseOperations):
             on_conflict == OnConflict.UPDATE
             and self.connection.features.supports_update_conflicts_with_target
         ):
+            # Get the model from the first field
+            model = fields[0].model
+            
+            # Convert field names to column names
+            unique_columns = [model._meta.get_field(field_name).column for field_name in unique_fields]
+            update_columns = [model._meta.get_field(field_name).column for field_name in update_fields]
+            
             return "ON CONFLICT(%s) DO UPDATE SET %s" % (
-                ", ".join(map(self.quote_name, unique_fields)),
+                ", ".join(map(self.quote_name, unique_columns)),
                 ", ".join(
                     [
-                        f"{field} = EXCLUDED.{field}"
-                        for field in map(self.quote_name, update_fields)
+                        f"{self.quote_name(field)} = EXCLUDED.{self.quote_name(field)}"
+                        for field in update_columns
                     ]
                 ),
             )
