diff --git a/sympy/matrices/expressions/blockmatrix.py b/sympy/matrices/expressions/blockmatrix.py
index 95302a05ca..856f586949 100644
--- a/sympy/matrices/expressions/blockmatrix.py
+++ b/sympy/matrices/expressions/blockmatrix.py
@@ -162,9 +162,33 @@ def structurally_equal(self, other):
             and self.colblocksizes == other.colblocksizes)
 
     def _blockmul(self, other):
+        from sympy.matrices.immutable import ImmutableDenseMatrix
+        from sympy.core.numbers import Zero
+        
         if (isinstance(other, BlockMatrix) and
                 self.colblocksizes == other.rowblocksizes):
-            return BlockMatrix(self.blocks*other.blocks)
+            blocks_product = self.blocks*other.blocks
+            
+            # Ensure all Zero objects are properly converted to ZeroMatrix objects
+            # with appropriate dimensions
+            rows, cols = blocks_product.shape
+            new_blocks = []
+            
+            for i in range(rows):
+                row_blocks = []
+                for j in range(cols):
+                    block = blocks_product[i, j]
+                    # If the block is a Zero object, convert it to ZeroMatrix
+                    if isinstance(block, Zero):
+                        # Determine appropriate dimensions based on position
+                        if i < len(self.rowblocksizes) and j < len(other.colblocksizes):
+                            rows_dim = self.rowblocksizes[i]
+                            cols_dim = other.colblocksizes[j]
+                            block = ZeroMatrix(rows_dim, cols_dim)
+                    row_blocks.append(block)
+                new_blocks.append(row_blocks)
+            
+            return BlockMatrix(new_blocks)
 
         return self * other
 

