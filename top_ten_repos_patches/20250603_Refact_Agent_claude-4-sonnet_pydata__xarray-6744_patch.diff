diff --git a/xarray/core/rolling.py b/xarray/core/rolling.py
index aef290f6..fc8ce42f 100644
--- a/xarray/core/rolling.py
+++ b/xarray/core/rolling.py
@@ -270,9 +270,26 @@ class DataArrayRolling(Rolling["DataArray"]):
     def __iter__(self) -> Iterator[tuple[RollingKey, DataArray]]:
         if self.ndim > 1:
             raise ValueError("__iter__ is only supported for 1d-rolling")
-        stops = np.arange(1, len(self.window_labels) + 1)
-        starts = stops - int(self.window[0])
-        starts[: int(self.window[0])] = 0
+        
+        if self.center[0]:
+            # For centered windows, use the same logic as the bottleneck method
+            # This mirrors the shift calculation in _bottleneck_reduce
+            window_size = int(self.window[0])
+            shift = (-window_size // 2) + 1
+            
+            # Calculate stops and starts with the shift applied
+            stops = np.arange(1, len(self.window_labels) + 1) - shift
+            starts = stops - window_size
+            
+            # Clip to valid array bounds  
+            starts = np.maximum(starts, 0)
+            stops = np.minimum(stops, len(self.window_labels))
+        else:
+            # Original non-centered logic
+            stops = np.arange(1, len(self.window_labels) + 1)
+            starts = stops - int(self.window[0])
+            starts[: int(self.window[0])] = 0
+            
         for (label, start, stop) in zip(self.window_labels, starts, stops):
             window = self.obj.isel({self.dim[0]: slice(start, stop)})
 
diff --git a/xarray/tests/test_rolling.py b/xarray/tests/test_rolling.py
index 2d6efff7..7e430af3 100644
--- a/xarray/tests/test_rolling.py
+++ b/xarray/tests/test_rolling.py
@@ -376,6 +376,36 @@ class TestDataArrayRolling:
         assert result.attrs == {}
         assert result.name == "name"
 
+    def test_rolling_center_iteration(self) -> None:
+        """Test that manual iteration over DataArrayRolling respects the center parameter.
+        
+        This is a regression test for the issue where the center kwarg was ignored
+        when manually iterating over DataArrayRolling objects.
+        """
+        # Test data
+        data = DataArray(np.arange(1, 10), dims="x")
+        
+        # Test center=True with odd window
+        rolling_center = data.rolling(x=3, center=True)
+        builtin_result = rolling_center.mean().values
+        manual_result = np.array([window.mean().values.item() for label, window in rolling_center])
+        
+        assert_array_equal(builtin_result, manual_result)
+        
+        # Test center=False (should work as before)
+        rolling_no_center = data.rolling(x=3, center=False)
+        builtin_result = rolling_no_center.mean().values
+        manual_result = np.array([window.mean().values.item() for label, window in rolling_no_center])
+        
+        assert_array_equal(builtin_result, manual_result)
+        
+        # Test center=True with even window
+        rolling_center_even = data.rolling(x=4, center=True)
+        builtin_result = rolling_center_even.mean().values
+        manual_result = np.array([window.mean().values.item() for label, window in rolling_center_even])
+        
+        assert_array_equal(builtin_result, manual_result)
+
 
 @requires_numbagg
 class TestDataArrayRollingExp:
