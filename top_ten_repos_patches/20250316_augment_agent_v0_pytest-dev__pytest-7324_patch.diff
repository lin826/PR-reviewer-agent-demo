diff --git a/src/_pytest/mark/expression.py b/src/_pytest/mark/expression.py
index 04c73411a..6a7be3692 100644
--- a/src/_pytest/mark/expression.py
+++ b/src/_pytest/mark/expression.py
@@ -159,11 +159,27 @@ def not_expr(s: Scanner) -> ast.expr:
         ret = expr(s)
         s.accept(TokenType.RPAREN, reject=True)
         return ret
     ident = s.accept(TokenType.IDENT)
     if ident:
-        return ast.Name(ident.value, ast.Load())
+        # Handle Python constants specially to avoid crashes in debug builds of Python 3.8+
+        if ident.value in ("None", "True", "False"):
+            if ident.value == "None":
+                value = None
+            elif ident.value == "True":
+                value = True
+            else:  # ident.value == "False"
+                value = False
+                
+            # Use ast.Constant for Python 3.8+ and ast.NameConstant for older versions
+            import sys
+            if sys.version_info >= (3, 8):
+                return ast.Constant(value=value)
+            else:
+                return ast.NameConstant(value=value)
+        else:
+            return ast.Name(ident.value, ast.Load())
     s.reject((TokenType.NOT, TokenType.LPAREN, TokenType.IDENT))
 
 
 class MatcherAdapter(Mapping[str, bool]):
     """Adapts a matcher function to a locals mapping as required by eval()."""
