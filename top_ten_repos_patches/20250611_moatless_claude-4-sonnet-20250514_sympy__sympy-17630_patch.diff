--- a/sympy/matrices/expressions/blockmatrix.py
+++ b/sympy/matrices/expressions/blockmatrix.py
@@ -164,7 +164,27 @@
     def _blockmul(self, other):
         if (isinstance(other, BlockMatrix) and
                 self.colblocksizes == other.rowblocksizes):
-            return BlockMatrix(self.blocks*other.blocks)
+            from sympy.core.numbers import Zero
+            from sympy.matrices.expressions.matexpr import ZeroMatrix
+            
+            # Perform the block multiplication
+            result_blocks = self.blocks * other.blocks
+            
+            # Convert any Zero scalars back to ZeroMatrix with proper dimensions
+            rows = []
+            for i in range(result_blocks.rows):
+                row = []
+                for j in range(result_blocks.cols):
+                    block = result_blocks[i, j]
+                    if isinstance(block, Zero):
+                        # Convert Zero to ZeroMatrix with appropriate dimensions
+                        row_size = self.rowblocksizes[i]
+                        col_size = other.colblocksizes[j]
+                        block = ZeroMatrix(row_size, col_size)
+                    row.append(block)
+                rows.append(row)
+            
+            return BlockMatrix(rows)
 
         return self * other
 
