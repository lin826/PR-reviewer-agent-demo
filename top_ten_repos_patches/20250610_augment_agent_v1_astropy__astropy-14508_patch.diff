diff --git a/astropy/io/fits/card.py b/astropy/io/fits/card.py
index 118bfced89..c64de17a1d 100644
--- a/astropy/io/fits/card.py
+++ b/astropy/io/fits/card.py
@@ -1297,10 +1297,31 @@ def _format_value(value):
         return ""
 
 
 def _format_float(value):
     """Format a floating number to make sure it gets the decimal point."""
+    # Try str(value) first - it's often shorter and more readable
+    str_value = str(value)
+    
+    # FITS standard requires uppercase 'E' for scientific notation
+    if 'e' in str_value:
+        str_value = str_value.replace('e', 'E')
+    
+    # Ensure it has a decimal point (FITS requirement)
+    if "." not in str_value and "E" not in str_value:
+        str_value += ".0"
+    
+    # Check if this shorter representation is suitable
+    if len(str_value) <= 20:
+        try:
+            if float(str_value) == value:
+                return str_value
+        except ValueError:
+            # Handle cases where str_value can't be converted back (shouldn't happen normally)
+            pass
+    
+    # Fall back to current logic
     value_str = f"{value:.16G}"
     if "." not in value_str and "E" not in value_str:
         value_str += ".0"
     elif "E" in value_str:
         # On some Windows builds of Python (and possibly other platforms?) the
