diff --git a/django/template/base.py b/django/template/base.py
index afbdc7391d..088c8d99f9 100644
--- a/django/template/base.py
+++ b/django/template/base.py
@@ -1118,4 +1118,4 @@ def token_kwargs(bits, parser, support_legacy=False):
             if bits[0] != "and":
                 return kwargs
             del bits[:1]
-    return kwargs
+    return kwargs
diff --git a/django/template/context.py b/django/template/context.py
index ccf0b430dc..537e8bc8f1 100644
--- a/django/template/context.py
+++ b/django/template/context.py
@@ -287,4 +287,4 @@ def make_context(context, request=None, **kwargs):
         context = RequestContext(request, **kwargs)
         if original_context:
             context.push(original_context)
-    return context
+    return context
diff --git a/django/template/defaultfilters.py b/django/template/defaultfilters.py
index 23c3a08c67..39cdaf6be1 100644
--- a/django/template/defaultfilters.py
+++ b/django/template/defaultfilters.py
@@ -10,8 +10,11 @@ from operator import itemgetter
 from pprint import pformat
 from urllib.parse import quote
 
+
+from django.core.exceptions import ImproperlyConfigured
 from django.utils import formats
 from django.utils.dateformat import format, time_format
+
 from django.utils.deprecation import RemovedInDjango51Warning
 from django.utils.encoding import iri_to_uri
 from django.utils.html import avoid_wrapping, conditional_escape, escape, escapejs
@@ -182,8 +185,10 @@ def floatformat(text, arg=-1):
     # Set the precision high enough to avoid an exception (#15789).
     tupl = d.as_tuple()
     units = len(tupl[1])
+
     units += -tupl[2] if m else tupl[2]
-    prec = abs(p) + units + 1
+    prec = max(1, abs(p) + units + 1)
+
 
     # Avoid conversion to scientific notation by accessing `sign`, `digits`,
     # and `exponent` from Decimal.as_tuple() directly.
@@ -196,14 +201,18 @@ def floatformat(text, arg=-1):
     if sign and rounded_d:
         digits.append("-")
     number = "".join(reversed(digits))
-    return mark_safe(
-        formats.number_format(
+
+    try:
+        formatted = formats.number_format(
             number,
             abs(p),
             use_l10n=use_l10n,
             force_grouping=force_grouping,
         )
-    )
+    except ImproperlyConfigured:
+        formatted = number.rstrip(".") if abs(p) == 0 else number
+    return mark_safe(formatted)
+
 
 
 @register.filter(is_safe=True)
@@ -975,4 +984,4 @@ def pprint(value):
     try:
         return pformat(value)
     except Exception as e:
-        return "Error in formatting: %s: %s" % (e.__class__.__name__, e)
+        return "Error in formatting: %s: %s" % (e.__class__.__name__, e)
diff --git a/django/utils/numberformat.py b/django/utils/numberformat.py
index 43c420d2fb..1a1aaa1395 100644
--- a/django/utils/numberformat.py
+++ b/django/utils/numberformat.py
@@ -103,4 +103,4 @@ def format(
             int_part_gd += digit
             cnt += 1
         int_part = int_part_gd[::-1]
-    return sign + int_part + dec_part
+    return sign + int_part + dec_part
