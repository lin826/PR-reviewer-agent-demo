diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py
index 938f976cd..e7fe0707b 100644
--- a/sphinx/ext/autodoc/__init__.py
+++ b/sphinx/ext/autodoc/__init__.py
@@ -2729,7 +2729,15 @@ class PropertyDocumenter(DocstringStripSignatureMixin, ClassLevelDocumenter):  #
                                               type_aliases=self.config.autodoc_type_aliases)
                 if signature.return_annotation is not Parameter.empty:
                     objrepr = stringify_typehint(signature.return_annotation)
-                    self.add_line('   :type: ' + objrepr, sourcename)
+                    # make dotted name a proper cross-reference, but handle basic types without quotes
+                    if objrepr in {'int', 'str', 'float', 'bool', 'bytes', 'dict', 'list', 'set',
+                                   'tuple', 'None', 'Any'}:
+                        self.add_line('   :type: ' + objrepr, sourcename)
+                    else:
+                        # forward references arrive quoted -> strip them
+                        if objrepr.startswith("'") and objrepr.endswith("'"):
+                            objrepr = objrepr[1:-1]
+                        self.add_line('   :type: ' + restify(objrepr), sourcename)
             except TypeError as exc:
                 logger.warning(__("Failed to get a function signature for %s: %s"),
                                self.fullname, exc)
