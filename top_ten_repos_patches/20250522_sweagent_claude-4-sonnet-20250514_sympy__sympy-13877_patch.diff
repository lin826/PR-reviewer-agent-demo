diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..776f7a78cf
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,33 @@
+#!/usr/bin/env python3
+
+from sympy import *
+from sympy.abc import a
+
+def test_determinant_issue():
+    """Reproduce the determinant issue with symbolic entries"""
+    print("Testing matrix determinant with symbolic entries...")
+    
+    f = lambda n: det(Matrix([[i + a*j for i in range(n)] for j in range(n)]))
+    
+    # Test cases that should work
+    print("f(1) =", f(1))
+    print("f(2) =", f(2))
+    print("f(3) =", f(3))
+    print("f(4) =", f(4))
+    
+    # Test case that returns nan
+    try:
+        result = f(5)
+        print("f(5) =", result)
+    except Exception as e:
+        print("f(5) failed with:", type(e).__name__, str(e))
+    
+    # Test case that raises the error
+    try:
+        result = f(6)
+        print("f(6) =", result)
+    except Exception as e:
+        print("f(6) failed with:", type(e).__name__, str(e))
+
+if __name__ == "__main__":
+    test_determinant_issue()
\ No newline at end of file
diff --git a/sympy/matrices/matrices.py b/sympy/matrices/matrices.py
index 97cde62e26..16d213fc41 100644
--- a/sympy/matrices/matrices.py
+++ b/sympy/matrices/matrices.py
@@ -213,7 +213,15 @@ def entry(i, j):
 
             return sign*bareiss(self._new(mat.rows - 1, mat.cols - 1, entry), pivot_val)
 
-        return cancel(bareiss(self))
+        try:
+            return cancel(bareiss(self))
+        except (TypeError, ValueError) as e:
+            # If Bareiss algorithm fails (e.g., due to NaN comparison issues),
+            # fall back to a more robust algorithm
+            if "Invalid NaN comparison" in str(e) or "NaN" in str(e):
+                return self._eval_det_berkowitz()
+            else:
+                raise
 
     def _eval_det_berkowitz(self):
         """ Use the Berkowitz algorithm to compute the determinant."""
diff --git a/test_algorithms.py b/test_algorithms.py
new file mode 100644
index 0000000000..40fe8f7252
--- /dev/null
+++ b/test_algorithms.py
@@ -0,0 +1,36 @@
+#!/usr/bin/env python3
+
+from sympy import *
+from sympy.abc import a
+
+def test_different_algorithms():
+    """Test different determinant algorithms"""
+    print("Testing different determinant algorithms...")
+    
+    # Create the problematic 6x6 matrix
+    mat = Matrix([[i + a*j for i in range(6)] for j in range(6)])
+    print("Matrix created successfully")
+    
+    # Test Berkowitz algorithm
+    try:
+        result_berkowitz = mat.det(method="berkowitz")
+        print("Berkowitz result:", result_berkowitz)
+    except Exception as e:
+        print("Berkowitz failed with:", type(e).__name__, str(e))
+    
+    # Test LU algorithm
+    try:
+        result_lu = mat.det(method="lu")
+        print("LU result:", result_lu)
+    except Exception as e:
+        print("LU failed with:", type(e).__name__, str(e))
+    
+    # Test Bareiss algorithm (should fail)
+    try:
+        result_bareiss = mat.det(method="bareiss")
+        print("Bareiss result:", result_bareiss)
+    except Exception as e:
+        print("Bareiss failed with:", type(e).__name__, str(e))
+
+if __name__ == "__main__":
+    test_different_algorithms()
\ No newline at end of file
