diff --git a/src/_pytest/unittest.py b/src/_pytest/unittest.py
index 773f545af..389a6ab0d 100644
--- a/src/_pytest/unittest.py
+++ b/src/_pytest/unittest.py
@@ -219,12 +219,21 @@ class TestCaseFunction(Function):
             # instance variables, which makes it difficult to debug
             # arguably we could always postpone tearDown(), but this changes the moment where the
             # TestCase instance interacts with the results object, so better to only do it
             # when absolutely needed
             if self.config.getoption("usepdb"):
-                self._explicit_tearDown = self._testcase.tearDown
-                setattr(self._testcase, "tearDown", lambda *args: None)
+                # Check if the test is skipped
+                test_method = getattr(self._testcase.__class__, self.name, None)
+                is_skipped = (
+                    (test_method and getattr(test_method, "__unittest_skip__", False)) or 
+                    getattr(self._testcase.__class__, "__unittest_skip__", False)
+                )
+                
+                # Only replace tearDown if the test is not skipped
+                if not is_skipped:
+                    self._explicit_tearDown = self._testcase.tearDown
+                    setattr(self._testcase, "tearDown", lambda *args: None)
 
             # we need to update the actual bound method with self.obj, because
             # wrap_pytest_function_for_tracing replaces self.obj by a wrapper
             setattr(self._testcase, self.name, self.obj)
             try:
