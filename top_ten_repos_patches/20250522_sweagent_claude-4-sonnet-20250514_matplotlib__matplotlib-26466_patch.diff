diff --git a/lib/matplotlib/offsetbox.py b/lib/matplotlib/offsetbox.py
index bb117c38ce..73453fe500 100644
--- a/lib/matplotlib/offsetbox.py
+++ b/lib/matplotlib/offsetbox.py
@@ -1306,7 +1306,19 @@ or callable, default: value of *xycoords*
         self.offsetbox = offsetbox
         self.arrowprops = arrowprops.copy() if arrowprops is not None else None
         self.set_fontsize(fontsize)
-        self.xybox = xybox if xybox is not None else xy
+        # Make a copy of xybox to avoid issues with mutable inputs
+        if xybox is not None:
+            if hasattr(xybox, 'copy'):
+                # For numpy arrays and other objects with copy method
+                self.xybox = xybox.copy()
+            elif isinstance(xybox, list):
+                # For lists
+                self.xybox = xybox.copy()
+            else:
+                # For tuples and other immutable types
+                self.xybox = xybox
+        else:
+            self.xybox = xy
         self.boxcoords = boxcoords if boxcoords is not None else xycoords
         self._box_alignment = box_alignment
 
diff --git a/lib/matplotlib/text.py b/lib/matplotlib/text.py
index d4922fc517..f8502cd2da 100644
--- a/lib/matplotlib/text.py
+++ b/lib/matplotlib/text.py
@@ -1456,7 +1456,16 @@ class _AnnotationBase:
                  xycoords='data',
                  annotation_clip=None):
 
-        self.xy = xy
+        # Make a copy of xy to avoid issues with mutable inputs
+        if hasattr(xy, 'copy'):
+            # For numpy arrays and other objects with copy method
+            self.xy = xy.copy()
+        elif isinstance(xy, list):
+            # For lists
+            self.xy = xy.copy()
+        else:
+            # For tuples and other immutable types
+            self.xy = xy
         self.xycoords = xycoords
         self.set_annotation_clip(annotation_clip)
 
