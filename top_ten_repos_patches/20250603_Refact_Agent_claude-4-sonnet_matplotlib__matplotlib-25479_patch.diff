diff --git a/lib/matplotlib/pyplot.py b/lib/matplotlib/pyplot.py
index 58ce4c03fa..67b1cdbb64 100644
--- a/lib/matplotlib/pyplot.py
+++ b/lib/matplotlib/pyplot.py
@@ -2278,9 +2278,13 @@ def set_cmap(cmap: Colormap | str) -> None:
     matplotlib.cm.register_cmap
     matplotlib.cm.get_cmap
     """
+    # Remember the original name if it was a string, to preserve registered names
+    original_name = cmap if isinstance(cmap, str) else None
     cmap = get_cmap(cmap)
 
-    rc('image', cmap=cmap.name)
+    # Use the original registered name if available, otherwise fall back to cmap.name
+    cmap_name = original_name if original_name is not None else cmap.name
+    rc('image', cmap=cmap_name)
     im = gci()
 
     if im is not None:
@@ -2537,17 +2541,21 @@ def annotate(
     text: str,
     xy: tuple[float, float],
     xytext: tuple[float, float] | None = None,
-    xycoords: str
-    | Artist
-    | Transform
-    | Callable[[RendererBase], Bbox | Transform]
-    | tuple[float, float] = "data",
-    textcoords: str
-    | Artist
-    | Transform
-    | Callable[[RendererBase], Bbox | Transform]
-    | tuple[float, float]
-    | None = None,
+    xycoords: (
+        str
+        | Artist
+        | Transform
+        | Callable[[RendererBase], Bbox | Transform]
+        | tuple[float, float]
+    ) = "data",
+    textcoords: (
+        str
+        | Artist
+        | Transform
+        | Callable[[RendererBase], Bbox | Transform]
+        | tuple[float, float]
+        | None
+    ) = None,
     arrowprops: dict[str, Any] | None = None,
     annotation_clip: bool | None = None,
     **kwargs,
@@ -2798,8 +2806,9 @@ def cohere(
     NFFT: int = 256,
     Fs: float = 2,
     Fc: int = 0,
-    detrend: Literal["none", "mean", "linear"]
-    | Callable[[ArrayLike], ArrayLike] = mlab.detrend_none,
+    detrend: (
+        Literal["none", "mean", "linear"] | Callable[[ArrayLike], ArrayLike]
+    ) = mlab.detrend_none,
     window: Callable[[ArrayLike], ArrayLike] | ArrayLike = mlab.window_hanning,
     noverlap: int = 0,
     pad_to: int | None = None,
@@ -2856,9 +2865,9 @@ def csd(
     NFFT: int | None = None,
     Fs: float | None = None,
     Fc: int | None = None,
-    detrend: Literal["none", "mean", "linear"]
-    | Callable[[ArrayLike], ArrayLike]
-    | None = None,
+    detrend: (
+        Literal["none", "mean", "linear"] | Callable[[ArrayLike], ArrayLike] | None
+    ) = None,
     window: Callable[[ArrayLike], ArrayLike] | ArrayLike | None = None,
     noverlap: int | None = None,
     pad_to: int | None = None,
@@ -3521,9 +3530,9 @@ def psd(
     NFFT: int | None = None,
     Fs: float | None = None,
     Fc: int | None = None,
-    detrend: Literal["none", "mean", "linear"]
-    | Callable[[ArrayLike], ArrayLike]
-    | None = None,
+    detrend: (
+        Literal["none", "mean", "linear"] | Callable[[ArrayLike], ArrayLike] | None
+    ) = None,
     window: Callable[[ArrayLike], ArrayLike] | ArrayLike | None = None,
     noverlap: int | None = None,
     pad_to: int | None = None,
@@ -3629,9 +3638,9 @@ def specgram(
     NFFT: int | None = None,
     Fs: float | None = None,
     Fc: int | None = None,
-    detrend: Literal["none", "mean", "linear"]
-    | Callable[[ArrayLike], ArrayLike]
-    | None = None,
+    detrend: (
+        Literal["none", "mean", "linear"] | Callable[[ArrayLike], ArrayLike] | None
+    ) = None,
     window: Callable[[ArrayLike], ArrayLike] | ArrayLike | None = None,
     noverlap: int | None = None,
     cmap: str | Colormap | None = None,
@@ -3938,10 +3947,9 @@ def violinplot(
     showmedians: bool = False,
     quantiles: Sequence[float] | None = None,
     points: int = 100,
-    bw_method: Literal["scott", "silverman"]
-    | float
-    | Callable[[GaussianKDE], float]
-    | None = None,
+    bw_method: (
+        Literal["scott", "silverman"] | float | Callable[[GaussianKDE], float] | None
+    ) = None,
     *,
     data=None,
 ) -> dict[str, Collection]:
