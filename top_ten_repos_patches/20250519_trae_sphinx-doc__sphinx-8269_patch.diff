diff --git a/sphinx/builders/linkcheck.py b/sphinx/builders/linkcheck.py
index 9b54afc7c..2e8af9490 100644
--- a/sphinx/builders/linkcheck.py
+++ b/sphinx/builders/linkcheck.py
@@ -162,27 +162,35 @@ class CheckExternalLinksBuilder(Builder):
             kwargs['headers'] = get_request_headers()
 
             try:
-                if anchor and self.app.config.linkcheck_anchors:
-                    # Read the whole document and see if #anchor exists
-                    response = requests.get(req_url, stream=True, config=self.app.config,
-                                            auth=auth_info, **kwargs)
-                    found = check_anchor(response, unquote(anchor))
-
-                    if not found:
-                        raise Exception(__("Anchor '%s' not found") % anchor)
-                else:
-                    try:
-                        # try a HEAD request first, which should be easier on
-                        # the server and the network
-                        response = requests.head(req_url, config=self.app.config,
-                                                 auth=auth_info, **kwargs)
-                        response.raise_for_status()
-                    except HTTPError:
-                        # retry with GET request if that fails, some servers
-                        # don't like HEAD requests.
+                try:
+                    # try a HEAD request first, which should be easier on
+                    # the server and the network
+                    response = requests.head(req_url, config=self.app.config,
+                                             auth=auth_info, **kwargs)
+                    response.raise_for_status()
+
+                    # If we have an anchor and need to check it, we'll need 
+                    # to get the full content
+                    if anchor and self.app.config.linkcheck_anchors:
                         response = requests.get(req_url, stream=True, config=self.app.config,
                                                 auth=auth_info, **kwargs)
                         response.raise_for_status()
+                        found = check_anchor(response, unquote(anchor))
+                        if not found:
+                            raise Exception(__("Anchor '%s' not found") % anchor)
+                except HTTPError:
+                    # retry with GET request if HEAD fails, some servers
+                    # don't like HEAD requests.
+                    response = requests.get(req_url, stream=True, config=self.app.config,
+                                            auth=auth_info, **kwargs)
+                    # First check if the response is valid before checking anchors
+                    response.raise_for_status()
+                    
+                    # Only check for anchor if the response was successful
+                    if anchor and self.app.config.linkcheck_anchors:
+                        found = check_anchor(response, unquote(anchor))
+                        if not found:
+                            raise Exception(__("Anchor '%s' not found") % anchor)
             except HTTPError as err:
                 if err.response.status_code == 401:
                     # We'll take "Unauthorized" as working.

