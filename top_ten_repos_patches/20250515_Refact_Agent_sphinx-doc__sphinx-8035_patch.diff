diff --git a/doc/usage/extensions/autodoc.rst b/doc/usage/extensions/autodoc.rst
index 150b62c4d..a9d57fd65 100644
--- a/doc/usage/extensions/autodoc.rst
+++ b/doc/usage/extensions/autodoc.rst
@@ -137,6 +137,15 @@ inserting them into the page source under a suitable :rst:dir:`py:module`,
 
    * "Private" members (that is, those named like ``_private`` or ``__private``)
      will be included if the ``private-members`` flag option is given.
+      
+      You can also give an explicit list of private members to document; only
+      those will then be included::
+      
+         .. autoclass:: MyClass
+            :private-members: _private_method1, _private_method2
+            
+      .. versionadded:: 5.0
+         Support for specifying private members by name.
 
      .. versionadded:: 1.1
 
@@ -447,6 +456,9 @@ There are also config values that you can set:
 
    .. versionchanged:: 2.1
       Added ``'imported-members'``.
+       
+    .. versionchanged:: 5.0
+       ``'private-members'`` can now take a comma-separated list of member names.
 
 .. confval:: autodoc_docstring_signature
 
diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py
index 8c3509c3b..6688d9a56 100644
--- a/sphinx/ext/autodoc/__init__.py
+++ b/sphinx/ext/autodoc/__init__.py
@@ -649,15 +649,22 @@ class Documenter:
             elif (namespace, membername) in attr_docs:
                 if want_all and isprivate:
                     # ignore members whose name starts with _ by default
-                    keep = self.options.private_members
+                    if isinstance(self.options.private_members, list):
+                        keep = membername in self.options.private_members
+                    else:
+                        keep = self.options.private_members
                 else:
                     # keep documented attributes
                     keep = True
                 isattr = True
             elif want_all and isprivate:
                 # ignore members whose name starts with _ by default
-                keep = self.options.private_members and \
-                    (has_doc or self.options.undoc_members)
+                if isinstance(self.options.private_members, list):
+                    keep = membername in self.options.private_members and \
+                        (has_doc or self.options.undoc_members)
+                else:
+                    keep = self.options.private_members and \
+                        (has_doc or self.options.undoc_members)
             else:
                 if self.options.members is ALL and is_filtered_inherited_member(membername):
                     keep = False
@@ -859,7 +866,7 @@ class ModuleDocumenter(Documenter):
         'show-inheritance': bool_option, 'synopsis': identity,
         'platform': identity, 'deprecated': bool_option,
         'member-order': member_order_option, 'exclude-members': members_set_option,
-        'private-members': bool_option, 'special-members': members_option,
+        'private-members': members_option, 'special-members': members_option,
         'imported-members': bool_option, 'ignore-module-all': bool_option
     }  # type: Dict[str, Callable]
 
@@ -1279,7 +1286,7 @@ class ClassDocumenter(DocstringSignatureMixin, ModuleLevelDocumenter):  # type:
         'noindex': bool_option, 'inherited-members': inherited_members_option,
         'show-inheritance': bool_option, 'member-order': member_order_option,
         'exclude-members': members_set_option,
-        'private-members': bool_option, 'special-members': members_option,
+        'private-members': members_option, 'special-members': members_option,
     }  # type: Dict[str, Callable]
 
     _signature_class = None  # type: Any
