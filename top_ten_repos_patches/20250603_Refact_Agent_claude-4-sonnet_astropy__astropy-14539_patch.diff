diff --git a/astropy/io/fits/diff.py b/astropy/io/fits/diff.py
index 100cdf1b8c..9b13f9a8f1 100644
--- a/astropy/io/fits/diff.py
+++ b/astropy/io/fits/diff.py
@@ -1449,12 +1449,12 @@ class TableDataDiff(_BaseDiff):
                 arrb.dtype, np.floating
             ):
                 diffs = where_not_allclose(arra, arrb, rtol=self.rtol, atol=self.atol)
-            elif "P" in col.format:
+            elif "P" in col.format or "Q" in col.format:
                 diffs = (
                     [
                         idx
                         for idx in range(len(arra))
-                        if not np.allclose(
+                        if not _compare_vla_elements(
                             arra[idx], arrb[idx], rtol=self.rtol, atol=self.atol
                         )
                     ],
@@ -1554,6 +1554,45 @@ class TableDataDiff(_BaseDiff):
         )
 
 
+def _compare_vla_elements(a, b, rtol=0.0, atol=0.0):
+    """
+    Compare two VLA (Variable Length Array) elements for equality.
+    
+    This function handles both numeric and string VLA elements properly,
+    using appropriate comparison methods for each data type.
+    
+    Parameters
+    ----------
+    a, b : array-like
+        VLA elements to compare
+    rtol, atol : float
+        Relative and absolute tolerance for numeric comparisons
+        
+    Returns
+    -------
+    bool
+        True if elements are equal, False otherwise
+    """
+    try:
+        # First check if arrays have the same shape
+        if np.asarray(a).shape != np.asarray(b).shape:
+            return False
+            
+        # For numeric data, use allclose with tolerance
+        if (np.issubdtype(np.asarray(a).dtype, np.number) and 
+            np.issubdtype(np.asarray(b).dtype, np.number)):
+            return np.allclose(a, b, rtol=rtol, atol=atol)
+        else:
+            # For string/object data, use element-wise equality
+            return np.array_equal(a, b)
+    except (TypeError, ValueError):
+        # Fallback to simple equality for edge cases
+        try:
+            return np.array_equal(a, b)
+        except:
+            return False
+
+
 def report_diff_keyword_attr(fileobj, attr, diffs, keyword, ind=0):
     """
     Write a diff between two header keyword values or comments to the specified
