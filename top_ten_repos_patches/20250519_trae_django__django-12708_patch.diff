diff --git a/django/db/backends/base/schema.py b/django/db/backends/base/schema.py
index 61f88401ab..a9dd2c266a 100644
--- a/django/db/backends/base/schema.py
+++ b/django/db/backends/base/schema.py
@@ -407,12 +407,30 @@ class BaseDatabaseSchemaEditor:
             model, columns, exclude=meta_constraint_names | meta_index_names,
             **constraint_kwargs
         )
+        
+        # If we're trying to delete an index (not a unique constraint) and we have multiple 
+        # constraints, filter out unique constraints
+        if len(constraint_names) > 1 and constraint_kwargs.get('index') and not constraint_kwargs.get('unique'):
+            # Get details about each constraint
+            with self.connection.cursor() as cursor:
+                constraints = self.connection.introspection.get_constraints(cursor, model._meta.db_table)
+                # Filter out constraints that are unique (likely from unique_together)
+                constraint_names = [
+                    name for name in constraint_names 
+                    if name in constraints and not constraints[name]['unique']
+                ]
+        
+        if not constraint_names:
+            # No matching constraints to delete
+            return
+        
         if len(constraint_names) != 1:
             raise ValueError("Found wrong number (%s) of constraints for %s(%s)" % (
                 len(constraint_names),
                 model._meta.db_table,
                 ", ".join(columns),
             ))
+        
         self.execute(self._delete_constraint_sql(sql, model, constraint_names[0]))
 
     def alter_db_table(self, model, old_db_table, new_db_table):

