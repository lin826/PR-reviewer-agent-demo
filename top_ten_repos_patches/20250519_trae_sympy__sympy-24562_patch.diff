diff --git a/sympy/core/numbers.py b/sympy/core/numbers.py
index 52f7ea45ad..e7ab7cbfae 100644
--- a/sympy/core/numbers.py
+++ b/sympy/core/numbers.py
@@ -1624,6 +1624,18 @@ def __new__(cls, p, q=None, gcd=None):
 
             q = 1
             gcd = 1
+            
+        # Handle the case where both p and q are strings representing decimal numbers
+        # This special case ensures that Rational('0.5', '100') == Rational(0.5, 100) == 1/200
+        # Without this, string numerator and denominator handling would produce incorrect results
+        elif isinstance(p, str) and isinstance(q, str):
+            try:
+                fp = fractions.Fraction(p)
+                fq = fractions.Fraction(q)
+                return Rational(fp.numerator * fq.denominator, fp.denominator * fq.numerator, gcd)
+            except ValueError:
+                # If conversion failed, fall through to standard processing
+                pass
 
         if not isinstance(p, SYMPY_INTS):
             p = Rational(p)

