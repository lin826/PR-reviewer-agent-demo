diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py
index 51811ca..a8c27b8 100644
--- a/sphinx/ext/autodoc/typehints.py
+++ b/sphinx/ext/autodoc/typehints.py
@@ -60,12 +60,33 @@ def merge_typehints(app: Sphinx, domain: str, objtype: str, contentnode: Element
             field_list = insert_field_list(contentnode)
             field_lists.append(field_list)
 
+
         for field_list in field_lists:
             if app.config.autodoc_typehints_description_target == "all":
                 modify_field_list(field_list, annotations[fullname])
             else:
                 augment_descriptions_with_types(field_list, annotations[fullname])
 
+            # Augment return descriptions with type information when available
+            if "return" in annotations[fullname]:
+                return_index = None
+                has_rtype = False
+                # Iterate over the children to locate "return(s)" and existing "rtype"
+                for idx, f in enumerate(field_list):
+                    if not isinstance(f, nodes.field):
+                        continue
+                    field_name_text = f[0].astext().strip().lower()
+                    if field_name_text in ("return", "returns"):
+                        return_index = idx
+                    elif field_name_text == "rtype":
+                        has_rtype = True
+                if return_index is not None and not has_rtype:
+                    rtype_field = nodes.field()
+                    rtype_field += nodes.field_name("", "rtype")
+                    rtype_field += nodes.field_body("", nodes.inline(text=annotations[fullname]["return"]))
+                    field_list.insert(return_index + 1, rtype_field)
+
+
 
 def insert_field_list(node: Element) -> nodes.field_list:
     field_list = nodes.field_list()
