diff --git a/django/utils/decorators.py b/django/utils/decorators.py
index 5c9a5d01c7..c1fb77b5a8 100644
--- a/django/utils/decorators.py
+++ b/django/utils/decorators.py
@@ -38,6 +38,12 @@ def _multi_decorate(decorators, method):
         # 'func'. Also, wrap method.__get__() in a function because new
         # attributes can't be set on bound method objects, only on functions.
         bound_method = partial(method.__get__(self, type(self)))
+        # functools.partial lacks the default function metadata expected by
+        # functools.update_wrapper / functools.wraps. Transplant those
+        # attributes from the original method so that any decorator which
+        # relies on them (most commonly via @functools.wraps) won't raise
+        # AttributeError when it receives this partial.
+        update_wrapper(bound_method, method)
         for dec in decorators:
             bound_method = dec(bound_method)
         return bound_method(*args, **kwargs)
