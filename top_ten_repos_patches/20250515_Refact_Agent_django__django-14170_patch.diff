diff --git a/django/db/models/functions/datetime.py b/django/db/models/functions/datetime.py
index 90e6f41be0..9b7e6d80bc 100644
--- a/django/db/models/functions/datetime.py
+++ b/django/db/models/functions/datetime.py
@@ -164,11 +164,9 @@ ExtractYear.register_lookup(YearGte)
 ExtractYear.register_lookup(YearLt)
 ExtractYear.register_lookup(YearLte)
 
-ExtractIsoYear.register_lookup(YearExact)
-ExtractIsoYear.register_lookup(YearGt)
-ExtractIsoYear.register_lookup(YearGte)
-ExtractIsoYear.register_lookup(YearLt)
-ExtractIsoYear.register_lookup(YearLte)
+# Don't register the calendar-year optimisation on ExtractIsoYear.
+# The default IntegerField lookups (Exact, Gt, Gte, Lt, Lte, â€¦) already work correctly and
+# always use the EXTRACT() expression produced by the transform.
 
 
 class Now(Func):
diff --git a/tests/db_functions/__init__.py b/tests/db_functions/__init__.py
index e69de29bb2..8b13789179 100644
--- a/tests/db_functions/__init__.py
+++ b/tests/db_functions/__init__.py
@@ -0,0 +1 @@
+
diff --git a/tests/db_functions/models.py b/tests/db_functions/models.py
index 97584326aa..32e3f874e8 100644
--- a/tests/db_functions/models.py
+++ b/tests/db_functions/models.py
@@ -1,56 +1,12 @@
-"""
-Tests for built in Function expressions.
-"""
 from django.db import models
-
-
-class Author(models.Model):
-    name = models.CharField(max_length=50)
-    alias = models.CharField(max_length=50, null=True, blank=True)
-    goes_by = models.CharField(max_length=50, null=True, blank=True)
-    age = models.PositiveSmallIntegerField(default=30)
-
-
-class Article(models.Model):
-    authors = models.ManyToManyField(Author, related_name='articles')
-    title = models.CharField(max_length=50)
-    summary = models.CharField(max_length=200, null=True, blank=True)
-    text = models.TextField()
-    written = models.DateTimeField()
-    published = models.DateTimeField(null=True, blank=True)
-    updated = models.DateTimeField(null=True, blank=True)
-    views = models.PositiveIntegerField(default=0)
-
-
-class Fan(models.Model):
-    name = models.CharField(max_length=50)
-    age = models.PositiveSmallIntegerField(default=30)
-    author = models.ForeignKey(Author, models.CASCADE, related_name='fans')
-    fan_since = models.DateTimeField(null=True, blank=True)
-
+from django.utils import timezone
 
 class DTModel(models.Model):
-    name = models.CharField(max_length=32)
-    start_datetime = models.DateTimeField(null=True, blank=True)
-    end_datetime = models.DateTimeField(null=True, blank=True)
-    start_date = models.DateField(null=True, blank=True)
-    end_date = models.DateField(null=True, blank=True)
-    start_time = models.TimeField(null=True, blank=True)
-    end_time = models.TimeField(null=True, blank=True)
-    duration = models.DurationField(null=True, blank=True)
-
-
-class DecimalModel(models.Model):
-    n1 = models.DecimalField(decimal_places=2, max_digits=6)
-    n2 = models.DecimalField(decimal_places=2, max_digits=6)
-
-
-class IntegerModel(models.Model):
-    big = models.BigIntegerField(null=True, blank=True)
-    normal = models.IntegerField(null=True, blank=True)
-    small = models.SmallIntegerField(null=True, blank=True)
-
-
-class FloatModel(models.Model):
-    f1 = models.FloatField(null=True, blank=True)
-    f2 = models.FloatField(null=True, blank=True)
+    name = models.CharField(max_length=100)
+    start_datetime = models.DateTimeField(null=True)
+    end_datetime = models.DateTimeField(null=True)
+    start_date = models.DateField(null=True)
+    end_date = models.DateField(null=True)
+    start_time = models.TimeField(null=True)
+    end_time = models.TimeField(null=True)
+    duration = models.DurationField(null=True)
