diff --git a/lib/matplotlib/axes/_axes.py b/lib/matplotlib/axes/_axes.py
index 2412f815cd..ad994eb860 100644
--- a/lib/matplotlib/axes/_axes.py
+++ b/lib/matplotlib/axes/_axes.py
@@ -6883,17 +6883,27 @@ such objects
                     edgecolor=None if fill else c,
                     fill=fill if fill else None,
                     zorder=None if fill else mlines.Line2D.zorder))
             for patch_list in patches:
                 for patch in patch_list:
-                    if orientation == 'vertical':
-                        patch.sticky_edges.y.append(0)
-                    elif orientation == 'horizontal':
-                        patch.sticky_edges.x.append(0)
+                    if not density:  # Only add sticky edge at 0 when density=False
+                        if orientation == 'vertical':
+                            patch.sticky_edges.y.append(0)
+                        elif orientation == 'horizontal':
+                            patch.sticky_edges.x.append(0)
 
             # we return patches, so put it back in the expected order
             patches.reverse()
+            
+            # For step histograms with density=True, explicitly update the data limits
+            # to include the maximum height of the histogram
+            if density:
+                max_height = tops.max()
+                if orientation == 'vertical':
+                    self.update_datalim([(bins[0], max_height), (bins[-1], max_height)])
+                else:  # orientation == 'horizontal'
+                    self.update_datalim([(max_height, bins[0]), (max_height, bins[-1])])
 
         # If None, make all labels None (via zip_longest below); otherwise,
         # cast each element to str, but keep a single str as it.
         labels = [] if label is None else np.atleast_1d(np.asarray(label, str))
         for patch, lbl in itertools.zip_longest(patches, labels):
