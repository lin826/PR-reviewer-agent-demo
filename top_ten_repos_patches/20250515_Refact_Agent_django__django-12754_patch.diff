diff --git a/django/db/migrations/autodetector.py b/django/db/migrations/autodetector.py
index 30616c0172..c3fed2973b 100644
--- a/django/db/migrations/autodetector.py
+++ b/django/db/migrations/autodetector.py
@@ -571,6 +571,30 @@ class MigrationAutodetector:
                     None,
                     True
                 ))
+            # --- NEW: avoid parent/child duplicate-field clash -----------------
+            # If this new model defines any field that still exists on one of its
+            # concrete ancestors in the *old* project state, it actually moves
+            # that field down the inheritance chain.  The descendant must not be
+            # rendered until the ancestor's RemoveField has been applied.
+            for base in model_state.bases:
+                if isinstance(base, str):
+                    if "." not in base:
+                        continue
+                    base_app_label, base_model_name = base.split(".", 1)
+                elif isinstance(base, models.base.ModelBase):
+                    base_app_label = base._meta.app_label
+                    base_model_name = base._meta.object_name
+                else:
+                    continue
+                if (base_app_label, base_model_name) not in self.from_state.models:
+                    continue
+                base_old_state = self.from_state.models[base_app_label, base_model_name]
+                for field_name in model_state.fields:
+                    if field_name in base_old_state.fields:
+                        dependencies.append(
+                            (base_app_label, base_model_name, field_name, False)
+                        )
+            # --------------------------------------------------------------------
             # Generate creation operation
             self.add_operation(
                 app_label,
