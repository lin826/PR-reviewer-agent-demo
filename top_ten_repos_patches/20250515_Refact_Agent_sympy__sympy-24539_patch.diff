diff --git a/sympy/polys/rings.py b/sympy/polys/rings.py
index 12bd2fc920..5a55f7cd96 100644
--- a/sympy/polys/rings.py
+++ b/sympy/polys/rings.py
@@ -616,10 +616,26 @@ def set_ring(self, new_ring):
             return new_ring.from_dict(self, self.ring.domain)
 
     def as_expr(self, *symbols):
-        if symbols and len(symbols) != self.ring.ngens:
-            raise ValueError("not enough symbols, expected %s got %s" % (self.ring.ngens, len(symbols)))
-        else:
+        """
+        Return ``self`` as a SymPy expression.
+
+        Parameters
+        ----------
+        *symbols
+            Optional new generators that should replace the ring generators in
+            the resulting expression.  If no symbols are given, the ring's own
+            symbols are used.  The number of supplied symbols must equal
+            ``self.ring.ngens``.
+        """
+        if not symbols:
+            # default: use the ring's generators
             symbols = self.ring.symbols
+        elif len(symbols) != self.ring.ngens:
+            raise ValueError(
+                "not enough symbols, expected %s got %s"
+                % (self.ring.ngens, len(symbols))
+            )
+        # else: the caller supplied the right amount â€“ keep them
 
         return expr_from_dict(self.as_expr_dict(), *symbols)
 
