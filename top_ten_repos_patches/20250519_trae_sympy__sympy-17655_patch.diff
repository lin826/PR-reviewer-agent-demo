diff --git a/sympy/geometry/entity.py b/sympy/geometry/entity.py
index ee5c910268..7e24bd20ee 100644
--- a/sympy/geometry/entity.py
+++ b/sympy/geometry/entity.py
@@ -139,7 +139,8 @@ def __repr__(self):
 
     def __rmul__(self, a):
         """Implementation of reverse multiplication method."""
-        return a.__mul__(self)
+        # When a * self is called, we want to return self * a
+        return self.__mul__(a)
 
     def __rsub__(self, a):
         """Implementation of reverse subtraction method."""
diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py
index 7c978c47be..b9e456ac04 100644
--- a/sympy/geometry/point.py
+++ b/sympy/geometry/point.py
@@ -213,6 +213,19 @@ def __add__(self, other):
         sympy.geometry.point.Point.translate
 
         """
+        from sympy.core.mul import Mul
+        
+        # Handle case where other is Mul(scalar, Point)
+        if isinstance(other, Mul):
+            args = other.args
+            for arg in args:
+                if isinstance(arg, Point):
+                    # Found a Point in the Mul expression
+                    # Extract the scalar part (remove the Point)
+                    scalar_part = Mul(*[a for a in args if a != arg])
+                    # Apply scaling to the Point and then add
+                    return self + arg * scalar_part
+
         try:
             s, o = Point._normalize_dimension(self, Point(other, evaluate=False))
         except TypeError:

