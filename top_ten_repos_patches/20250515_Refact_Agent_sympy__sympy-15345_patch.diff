diff --git a/sympy/printing/mathematica.py b/sympy/printing/mathematica.py
index ea7e3a2d94..dc08299685 100644
--- a/sympy/printing/mathematica.py
+++ b/sympy/printing/mathematica.py
@@ -116,6 +116,12 @@ def _print_Derivative(self, expr):
         dvars = [i[0] if i[1] == 1 else i for i in expr.variable_count]
         return "Hold[D[" + ', '.join(self.doprint(a) for a in [dexpr] + dvars) + "]]"
 
+    def _print_Max(self, expr):
+        return "Max[%s]" % ", ".join(self.doprint(a) for a in expr.args)
+
+    def _print_Min(self, expr):
+        return "Min[%s]" % ", ".join(self.doprint(a) for a in expr.args)
+
 
 def mathematica_code(expr, **settings):
     r"""Converts an expr to a string of the Wolfram Mathematica code
diff --git a/sympy/printing/tests/test_mathematica.py b/sympy/printing/tests/test_mathematica.py
index dd636d0623..68415e8e13 100644
--- a/sympy/printing/tests/test_mathematica.py
+++ b/sympy/printing/tests/test_mathematica.py
@@ -90,3 +90,9 @@ def test_Sum():
                      (y, -oo, oo))) == \
         "Hold[Sum[Exp[-x^2 - y^2], {x, -Infinity, Infinity}, " \
         "{y, -Infinity, Infinity}]]"
+
+
+def test_Max_Min():
+    from sympy import Max, Min
+    assert mcode(Max(x, 2)) == "Max[2, x]"
+    assert mcode(Min(x, 2)) == "Min[2, x]"
