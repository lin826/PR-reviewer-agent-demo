diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py
index 66f3396a6b..4122b39496 100644
--- a/django/contrib/admin/options.py
+++ b/django/contrib/admin/options.py
@@ -1029,18 +1029,26 @@ class ModelAdmin(BaseModelAdmin):
         may_have_duplicates = False
         search_fields = self.get_search_fields(request)
         if search_fields and search_term:
             orm_lookups = [construct_search(str(search_field))
                            for search_field in search_fields]
+            # Build a list of Q objects for each search term
+            search_queries = []
             for bit in smart_split(search_term):
                 if bit.startswith(('"', "'")) and bit[0] == bit[-1]:
                     bit = unescape_string_literal(bit)
                 or_queries = models.Q(
                     *((orm_lookup, bit) for orm_lookup in orm_lookups),
                     _connector=models.Q.OR,
                 )
-                queryset = queryset.filter(or_queries)
+                search_queries.append(or_queries)
+            
+            # Combine all search term queries with AND and apply in a single filter
+            if search_queries:
+                combined_query = models.Q(*search_queries, _connector=models.Q.AND)
+                queryset = queryset.filter(combined_query)
+            
             may_have_duplicates |= any(
                 lookup_spawns_duplicates(self.opts, search_spec)
                 for search_spec in orm_lookups
             )
         return queryset, may_have_duplicates
diff --git a/tests/admin_changelist/tests.py b/tests/admin_changelist/tests.py
index 92ea0dd718..04c66cf9e0 100644
--- a/tests/admin_changelist/tests.py
+++ b/tests/admin_changelist/tests.py
@@ -560,11 +560,18 @@ class ChangeListTests(TestCase):
         ):
             with self.subTest(search_string=search_string):
                 request = self.factory.get('/group/', data={SEARCH_VAR: search_string})
                 request.user = self.superuser
                 group_changelist = group_model_admin.get_changelist_instance(request)
-                self.assertEqual(group_changelist.queryset.count(), result_count)
+                actual_count = group_changelist.queryset.count()
+                if search_string == 'Mary Jonathan Duo':
+                    print(f"\nDEBUG: Search string: {search_string}")
+                    print(f"DEBUG: Expected count: {result_count}")
+                    print(f"DEBUG: Actual count: {actual_count}")
+                    print(f"DEBUG: SQL: {group_changelist.queryset.query}")
+                    print(f"DEBUG: Results: {list(group_changelist.queryset.values('name'))}")
+                self.assertEqual(actual_count, result_count)
 
     def test_pk_in_search_fields(self):
         band = Group.objects.create(name='The Hype')
         Concert.objects.create(name='Woodstock', group=band)
 
