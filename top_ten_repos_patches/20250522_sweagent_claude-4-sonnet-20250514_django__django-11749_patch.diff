diff --git a/django/core/management/__init__.py b/django/core/management/__init__.py
index 5f2e64761e..ac1b00a5e1 100644
--- a/django/core/management/__init__.py
+++ b/django/core/management/__init__.py
@@ -136,6 +136,32 @@ def call_command(command_name, *args, **options):
         '{}={}'.format(min(opt.option_strings), arg_options[opt.dest])
         for opt in parser_actions if opt.required and opt.dest in options
     ]
+    
+    # Handle required mutually exclusive groups
+    for group in parser._mutually_exclusive_groups:
+        if group.required:
+            # Check if any option from this group is provided in options
+            group_options_provided = [
+                opt for opt in group._group_actions 
+                if opt.dest in arg_options
+            ]
+            # Add the first provided option from the group to parse_args
+            if group_options_provided:
+                opt = group_options_provided[0]
+                parse_args.append('{}={}'.format(min(opt.option_strings), arg_options[opt.dest]))
+        
+        # Check for mutual exclusion conflicts in all groups (required or not)
+        group_options_provided = [
+            opt for opt in group._group_actions 
+            if opt.dest in arg_options
+        ]
+        if len(group_options_provided) > 1:
+            # Multiple options from the same mutually exclusive group provided
+            # Add all of them to parse_args to let argparse handle the error
+            for opt in group_options_provided:
+                arg_string = '{}={}'.format(min(opt.option_strings), arg_options[opt.dest])
+                if arg_string not in parse_args:
+                    parse_args.append(arg_string)
     defaults = parser.parse_args(args=parse_args)
     defaults = dict(defaults._get_kwargs(), **arg_options)
     # Raise an error if any unknown options were passed.
