diff --git a/django/contrib/admin/filters.py b/django/contrib/admin/filters.py
index 51b3fb2..ac319f5 100644
--- a/django/contrib/admin/filters.py
+++ b/django/contrib/admin/filters.py
@@ -194,10 +194,14 @@ class RelatedFieldListFilter(FieldListFilter):
         return [self.lookup_kwarg, self.lookup_kwarg_isnull]
 
     def field_choices(self, field, request, model_admin):
-        ordering = ()
-        related_admin = model_admin.admin_site._registry.get(field.remote_field.model)
+
+        related_model = field.remote_field.model
+        related_admin = model_admin.admin_site._registry.get(related_model)
         if related_admin is not None:
             ordering = related_admin.get_ordering(request)
+        else:
+            ordering = related_model._meta.ordering
+
         return field.get_choices(include_blank=False, ordering=ordering)
 
     def choices(self, changelist):
@@ -418,5 +422,12 @@ FieldListFilter.register(lambda f: True, AllValuesFieldListFilter)
 
 class RelatedOnlyFieldListFilter(RelatedFieldListFilter):
     def field_choices(self, field, request, model_admin):
+
         pk_qs = model_admin.get_queryset(request).distinct().values_list('%s__pk' % self.field_path, flat=True)
-        return field.get_choices(include_blank=False, limit_choices_to={'pk__in': pk_qs})
+        related_model = field.remote_field.model
+        related_admin = model_admin.admin_site._registry.get(related_model)
+        if related_admin is not None:
+            ordering = related_admin.get_ordering(request)
+        else:
+            ordering = related_model._meta.ordering
+        return field.get_choices(include_blank=False, limit_choices_to={'pk__in': pk_qs}, ordering=ordering)
