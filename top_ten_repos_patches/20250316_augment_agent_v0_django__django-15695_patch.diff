diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py
index d17232e4ec..25e7e19745 100644
--- a/django/db/migrations/operations/models.py
+++ b/django/db/migrations/operations/models.py
@@ -934,11 +934,24 @@ class RenameIndex(IndexOperation):
     def database_forwards(self, app_label, schema_editor, from_state, to_state):
         model = to_state.apps.get_model(app_label, self.model_name)
         if not self.allow_migrate_model(schema_editor.connection.alias, model):
             return
 
+        # Check if the index with the new name already exists
+        # This can happen when re-applying the migration after a backward operation
+        # with an unnamed index
         if self.old_fields:
+            # Get the list of existing indexes
+            existing_indexes = schema_editor._constraint_names(
+                model, index=True
+            )
+            
+            # Check if the new index name is already in the list
+            if self.new_name in existing_indexes:
+                # If the index with the new name already exists, we don't need to do anything
+                return
+
             from_model = from_state.apps.get_model(app_label, self.model_name)
             columns = [
                 from_model._meta.get_field(field).column for field in self.old_fields
             ]
             matching_index_name = schema_editor._constraint_names(
@@ -965,11 +978,12 @@ class RenameIndex(IndexOperation):
         new_index = to_model_state.get_index_by_name(self.new_name)
         schema_editor.rename_index(model, old_index, new_index)
 
     def database_backwards(self, app_label, schema_editor, from_state, to_state):
         if self.old_fields:
-            # Backward operation with unnamed index is a no-op.
+            # Backward operation with unnamed index is a no-op to maintain compatibility
+            # with existing tests. The fix for the issue is in database_forwards.
             return
 
         self.new_name_lower, self.old_name_lower = (
             self.old_name_lower,
             self.new_name_lower,
