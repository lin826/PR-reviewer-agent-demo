diff --git a/sympy/matrices/expressions/blockmatrix.py b/sympy/matrices/expressions/blockmatrix.py
index 95302a05ca..54b086c922 100644
--- a/sympy/matrices/expressions/blockmatrix.py
+++ b/sympy/matrices/expressions/blockmatrix.py
@@ -164,7 +164,27 @@ def structurally_equal(self, other):
     def _blockmul(self, other):
         if (isinstance(other, BlockMatrix) and
                 self.colblocksizes == other.rowblocksizes):
-            return BlockMatrix(self.blocks*other.blocks)
+            # Perform block multiplication while preserving block structure
+            result_blocks = self.blocks * other.blocks
+            
+            # Always check for Zero objects and convert them to ZeroMatrix
+            from sympy.core.numbers import Zero
+            
+            # Convert the result to a list of lists and fix Zero objects
+            rows = []
+            for i in range(result_blocks.rows):
+                row = []
+                for j in range(result_blocks.cols):
+                    element = result_blocks[i, j]
+                    if isinstance(element, Zero):
+                        # Use the original block dimensions to create ZeroMatrix
+                        row_height = self.rowblocksizes[i]
+                        col_width = other.colblocksizes[j]
+                        element = ZeroMatrix(row_height, col_width)
+                    row.append(element)
+                rows.append(row)
+            
+            return BlockMatrix(rows)
 
         return self * other
 
