diff --git a/django/db/models/fields/related.py b/django/db/models/fields/related.py
index 32085daf18..91ee102dd4 100644
--- a/django/db/models/fields/related.py
+++ b/django/db/models/fields/related.py
@@ -373,10 +373,24 @@ class RelatedField(FieldCacheMixin, Field):
                 field.remote_field.model = related
                 field.do_related_class(related, model)
 
+
             lazy_related_operation(
                 resolve_related_class, cls, self.remote_field.model, field=self
             )
 
+
+            # Lazily resolve the intermediary ("through") model if it is still
+            # a string reference at this point. This mirrors the resolution
+            # performed for the primary related model above.
+            if isinstance(getattr(self.remote_field, "through", None), str):
+
+                def resolve_through_class(model, related, field):
+                    field.remote_field.through = related
+                lazy_related_operation(
+                    resolve_through_class, cls, self.remote_field.through, field=self
+                )
+
+
     def deconstruct(self):
         name, path, args, kwargs = super().deconstruct()
         if self._limit_choices_to:
@@ -1990,4 +2004,4 @@ class ManyToManyField(RelatedField):
         return None
 
     def db_parameters(self, connection):
-        return {"type": None, "check": None}
+        return {"type": None, "check": None}
