diff --git a/lib/matplotlib/stackplot.py b/lib/matplotlib/stackplot.py
index c580043eeb..3ef83f1e0a 100644
--- a/lib/matplotlib/stackplot.py
+++ b/lib/matplotlib/stackplot.py
@@ -5,10 +5,11 @@ https://stackoverflow.com/q/2225995/
 
 (https://stackoverflow.com/users/66549/doug)
 """
 
 import numpy as np
+import itertools
 
 from matplotlib import _api
 
 __all__ = ['stackplot']
 
@@ -67,12 +68,16 @@ def stackplot(axes, x, *args,
     """
 
     y = np.row_stack(args)
 
     labels = iter(labels)
+    # Create a color cycle iterator
     if colors is not None:
-        axes.set_prop_cycle(color=colors)
+        color_cycle = itertools.cycle(colors)
+    else:
+        # Use the axes property cycle
+        color_cycle = None
 
     # Assume data passed has not been 'stacked', so stack it here.
     # We'll need a float buffer for the upcoming calculations.
     stack = np.cumsum(y, axis=0, dtype=np.promote_types(y.dtype, np.float32))
 
@@ -106,19 +111,19 @@ def stackplot(axes, x, *args,
         center = np.cumsum(center.sum(0))
         first_line = center - 0.5 * total
         stack += first_line
 
     # Color between x = 0 and the first array.
-    color = axes._get_lines.get_next_color()
+    color = next(color_cycle) if color_cycle is not None else axes._get_lines.get_next_color()
     coll = axes.fill_between(x, first_line, stack[0, :],
                              facecolor=color, label=next(labels, None),
                              **kwargs)
     coll.sticky_edges.y[:] = [0]
     r = [coll]
 
     # Color between array i-1 and array i
     for i in range(len(y) - 1):
-        color = axes._get_lines.get_next_color()
+        color = next(color_cycle) if color_cycle is not None else axes._get_lines.get_next_color()
         r.append(axes.fill_between(x, stack[i, :], stack[i + 1, :],
                                    facecolor=color, label=next(labels, None),
                                    **kwargs))
     return r
