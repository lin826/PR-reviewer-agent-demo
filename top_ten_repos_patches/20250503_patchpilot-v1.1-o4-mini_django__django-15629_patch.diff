diff --git a/django/db/backends/mysql/schema.py b/django/db/backends/mysql/schema.py
index a65d38d..b5ce2a5 100644
--- a/django/db/backends/mysql/schema.py
+++ b/django/db/backends/mysql/schema.py
@@ -165,10 +165,20 @@ class DatabaseSchemaEditor(BaseDatabaseSchemaEditor):
             new_type += " NOT NULL"
         return new_type
 
+
     def _alter_column_type_sql(self, model, old_field, new_field, new_type):
+        # Keep the NULL/NOT NULL status consistent with the old field.
         new_type = self._set_field_new_type_null_status(old_field, new_type)
+        # Determine the appropriate collation to apply.
+        collation = getattr(new_field, "db_collation", None)
+        if collation is None and getattr(new_field, "remote_field", None) is not None:
+            related_field = new_field.remote_field.get_related_field()
+            collation = getattr(related_field, "db_collation", None)
+        if collation is not None:
+            new_type += " " + self._collate_sql(collation)
         return super()._alter_column_type_sql(model, old_field, new_field, new_type)
 
+
     def _rename_field_sql(self, table, old_field, new_field, new_type):
         new_type = self._set_field_new_type_null_status(old_field, new_type)
         return super()._rename_field_sql(table, old_field, new_field, new_type)
