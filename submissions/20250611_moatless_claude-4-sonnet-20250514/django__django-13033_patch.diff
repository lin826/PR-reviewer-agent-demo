--- a/django/db/models/sql/compiler.py
+++ b/django/db/models/sql/compiler.py
@@ -727,7 +727,8 @@
         # If we get to this point and the field is a relation to another model,
         # append the default ordering for that model unless it is the pk
         # shortcut or the attribute name of the field that is specified.
-        if field.is_relation and opts.ordering and getattr(field, 'attname', None) != name and name != 'pk':
+        final_name = pieces[-1] if pieces else name
+        if field.is_relation and opts.ordering and getattr(field, 'attname', None) != final_name and final_name != 'pk':
             # Firstly, avoid infinite loops.
             already_seen = already_seen or set()
             join_tuple = tuple(getattr(self.query.alias_map[j], 'join_cols', None) for j in joins)

--- a/django/db/models/sql/query.py
+++ b/django/db/models/sql/query.py
@@ -1491,7 +1491,7 @@
                     path.extend(path_to_parent)
                     cur_names_with_path[1].extend(path_to_parent)
                     opts = path_to_parent[-1].to_opts
-            if hasattr(field, 'get_path_info'):
+            if hasattr(field, 'get_path_info') and getattr(field, 'attname', None) != name:
                 pathinfos = field.get_path_info(filtered_relation)
                 if not allow_many:
                     for inner_pos, p in enumerate(pathinfos):
@@ -1507,7 +1507,7 @@
                 cur_names_with_path[1].extend(pathinfos)
                 names_with_path.append(cur_names_with_path)
             else:
-                # Local non-relational field.
+                # Local non-relational field, or accessing a relation field by its attname.
                 final_field = field
                 targets = (field,)
                 if fail_on_missing and pos + 1 != len(names):
