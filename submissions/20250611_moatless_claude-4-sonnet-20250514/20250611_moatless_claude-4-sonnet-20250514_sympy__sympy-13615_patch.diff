--- a/sympy/sets/sets.py
+++ b/sympy/sets/sets.py
@@ -1002,6 +1002,31 @@
             nums = [m for m in other.args if m.is_number]
             if nums == []:
                 return None
+            
+            # Check which elements are NOT in this interval
+            not_in_interval = []
+            for element in other.args:
+                if element.is_number:
+                    # For numbers, we can definitively check containment
+                    if not self.contains(element):
+                        not_in_interval.append(element)
+                else:
+                    # For symbols/expressions, we cannot determine containment
+                    # so they stay in the result as a complement
+                    not_in_interval.append(element)
+            
+            if not_in_interval == []:
+                return S.EmptySet
+            else:
+                # Return the remaining elements as complement if there are symbols,
+                # or as a simple FiniteSet if all are numbers outside the interval
+                remaining_set = FiniteSet(*not_in_interval)
+                # Check if any of the remaining elements might be in the interval
+                has_undecidable = any(not el.is_number for el in not_in_interval)
+                if has_undecidable:
+                    return Complement(remaining_set, self, evaluate=False)
+                else:
+                    return remaining_set
 
         return Set._complement(self, other)
 
