--- a/django/db/migrations/autodetector.py
+++ b/django/db/migrations/autodetector.py
@@ -571,6 +571,20 @@
                     None,
                     True
                 ))
+            # Check if any fields in this model are being removed from parent models
+            # to avoid field clashes during migration. This ensures RemoveField operations
+            # on parent models happen before CreateModel operations on child models.
+            for field_name, field in model_state.fields.items():
+                if field_name not in related_fields:  # Skip related fields
+                    # Check if any parent model is removing this field
+                    for base in model_state.bases:
+                        if isinstance(base, str) and "." in base:
+                            base_app_label, base_name = base.split(".", 1)
+                            # Check if this field is being removed from the parent
+                            removed_field_key = (base_app_label, base_name.lower(), field_name)
+                            if removed_field_key in (self.old_field_keys - self.new_field_keys):
+                                # Add dependency on the removal of this field from parent
+                                dependencies.append((base_app_label, base_name.lower(), field_name, False))
             # Generate creation operation
             self.add_operation(
                 app_label,
