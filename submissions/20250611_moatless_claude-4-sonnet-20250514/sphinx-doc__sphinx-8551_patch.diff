--- a/sphinx/domains/python.py
+++ b/sphinx/domains/python.py
@@ -1255,22 +1255,23 @@
             else:
                 objtypes = self.objtypes_for_role(type)
             if objtypes is not None:
+                # Try specific combinations in hierarchical order
                 if modname and classname:
                     fullname = modname + '.' + classname + '.' + name
                     if fullname in self.objects and self.objects[fullname].objtype in objtypes:
                         newname = fullname
+                if not newname and modname:
+                    candidate = modname + '.' + name
+                    if candidate in self.objects and self.objects[candidate].objtype in objtypes:
+                        newname = candidate
                 if not newname:
-                    if modname and modname + '.' + name in self.objects and \
-                       self.objects[modname + '.' + name].objtype in objtypes:
-                        newname = modname + '.' + name
-                    elif name in self.objects and self.objects[name].objtype in objtypes:
+                    if name in self.objects and self.objects[name].objtype in objtypes:
                         newname = name
-                    else:
-                        # "fuzzy" searching mode
-                        searchname = '.' + name
-                        matches = [(oname, self.objects[oname]) for oname in self.objects
-                                   if oname.endswith(searchname) and
-                                   self.objects[oname].objtype in objtypes]
+                # If still not found, try hierarchical search instead of fuzzy search
+                if not newname and classname:
+                    candidate = classname + '.' + name
+                    if candidate in self.objects and self.objects[candidate].objtype in objtypes:
+                        newname = candidate
         else:
             # NOTE: searching for exact match, object type is not considered
             if name in self.objects:
