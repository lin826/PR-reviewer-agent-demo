--- a/django/db/models/query_utils.py
+++ b/django/db/models/query_utils.py
@@ -59,9 +59,13 @@
         return obj
 
     def __or__(self, other):
+        if not isinstance(other, Q) and getattr(other, 'conditional', False):
+            other = Q(other)
         return self._combine(other, self.OR)
 
     def __and__(self, other):
+        if not isinstance(other, Q) and getattr(other, 'conditional', False):
+            other = Q(other)
         return self._combine(other, self.AND)
 
     def __invert__(self):
@@ -87,7 +91,15 @@
         args, kwargs = (), {}
         if len(self.children) == 1 and not isinstance(self.children[0], Q):
             child = self.children[0]
-            kwargs = {child[0]: child[1]}
+            # Check if child is a field lookup tuple (field, value)
+            try:
+                if len(child) == 2:
+                    kwargs = {child[0]: child[1]}
+                else:
+                    args = tuple(self.children)
+            except (TypeError, AttributeError):
+                # Child is not subscriptable or doesn't have len(), treat as args
+                args = tuple(self.children)
         else:
             args = tuple(self.children)
             if self.connector != self.default:
