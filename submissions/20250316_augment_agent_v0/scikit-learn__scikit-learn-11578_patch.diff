diff --git a/sklearn/linear_model/logistic.py b/sklearn/linear_model/logistic.py
index e4ea696ce..56896769e 100644
--- a/sklearn/linear_model/logistic.py
+++ b/sklearn/linear_model/logistic.py
@@ -920,11 +920,22 @@ def _log_reg_scoring_path(X, y, train, test, pos_class=None, Cs=10,
         tol=tol, verbose=verbose, dual=dual, penalty=penalty,
         intercept_scaling=intercept_scaling, random_state=random_state,
         check_input=False, max_squared_sum=max_squared_sum,
         sample_weight=sample_weight)
 
-    log_reg = LogisticRegression(fit_intercept=fit_intercept)
+    log_reg = LogisticRegression(
+        fit_intercept=fit_intercept,
+        multi_class=multi_class,
+        solver=solver,
+        penalty=penalty,
+        dual=dual,
+        tol=tol,
+        max_iter=max_iter,
+        class_weight=class_weight,
+        random_state=random_state,
+        intercept_scaling=intercept_scaling
+    )
 
     # The score method of Logistic Regression has a classes_ attribute.
     if multi_class == 'ovr':
         log_reg.classes_ = np.array([-1, 1])
     elif multi_class == 'multinomial':
@@ -1162,11 +1173,11 @@ class LogisticRegression(BaseEstimator, LinearClassifierMixin,
         Machine Learning 85(1-2):41-75.
         http://www.csie.ntu.edu.tw/~cjlin/papers/maxent_dual.pdf
     """
 
     def __init__(self, penalty='l2', dual=False, tol=1e-4, C=1.0,
-                 fit_intercept=True, intercept_scaling=1, class_weight=None,
+                 fit_intercept=True, intercept_scaling=1.0, class_weight=None,
                  random_state=None, solver='liblinear', max_iter=100,
                  multi_class='ovr', verbose=0, warm_start=False, n_jobs=1):
 
         self.penalty = penalty
         self.dual = dual
