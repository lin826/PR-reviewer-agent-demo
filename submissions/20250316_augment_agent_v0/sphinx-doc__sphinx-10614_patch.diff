diff --git b/sphinx/ext/inheritance_diagram.py a/sphinx/ext/inheritance_diagram.py
index 4dc2cb730..6e3985512 100644
--- b/sphinx/ext/inheritance_diagram.py
+++ a/sphinx/ext/inheritance_diagram.py
@@ -408,38 +408,19 @@ def html_visit_inheritance_diagram(self: HTML5Translator, node: inheritance_diag
     # Create a mapping from fully-qualified class names to URLs.
     graphviz_output_format = self.builder.env.config.graphviz_output_format.upper()
     current_filename = self.builder.current_docname + self.builder.out_suffix
     urls = {}
     pending_xrefs = cast(Iterable[addnodes.pending_xref], node)
-    
-    # Determine the directory depth of the current document
-    # This is needed to adjust the URLs for SVG files
-    dir_depth = len(self.builder.current_docname.split('/')) - 1
-    
     for child in pending_xrefs:
         if child.get('refuri') is not None:
             if graphviz_output_format == 'SVG':
-                # For SVG, we need to adjust the URL based on the directory depth
-                # The SVG file is always in the _images directory at the root
-                # So we need to go up one level from _images, plus the depth of the current document
-                if dir_depth > 0:
-                    # We're in a subdirectory, so we need to adjust the URL
-                    urls[child['reftitle']] = child.get('refuri')
-                else:
-                    # We're in the root directory, so we need to prepend "../"
-                    urls[child['reftitle']] = "../" + child.get('refuri')
+                urls[child['reftitle']] = "../" + child.get('refuri')
             else:
                 urls[child['reftitle']] = child.get('refuri')
         elif child.get('refid') is not None:
             if graphviz_output_format == 'SVG':
-                # For SVG, we need to adjust the URL based on the directory depth
-                if dir_depth > 0:
-                    # We're in a subdirectory, so we need to adjust the URL
-                    urls[child['reftitle']] = current_filename + '#' + child.get('refid')
-                else:
-                    # We're in the root directory, so we need to prepend "../"
-                    urls[child['reftitle']] = '../' + current_filename + '#' + child.get('refid')
+                urls[child['reftitle']] = '../' + current_filename + '#' + child.get('refid')
             else:
                 urls[child['reftitle']] = '#' + child.get('refid')
 
     dotcode = graph.generate_dot(name, urls, env=self.builder.env)
     render_dot_html(self, node, dotcode, {}, 'inheritance', 'inheritance',
