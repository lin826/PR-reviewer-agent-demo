diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py
index 7c978c47be..9cd2e38fa6 100644
--- a/sympy/geometry/point.py
+++ b/sympy/geometry/point.py
@@ -211,10 +211,27 @@ def __add__(self, other):
         ========
 
         sympy.geometry.point.Point.translate
 
         """
+        from sympy.core.mul import Mul
+        if isinstance(other, Mul):
+            # Check if other is a Mul with a Point factor
+            point_arg = None
+            other_args = []
+            for arg in other.args:
+                if isinstance(arg, Point):
+                    point_arg = arg
+                else:
+                    other_args.append(arg)
+            
+            if point_arg is not None:
+                # Multiply the Point by the product of all other args
+                from sympy import prod
+                factor = prod(other_args)
+                return self + point_arg * factor
+        
         try:
             s, o = Point._normalize_dimension(self, Point(other, evaluate=False))
         except TypeError:
             raise GeometryError("Don't know how to add {} and a Point object".format(other))
 
@@ -281,10 +298,18 @@ def __mul__(self, factor):
     def __neg__(self):
         """Negate the point."""
         coords = [-x for x in self.args]
         return Point(coords, evaluate=False)
 
+    def __rmul__(self, factor):
+        """Multiply point's coordinates by a factor (from the left).
+
+        This method is called when a number or symbolic expression is
+        multiplied by a Point from the left, e.g., 2 * Point(1, 1).
+        """
+        return self.__mul__(factor)
+
     def __sub__(self, other):
         """Subtract two points, or subtract a factor from this point's
         coordinates."""
         return self + [-x for x in other]
 
