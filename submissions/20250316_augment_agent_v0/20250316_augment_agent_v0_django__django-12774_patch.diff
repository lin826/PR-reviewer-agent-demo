diff --git a/django/db/models/query.py b/django/db/models/query.py
index d9c9b0db04..ab3645615e 100644
--- a/django/db/models/query.py
+++ b/django/db/models/query.py
@@ -687,12 +687,24 @@ class QuerySet:
         Return a dictionary mapping each of the given IDs to the object with
         that ID. If `id_list` isn't provided, evaluate the entire QuerySet.
         """
         assert not self.query.is_sliced, \
             "Cannot use 'limit' or 'offset' with in_bulk"
-        if field_name != 'pk' and not self.model._meta.get_field(field_name).unique:
+        
+        # Check if the field is unique
+        is_unique = field_name == 'pk' or self.model._meta.get_field(field_name).unique
+        
+        # If not unique, check if it's the only field in a UniqueConstraint
+        if not is_unique:
+            for constraint in self.model._meta.total_unique_constraints:
+                if len(constraint.fields) == 1 and constraint.fields[0] == field_name:
+                    is_unique = True
+                    break
+        
+        if not is_unique:
             raise ValueError("in_bulk()'s field_name must be a unique field but %r isn't." % field_name)
+        
         if id_list is not None:
             if not id_list:
                 return {}
             filter_key = '{}__in'.format(field_name)
             batch_size = connections[self.db].features.max_query_params
