diff --git b/sphinx/directives/other.py a/sphinx/directives/other.py
index 47b58ed18..35e16e623 100644
--- b/sphinx/directives/other.py
+++ a/sphinx/directives/other.py
@@ -1,6 +1,5 @@
-import os
 import re
 from typing import TYPE_CHECKING, Any, Dict, List, cast
 
 from docutils import nodes
 from docutils.nodes import Element, Node
@@ -117,14 +116,10 @@ class TocTree(SphinxDirective):
                         break
                 # absolutize filenames
                 docname = docname_join(self.env.docname, docname)
                 if url_re.match(ref) or ref == 'self':
                     toctree['entries'].append((title, ref))
-                elif os.path.basename(docname) in ('genindex', 'modindex', 'search'):
-                    # Special pages that are generated by the HTML builder
-                    toctree['entries'].append((title, docname))
-                    # Don't add to includefiles as these are not actual source files
                 elif docname not in self.env.found_docs:
                     if excluded(self.env.doc2path(docname, False)):
                         message = __('toctree contains reference to excluded document %r')
                         subtype = 'excluded'
                     else:
diff --git b/sphinx/environment/adapters/toctree.py a/sphinx/environment/adapters/toctree.py
index 7eadefcb8..9678e3c7c 100644
--- b/sphinx/environment/adapters/toctree.py
+++ a/sphinx/environment/adapters/toctree.py
@@ -163,28 +163,18 @@ class TocTree:
                         logger.warning(__('toctree contains reference to document %r that '
                                           'doesn\'t have a title: no link will be generated'),
                                        ref, location=toctreenode)
                 except KeyError:
                     # this is raised if the included file does not exist
-                    if ref in ('genindex', 'modindex', 'search'):
-                        # Special pages that are generated by the HTML builder
-                        # Create a minimal toc for these pages
-                        reference = nodes.reference('', '', internal=True,
-                                                    refuri=ref, anchorname='',
-                                                    *[nodes.Text(title or ref)])
-                        para = addnodes.compact_paragraph('', '', reference)
-                        item = nodes.list_item('', para)
-                        toc = nodes.bullet_list('', item)
-                    elif excluded(self.env.doc2path(ref, False)):
+                    if excluded(self.env.doc2path(ref, False)):
                         message = __('toctree contains reference to excluded document %r')
-                        logger.warning(message, ref, location=toctreenode)
                     elif not included(self.env.doc2path(ref, False)):
                         message = __('toctree contains reference to non-included document %r')
-                        logger.warning(message, ref, location=toctreenode)
                     else:
                         message = __('toctree contains reference to nonexisting document %r')
-                        logger.warning(message, ref, location=toctreenode)
+
+                    logger.warning(message, ref, location=toctreenode)
                 else:
                     # if titles_only is given, only keep the main title and
                     # sub-toctrees
                     if titles_only:
                         # children of toc are:
