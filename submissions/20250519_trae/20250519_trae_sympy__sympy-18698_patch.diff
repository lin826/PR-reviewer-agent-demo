diff --git a/sympy/polys/polytools.py b/sympy/polys/polytools.py
index c9e77a901f..56e2f62897 100644
--- a/sympy/polys/polytools.py
+++ b/sympy/polys/polytools.py
@@ -5877,17 +5877,32 @@ def sqf_part(f, *gens, **args):
 def _sorted_factors(factors, method):
     """Sort a list of ``(expr, exp)`` pairs. """
     if method == 'sqf':
-        def key(obj):
-            poly, exp = obj
-            rep = poly.rep.rep
-            return (exp, len(rep), len(poly.gens), rep)
+        # Group factors by their multiplicity
+        from collections import defaultdict
+        grouped = defaultdict(list)
+        for poly, exp in factors:
+            grouped[exp].append(poly)
+        
+        # Combine factors with the same multiplicity
+        combined_factors = []
+        for exp, polys in sorted(grouped.items()):
+            # Multiply all polynomials with the same exponent
+            if len(polys) > 1:
+                product = polys[0]
+                for poly in polys[1:]:
+                    product = product * poly
+                combined_factors.append((product, exp))
+            else:
+                combined_factors.append((polys[0], exp))
+        
+        return combined_factors
     else:
         def key(obj):
             poly, exp = obj
             rep = poly.rep.rep
             return (len(rep), len(poly.gens), exp, rep)
 
-    return sorted(factors, key=key)
+        return sorted(factors, key=key)
 
 
 def _factors_product(factors):

