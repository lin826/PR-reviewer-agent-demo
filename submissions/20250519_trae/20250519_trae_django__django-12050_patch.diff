diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py
index ea51912e8b..9a942b1a34 100644
--- a/django/db/models/sql/query.py
+++ b/django/db/models/sql/query.py
@@ -1056,7 +1056,11 @@ class Query(BaseExpression):
             if isinstance(value, F):
                 kwargs['simple_col'] = simple_col
             value = value.resolve_expression(self, **kwargs)
-        elif isinstance(value, (list, tuple)):
+        elif isinstance(value, (list, tuple, set)) or (
+            hasattr(value, '__iter__') and 
+            not isinstance(value, (str, bytes, dict)) and
+            hasattr(value, '__class__')
+        ):
             # The items of the iterable may be expressions and therefore need
             # to be resolved independently.
             resolved_values = []
@@ -1073,7 +1077,11 @@ class Query(BaseExpression):
                         ))
                 else:
                     resolved_values.append(sub_value)
-            value = tuple(resolved_values)
+            # Preserve the original type of the iterable
+            if isinstance(value, list):
+                value = resolved_values  # Keep as list for performance
+            else:
+                value = type(value)(resolved_values)
         return value
 
     def solve_lookup_type(self, lookup):

