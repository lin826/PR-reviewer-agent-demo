diff --git a/django/core/management/__init__.py b/django/core/management/__init__.py
index 5f2e64761e..14ea24d3dc 100644
--- a/django/core/management/__init__.py
+++ b/django/core/management/__init__.py
@@ -130,12 +130,30 @@ def call_command(command_name, *args, **options):
                 yield opt
 
     parser_actions = list(get_actions(parser))
+    
     # Any required arguments which are passed in via **options must be passed
     # to parse_args().
     parse_args += [
         '{}={}'.format(min(opt.option_strings), arg_options[opt.dest])
         for opt in parser_actions if opt.required and opt.dest in options
     ]
+    
+    # Handle options that are part of required mutually exclusive groups.
+    # For options in a mutually exclusive group, none have their 'required' attribute 
+    # set to True individually, but if the group itself has required=True, then 
+    # at least one option from that group must be provided.
+    if hasattr(parser, '_mutually_exclusive_groups'):
+        for group in parser._mutually_exclusive_groups:
+            if group.required:
+                # Check if any option from this required group is in the provided options.
+                # If found, add the first matching option to parse_args.
+                for action in group._group_actions:
+                    if action.dest in arg_options:
+                        # Add this option to parse_args
+                        parse_args.append(
+                            '{}={}'.format(min(action.option_strings), arg_options[action.dest])
+                        )
+                        break
     defaults = parser.parse_args(args=parse_args)
     defaults = dict(defaults._get_kwargs(), **arg_options)
     # Raise an error if any unknown options were passed.

