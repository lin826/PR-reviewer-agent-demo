diff --git a/xarray/core/rolling.py b/xarray/core/rolling.py
index aef290f6..0e9d6e9d 100644
--- a/xarray/core/rolling.py
+++ b/xarray/core/rolling.py
@@ -270,15 +270,33 @@ class DataArrayRolling(Rolling["DataArray"]):
     def __iter__(self) -> Iterator[tuple[RollingKey, DataArray]]:
         if self.ndim > 1:
             raise ValueError("__iter__ is only supported for 1d-rolling")
-        stops = np.arange(1, len(self.window_labels) + 1)
-        starts = stops - int(self.window[0])
-        starts[: int(self.window[0])] = 0
+        
+        window_size = int(self.window[0])
+        data_size = len(self.window_labels)
+        
+        if self.center[0]:
+            # For centered windows
+            radius = window_size // 2
+            
+            # Calculate starts and stops with centering
+            starts = np.arange(data_size) - radius
+            stops = starts + window_size
+            
+            # Adjust the start/stop indices to avoid going out of bounds
+            starts = np.maximum(starts, 0)
+            stops = np.minimum(stops, data_size)
+        else:
+            # Original non-centered approach
+            stops = np.arange(1, data_size + 1)
+            starts = stops - window_size
+            starts[: window_size] = 0
+            
         for (label, start, stop) in zip(self.window_labels, starts, stops):
             window = self.obj.isel({self.dim[0]: slice(start, stop)})
-
+            
             counts = window.count(dim=self.dim[0])
             window = window.where(counts >= self.min_periods)
-
+            
             yield (label, window)
 
     def construct(

