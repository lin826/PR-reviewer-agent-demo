diff --git a/sympy/solvers/diophantine.py b/sympy/solvers/diophantine.py
index 6092e35dab..d6e08fef16 100644
--- a/sympy/solvers/diophantine.py
+++ b/sympy/solvers/diophantine.py
@@ -181,15 +181,21 @@ def diophantine(eq, param=symbols("t", integer=True), syms=None,
             syms = [i for i in syms if i in var]
             if syms != var:
                 dict_sym_index = dict(zip(syms, range(len(syms))))
+
                 return {tuple([t[dict_sym_index[i]] for i in var])
-                            for t in diophantine(eq, param)}
+                            for t in diophantine(eq, param, permute=permute)}
+
         n, d = eq.as_numer_denom()
         if n.is_number:
             return set()
+
         if not d.is_number:
-            dsol = diophantine(d)
-            good = diophantine(n) - dsol
+            dsol = diophantine(d, param, permute=permute)
+
+
+            good = diophantine(n, param, permute=permute) - dsol
             return {s for s in good if _mexpand(d.subs(zip(var, s)))}
+
         else:
             eq = n
         eq = factor_terms(eq)
@@ -3339,4 +3345,4 @@ def _can_do_sum_of_squares(n, k):
             return False
     # every number can be written as a sum of 4 squares; for k > 4 partitions
     # can be 0
-    return True
+    return True
