diff --git a/django/db/backends/base/schema.py b/django/db/backends/base/schema.py
index f2ca8c8df9..02c1bb45f3 100644
--- a/django/db/backends/base/schema.py
+++ b/django/db/backends/base/schema.py
@@ -527,9 +527,11 @@ class BaseDatabaseSchemaEditor:
         news = {tuple(fields) for fields in new_unique_together}
         # Deleted uniques
         for fields in olds.difference(news):
+
             self._delete_composed_index(
-                model, fields, {"unique": True}, self.sql_delete_unique
+                model, fields, {"unique": True, "primary_key": False}, self.sql_delete_unique
             )
+
         # Created uniques
         for field_names in news.difference(olds):
             fields = [model._meta.get_field(field) for field in field_names]
@@ -1721,4 +1723,4 @@ class BaseDatabaseSchemaEditor:
             "procedure": self.quote_name(procedure_name),
             "param_types": ",".join(param_types),
         }
-        self.execute(sql)
+        self.execute(sql)
diff --git a/django/db/backends/postgresql/introspection.py b/django/db/backends/postgresql/introspection.py
index 921501a4a3..15d7bc46f9 100644
--- a/django/db/backends/postgresql/introspection.py
+++ b/django/db/backends/postgresql/introspection.py
@@ -292,4 +292,4 @@ class DatabaseIntrospection(BaseDatabaseIntrospection):
                     "definition": definition,
                     "options": options,
                 }
-        return constraints
+        return constraints
diff --git a/django/db/backends/postgresql/schema.py b/django/db/backends/postgresql/schema.py
index a22ae0094f..fdd1271fa1 100644
--- a/django/db/backends/postgresql/schema.py
+++ b/django/db/backends/postgresql/schema.py
@@ -296,4 +296,4 @@ class DatabaseSchemaEditor(BaseDatabaseSchemaEditor):
             condition=condition,
             include=include,
             expressions=expressions,
-        )
+        )
diff --git a/django/db/backends/sqlite3/schema.py b/django/db/backends/sqlite3/schema.py
index 55fdf5fbfe..e57ad6e521 100644
--- a/django/db/backends/sqlite3/schema.py
+++ b/django/db/backends/sqlite3/schema.py
@@ -541,9 +541,17 @@ class DatabaseSchemaEditor(BaseDatabaseSchemaEditor):
             or constraint.deferrable
         ):
             super().add_constraint(model, constraint)
+
         else:
             self._remake_table(model)
 
+    def alter_unique_together(self, model, old_unique_together, new_unique_together):
+        """
+        Restore SQLite behavior to rebuild table for unique_together changes.
+        """
+        self._remake_table(model)
+
+
     def remove_constraint(self, model, constraint):
         if isinstance(constraint, UniqueConstraint) and (
             constraint.condition
@@ -552,8 +560,16 @@ class DatabaseSchemaEditor(BaseDatabaseSchemaEditor):
             or constraint.deferrable
         ):
             super().remove_constraint(model, constraint)
+
         else:
             self._remake_table(model)
 
+    def alter_unique_together(self, model, old_unique_together, new_unique_together):
+        """
+        Restore SQLite behavior to rebuild table for unique_together changes.
+        """
+        self._remake_table(model)
+
+
     def _collate_sql(self, collation):
         return "COLLATE " + collation
diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py
index 75a3b8b030..42e02c2dbc 100644
--- a/django/db/migrations/operations/models.py
+++ b/django/db/migrations/operations/models.py
@@ -1105,4 +1105,4 @@ class RemoveConstraint(IndexOperation):
 
     @property
     def migration_name_fragment(self):
-        return "remove_%s_%s" % (self.model_name_lower, self.name.lower())
+        return "remove_%s_%s" % (self.model_name_lower, self.name.lower())
