diff --git a/django/utils/functional.py b/django/utils/functional.py
index 158a274..f116007 100644
--- a/django/utils/functional.py
+++ b/django/utils/functional.py
@@ -340,10 +340,29 @@ class LazyObject:
     __getitem__ = new_method_proxy(operator.getitem)
     __setitem__ = new_method_proxy(operator.setitem)
     __delitem__ = new_method_proxy(operator.delitem)
+
     __iter__ = new_method_proxy(iter)
     __len__ = new_method_proxy(len)
     __contains__ = new_method_proxy(operator.contains)
 
+    # Database adaptation support
+    def __conform__(self, protocol):
+        """
+        Allow database adapters to adapt the wrapped object.
+
+        Force evaluation of the lazy object and then delegate to the wrapped
+        object's own __conform__() method if it defines one. Otherwise, return
+        the fully resolved wrapped object.
+        """
+        # Ensure the proxy is evaluated.
+        self._setup()
+        # Delegate to the wrapped object if possible.
+        if hasattr(self._wrapped, '__conform__'):
+            return self._wrapped.__conform__(protocol)
+        # Fallback to the resolved object itself.
+        return self._wrapped
+
+
 
 def unpickle_lazyobject(wrapped):
     """
