diff --git a/django/db/migrations/autodetector.py b/django/db/migrations/autodetector.py
index 12ebcde..08b4490 100644
--- a/django/db/migrations/autodetector.py
+++ b/django/db/migrations/autodetector.py
@@ -564,6 +564,7 @@ class MigrationAutodetector:
                     base_app_label, base_name = base.split(".", 1)
                     dependencies.append((base_app_label, base_name, None, True))
             # Depend on the other end of the primary key if it's a relation
+
             if primary_key_rel:
                 dependencies.append((
                     primary_key_rel._meta.app_label,
@@ -571,8 +572,27 @@ class MigrationAutodetector:
                     None,
                     True
                 ))
+
+            # Ensure any fields moved from base classes are removed before this
+            # subclass is created (see Django ticket #21890).
+            for base in model_state.bases:
+                if isinstance(base, str):
+                    if "." in base:
+                        base_app_label, base_model_name = base.split(".", 1)
+                    else:
+                        base_app_label, base_model_name = app_label, base
+                else:
+                    meta = getattr(base, "_meta", None)
+                    if meta is None:
+                        continue
+                    base_app_label, base_model_name = meta.app_label, meta.object_name
+                for field_name in model_state.fields:
+                    if (base_app_label, base_model_name, field_name) in (self.old_field_keys - self.new_field_keys):
+                        dependencies.append((base_app_label, base_model_name, field_name, False))
+
             # Generate creation operation
             self.add_operation(
+
                 app_label,
                 operations.CreateModel(
                     name=model_state.name,
