diff --git a/sympy/combinatorics/perm_groups.py b/sympy/combinatorics/perm_groups.py
index eb05c35..75b60ae 100644
--- a/sympy/combinatorics/perm_groups.py
+++ b/sympy/combinatorics/perm_groups.py
@@ -2193,20 +2193,27 @@ class PermutationGroup(Basic):
                 rep = {j for j in range(self.degree) if num_block[j] == 0}
                 # check if the system is minimal with
                 # respect to the already discovere ones
+
                 minimal = True
                 to_remove = []
+                to_remove_idx = []
                 for i, r in enumerate(rep_blocks):
                     if len(r) > len(rep) and rep.issubset(r):
                         # i-th block system is not minimal
-                        del num_blocks[i], blocks[i]
+                        to_remove_idx.append(i)
                         to_remove.append(rep_blocks[i])
                     elif len(r) < len(rep) and r.issubset(rep):
                         # the system being checked is not minimal
                         minimal = False
                         break
+                # defer deletions until after iteration to avoid index errors
+                for j in sorted(to_remove_idx, reverse=True):
+                    del num_blocks[j]
+                    del blocks[j]
                 # remove non-minimal representative blocks
                 rep_blocks = [r for r in rep_blocks if r not in to_remove]
 
+
                 if minimal and num_block not in num_blocks:
                     blocks.append(block)
                     num_blocks.append(num_block)
