diff --git a/django/db/backends/mysql/base.py b/django/db/backends/mysql/base.py
index 2cd6248cdb..7f93d07099 100644
--- a/django/db/backends/mysql/base.py
+++ b/django/db/backends/mysql/base.py
@@ -341,4 +341,4 @@ class DatabaseWrapper(BaseDatabaseWrapper):
     @cached_property
     def mysql_is_mariadb(self):
         # MariaDB isn't officially supported.
-        return 'mariadb' in self.mysql_server_info.lower()
+        return 'mariadb' in self.mysql_server_info.lower()
diff --git a/django/db/backends/mysql/client.py b/django/db/backends/mysql/client.py
index 224bfc3dc6..60b6ef1736 100644
--- a/django/db/backends/mysql/client.py
+++ b/django/db/backends/mysql/client.py
@@ -45,4 +45,4 @@ class DatabaseClient(BaseDatabaseClient):
 
     def runshell(self):
         args = DatabaseClient.settings_to_cmd_args(self.connection.settings_dict)
-        subprocess.check_call(args)
+        subprocess.check_call(args)
diff --git a/django/db/models/deletion.py b/django/db/models/deletion.py
index 3a462f1c4c..7dfc2f298e 100644
--- a/django/db/models/deletion.py
+++ b/django/db/models/deletion.py
@@ -232,9 +232,14 @@ class Collector:
         """
         Get a QuerySet of objects related to `objs` via the relation `related`.
         """
+
+
         return related.related_model._base_manager.using(self.using).filter(
             **{"%s__in" % related.field.name: objs}
-        )
+        ).only(related.related_model._meta.pk.name, related.field.attname)
+
+
+
 
     def instances_with_model(self):
         for model, instances in self.data.items():
diff --git a/django/db/models/query.py b/django/db/models/query.py
index 84236107f3..067de0d971 100644
--- a/django/db/models/query.py
+++ b/django/db/models/query.py
@@ -1883,4 +1883,4 @@ def get_related_populators(klass_info, select, db):
     for rel_klass_info in related_klass_infos:
         rel_cls = RelatedPopulator(rel_klass_info, select, db)
         iterators.append(rel_cls)
-    return iterators
+    return iterators
diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py
index f4b1faabc2..a94845fd54 100644
--- a/django/db/models/sql/compiler.py
+++ b/django/db/models/sql/compiler.py
@@ -1499,4 +1499,4 @@ def cursor_iter(cursor, sentinel, col_count, itersize):
         for rows in iter((lambda: cursor.fetchmany(itersize)), sentinel):
             yield rows if col_count is None else [r[:col_count] for r in rows]
     finally:
-        cursor.close()
+        cursor.close()
