diff --git a/src/_pytest/capture.py b/src/_pytest/capture.py
index 6b2d076..8a54cdc 100644
--- a/src/_pytest/capture.py
+++ b/src/_pytest/capture.py
@@ -442,11 +442,29 @@ class EncodedFile(object):
         data = "".join(linelist)
         self.write(data)
 
+
     @property
     def name(self):
         """Ensure that file.name is a string."""
         return repr(self.buffer)
 
+    @property
+    def mode(self):
+        """Expose a text-mode facade.
+
+        The wrapped buffer is usually opened in binary mode (e.g. 'rb+').
+        Some thirdâ€‘party code checks for a 'b' flag in ``stream.mode`` to
+        decide whether to send ``bytes`` or ``str``.  Since ``EncodedFile``
+        expects text and performs its own encoding, we present ourselves
+        as a text stream by stripping the 'b' flag.  If the underlying
+        buffer lacks a ``mode`` attribute, we fall back to an empty string.
+        """
+        mode = getattr(self.buffer, "mode", "")
+        if isinstance(mode, str):
+            return mode.replace("b", "")
+        return ""
+
+
     def __getattr__(self, name):
         return getattr(object.__getattribute__(self, "buffer"), name)
 
