diff --git a/sympy/core/symbol.py b/sympy/core/symbol.py
index 44674d1984..9a1c686d54 100644
--- a/sympy/core/symbol.py
+++ b/sympy/core/symbol.py
@@ -819,4 +819,4 @@ def disambiguate(*iter):
                 skip += 1
             ki = mapping[k][i]
             reps[ki] = Symbol(name, **ki.assumptions0)
-    return new_iter.xreplace(reps)
+    return new_iter.xreplace(reps)
diff --git a/sympy/printing/mathml.py b/sympy/printing/mathml.py
index 3f8b8d49e0..2b8b6c2afe 100644
--- a/sympy/printing/mathml.py
+++ b/sympy/printing/mathml.py
@@ -748,6 +748,7 @@ def _print_Symbol(self, sym, style='plain'):
         if style == 'bold':
             x.setAttribute('mathvariant', 'bold')
 
+
         def join(items):
             if len(items) > 1:
                 mrow = self.dom.createElement('mrow')
@@ -756,6 +757,7 @@ def join(items):
                         mo = self.dom.createElement('mo')
                         mo.appendChild(self.dom.createTextNode(" "))
                         mrow.appendChild(mo)
+
                     mi = self.dom.createElement('mi')
                     mi.appendChild(self.dom.createTextNode(item))
                     mrow.appendChild(mi)
@@ -773,10 +775,16 @@ def translate(s):
                 return s
 
         name, supers, subs = split_super_sub(sym.name)
+        # If no explicit '_' was present, trailing digits are part of the name,
+        # not a subscript.
+        if '_' not in sym.name and not supers and subs:
+            name += ''.join(subs)
+            subs = []
         name = translate(name)
         supers = [translate(sup) for sup in supers]
         subs = [translate(sub) for sub in subs]
 
+
         mname = self.dom.createElement('mi')
         mname.appendChild(self.dom.createTextNode(name))
         if len(supers) == 0:
@@ -966,4 +974,4 @@ def print_mathml(expr, printer='content', **settings):
     print(pretty_xml)
 
 #For backward compatibility
-MathMLPrinter = MathMLContentPrinter
+MathMLPrinter = MathMLContentPrinter
diff --git a/sympy/printing/printer.py b/sympy/printing/printer.py
index 2f1a183376..7333e2215a 100644
--- a/sympy/printing/printer.py
+++ b/sympy/printing/printer.py
@@ -297,4 +297,4 @@ def _as_ordered_terms(self, expr, order=None):
         if order == 'old':
             return sorted(Add.make_args(expr), key=cmp_to_key(Basic._compare_pretty))
         else:
-            return expr.as_ordered_terms(order=order)
+            return expr.as_ordered_terms(order=order)
