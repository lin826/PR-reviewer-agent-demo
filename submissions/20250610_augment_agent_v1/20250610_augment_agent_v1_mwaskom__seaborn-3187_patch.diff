diff --git a/seaborn/_core/scales.py b/seaborn/_core/scales.py
index 55874bf2..7d7a02b8 100644
--- a/seaborn/_core/scales.py
+++ b/seaborn/_core/scales.py
@@ -377,10 +377,39 @@ class ContinuousBase(Scale):
         if prop.legend:
             axis.set_view_interval(vmin, vmax)
             locs = axis.major.locator()
             locs = locs[(vmin <= locs) & (locs <= vmax)]
             labels = axis.major.formatter.format_ticks(locs)
+            
+            # Handle ScalarFormatter offset for large numbers
+            formatter = axis.major.formatter
+            if hasattr(formatter, 'get_offset') and formatter.get_offset():
+                offset = formatter.get_offset()
+                # Convert offset to float if it's a string
+                if isinstance(offset, str):
+                    offset_val = float(offset)
+                else:
+                    offset_val = offset
+                
+                # Convert labels back to original values by multiplying by offset
+                try:
+                    corrected_labels = []
+                    for label in labels:
+                        # Convert label to float, multiply by offset, and format nicely
+                        original_val = float(label) * offset_val
+                        # Use a reasonable number of significant digits
+                        if original_val >= 1e6:
+                            corrected_labels.append(f"{original_val:.3g}")
+                        elif original_val >= 1e3:
+                            corrected_labels.append(f"{original_val:.4g}")
+                        else:
+                            corrected_labels.append(f"{original_val:g}")
+                    labels = corrected_labels
+                except (ValueError, TypeError):
+                    # If conversion fails, keep original labels
+                    pass
+            
             new._legend = list(locs), list(labels)
 
         return new
 
     def _get_transform(self):
