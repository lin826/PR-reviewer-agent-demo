diff --git a/django/core/management/commands/inspectdb.py b/django/core/management/commands/inspectdb.py
index f9b4bfb477..3e52e962a6 100644
--- a/django/core/management/commands/inspectdb.py
+++ b/django/core/management/commands/inspectdb.py
@@ -122,10 +122,23 @@ class Command(BaseCommand):
                             rel_type = 'ForeignKey'
                         rel_to = (
                             "self" if relations[column_name][1] == table_name
                             else table2model(relations[column_name][1])
                         )
+                        
+                        # Check if the foreign key references a non-primary key field
+                        referenced_table = relations[column_name][1]
+                        referenced_column = relations[column_name][0]
+                        if referenced_table != table_name:  # Don't check self-references
+                            try:
+                                referenced_pk_column = connection.introspection.get_primary_key_column(cursor, referenced_table)
+                                if referenced_pk_column and referenced_column != referenced_pk_column:
+                                    extra_params['to_field'] = referenced_column
+                            except Exception:
+                                # If we can't determine the primary key, skip adding to_field
+                                pass
+                        
                         if rel_to in known_models:
                             field_type = '%s(%s' % (rel_type, rel_to)
                         else:
                             field_type = "%s('%s'" % (rel_type, rel_to)
                     else:
diff --git a/django/db/backends/sqlite3/introspection.py b/django/db/backends/sqlite3/introspection.py
index ce097dbd72..9d6aff1056 100644
--- a/django/db/backends/sqlite3/introspection.py
+++ b/django/db/backends/sqlite3/introspection.py
@@ -143,14 +143,17 @@ class DatabaseIntrospection(BaseDatabaseIntrospection):
             m = re.search(r'references (\S*) ?\(["|]?(.*)["|]?\)', field_desc, re.I)
             if not m:
                 continue
             table, column = [s.strip('"') for s in m.groups()]
 
-            if field_desc.startswith("FOREIGN KEY"):
+            if "FOREIGN KEY" in field_desc.upper():
                 # Find name of the target FK field
-                m = re.match(r'FOREIGN KEY\s*\(([^\)]*)\).*', field_desc, re.I)
-                field_name = m[1].strip('"')
+                m = re.search(r'FOREIGN KEY\s*\(([^\)]*)\)', field_desc, re.I)
+                if m:
+                    field_name = m[1].strip('"')
+                else:
+                    continue  # Skip if we can't parse the foreign key
             else:
                 field_name = field_desc.split()[0].strip('"')
 
             cursor.execute("SELECT sql FROM sqlite_master WHERE tbl_name = %s", [table])
             result = cursor.fetchall()[0]
