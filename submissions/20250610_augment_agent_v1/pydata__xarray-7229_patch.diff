diff --git a/xarray/core/computation.py b/xarray/core/computation.py
index 3f7e8f74..ea9d8927 100644
--- a/xarray/core/computation.py
+++ b/xarray/core/computation.py
@@ -1858,11 +1858,33 @@ def where(cond, x, y, keep_attrs=None):
     if keep_attrs is None:
         keep_attrs = _get_keep_attrs(default=False)
     if keep_attrs is True:
         # keep the attributes of x, the second parameter, by default to
         # be consistent with the `where` method of `DataArray` and `Dataset`
-        keep_attrs = lambda attrs, context: getattr(x, "attrs", {})
+        def _keep_attrs(attrs, context):
+            # Get the attributes from x (the second parameter)
+            x_attrs = getattr(x, "attrs", {})
+            
+            # If attrs is empty, return x_attrs
+            if not attrs:
+                return x_attrs
+            
+            # If x_attrs is in the attrs list, we're processing the main data variable
+            # In this case, return x_attrs to keep attributes from x
+            if x_attrs in attrs:
+                return x_attrs
+            
+            # If x_attrs is not empty and none of the attrs match x_attrs,
+            # we're likely processing a coordinate variable.
+            # In this case, preserve the first coordinate's attributes
+            if x_attrs and x_attrs not in attrs:
+                return attrs[0]
+            
+            # Fallback: return x_attrs (handles scalar case where x has no attrs)
+            return x_attrs
+        
+        keep_attrs = _keep_attrs
 
     # alignment for three arguments is complicated, so don't support it yet
     return apply_ufunc(
         duck_array_ops.where,
         cond,
