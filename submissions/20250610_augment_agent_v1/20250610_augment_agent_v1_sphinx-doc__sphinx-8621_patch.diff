diff --git b/sphinx/builders/html/transforms.py a/sphinx/builders/html/transforms.py
index ebfb0fcc8..c91da57e9 100644
--- b/sphinx/builders/html/transforms.py
+++ a/sphinx/builders/html/transforms.py
@@ -40,49 +40,25 @@ class KeyboardTransform(SphinxPostTransform):
     pattern = re.compile(r'(-|\+|\^|\s+)')
 
     def run(self, **kwargs: Any) -> None:
         matcher = NodeMatcher(nodes.literal, classes=["kbd"])
         for node in self.document.traverse(matcher):  # type: nodes.literal
-            text = node[-1].astext()
-            
-            # If the entire text is just a single separator character, don't transform
-            if text in ('-', '+', '^'):
-                continue
-                
-            parts = self.pattern.split(text)
+            parts = self.pattern.split(node[-1].astext())
             if len(parts) == 1:
                 continue
 
             node.pop()
-            
-            # Process parts more carefully to handle cases like "Shift-+"
-            # where + is a keystroke, not a separator
-            i = 0
-            while i < len(parts):
-                part = parts[i]
-                
-                if i % 2 == 0:  # Even indices should be keys
-                    if part:  # Non-empty key
-                        node += nodes.literal('', part, classes=["kbd"])
-                else:  # Odd indices are separators
-                    # Check if the next part (key position) is empty
-                    # and the part after that is a separator character
-                    if (i + 2 < len(parts) and 
-                        parts[i + 1] == '' and 
-                        parts[i + 2] in ('-', '+', '^')):
-                        # The current separator is actually a real separator
-                        # and the next "separator" is actually a keystroke
-                        node += nodes.Text(part)  # Add the real separator
-                        i += 1  # Skip the empty key
-                        keystroke = parts[i + 1]  # The "separator" that's actually a keystroke
-                        node += nodes.literal('', keystroke, classes=["kbd"])
-                        i += 1  # Skip the keystroke we just processed
-                    else:
-                        # Normal separator
-                        node += nodes.Text(part)
-                
-                i += 1
+            while parts:
+                key = parts.pop(0)
+                node += nodes.literal('', key, classes=["kbd"])
+
+                try:
+                    # key separator (ex. -, +, ^)
+                    sep = parts.pop(0)
+                    node += nodes.Text(sep)
+                except IndexError:
+                    pass
 
 
 def setup(app: Sphinx) -> Dict[str, Any]:
     app.add_post_transform(KeyboardTransform)
 
