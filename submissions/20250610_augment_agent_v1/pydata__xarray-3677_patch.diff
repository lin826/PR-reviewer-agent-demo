diff --git a/xarray/core/merge.py b/xarray/core/merge.py
index 10c7804d..a0bfe6ab 100644
--- a/xarray/core/merge.py
+++ b/xarray/core/merge.py
@@ -803,14 +803,20 @@ def dataset_merge_method(
     join: str,
     fill_value: Any,
 ) -> _MergeResult:
     """Guts of the Dataset.merge method.
     """
+    from .dataarray import DataArray
+    
     # we are locked into supporting overwrite_vars for the Dataset.merge
     # method due for backwards compatibility
     # TODO: consider deprecating it?
 
+    # Convert DataArray to Dataset, similar to top-level merge function
+    if isinstance(other, DataArray):
+        other = other.to_dataset()
+
     if isinstance(overwrite_vars, Iterable) and not isinstance(overwrite_vars, str):
         overwrite_vars = set(overwrite_vars)
     else:
         overwrite_vars = {overwrite_vars}
 
diff --git a/xarray/tests/test_merge.py b/xarray/tests/test_merge.py
index c1e6c7a5..cfebe8ae 100644
--- a/xarray/tests/test_merge.py
+++ b/xarray/tests/test_merge.py
@@ -251,5 +251,35 @@ class TestMergeMethod:
             ds1.merge(ds3, compat="no_conflicts")
 
         with pytest.raises(xr.MergeError):
             ds3 = xr.Dataset({"a": ("y", [2, 3]), "y": [1, 2]})
             ds1.merge(ds3, compat="no_conflicts")
+
+    def test_merge_dataarray(self):
+        # Test merging DataArray into Dataset using dataset method
+        # This addresses the issue where ds.merge(da) failed with AttributeError
+        ds = xr.Dataset({'a': 0})
+        da = xr.DataArray(1, name='b')
+        
+        # This should work (same as top-level merge)
+        expected = xr.merge([ds, da])
+        actual = ds.merge(da)
+        assert expected.identical(actual)
+        
+        # Test with coordinates
+        ds_coords = xr.Dataset({'a': ('x', [1, 2, 3])}, coords={'x': [0, 1, 2]})
+        da_coords = xr.DataArray([4, 5, 6], dims=['x'], coords={'x': [0, 1, 2]}, name='b')
+        expected_coords = xr.merge([ds_coords, da_coords])
+        actual_coords = ds_coords.merge(da_coords)
+        assert expected_coords.identical(actual_coords)
+        
+        # Test with overwrite_vars
+        ds_overwrite = xr.Dataset({'a': 0, 'b': 10})
+        da_overwrite = xr.DataArray(1, name='b')
+        expected_overwrite = xr.Dataset({'a': 0, 'b': 1})
+        actual_overwrite = ds_overwrite.merge(da_overwrite, overwrite_vars=['b'])
+        assert expected_overwrite.identical(actual_overwrite)
+        
+        # Test that unnamed DataArray still fails appropriately
+        da_unnamed = xr.DataArray(1)
+        with pytest.raises(ValueError, match="unable to convert unnamed DataArray"):
+            ds.merge(da_unnamed)
