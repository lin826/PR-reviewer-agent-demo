diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py
index d913658291..6e00371736 100644
--- a/django/db/models/expressions.py
+++ b/django/db/models/expressions.py
@@ -471,10 +471,32 @@ class CombinedExpression(SQLiteNumericMixin, Expression):
         # order of precedence
         expression_wrapper = '(%s)'
         sql = connection.ops.combine_expression(self.connector, expressions)
         return expression_wrapper % sql, expression_params
 
+    def _resolve_output_field(self):
+        """
+        Resolve the output field for combined expressions.
+        Handle temporal subtraction specially to return DurationField.
+        """
+        # Check for temporal subtraction case
+        try:
+            lhs_type = self.lhs.output_field.get_internal_type()
+        except (FieldError, AttributeError):
+            lhs_type = None
+        try:
+            rhs_type = self.rhs.output_field.get_internal_type()
+        except (FieldError, AttributeError):
+            rhs_type = None
+        
+        datetime_fields = {'DateField', 'DateTimeField', 'TimeField'}
+        if self.connector == self.SUB and lhs_type in datetime_fields and lhs_type == rhs_type:
+            return fields.DurationField()
+        
+        # Fall back to default behavior
+        return super()._resolve_output_field()
+
     def resolve_expression(self, query=None, allow_joins=True, reuse=None, summarize=False, for_save=False):
         c = self.copy()
         c.is_summary = summarize
         c.lhs = c.lhs.resolve_expression(query, allow_joins, reuse, summarize, for_save)
         c.rhs = c.rhs.resolve_expression(query, allow_joins, reuse, summarize, for_save)
