diff --git a/requests/sessions.py b/requests/sessions.py
index 3f59cab9..e3af76ba 100644
--- a/requests/sessions.py
+++ b/requests/sessions.py
@@ -283,20 +283,28 @@ class SessionRedirectMixin(object):
         """
         headers = prepared_request.headers
         scheme = urlparse(prepared_request.url).scheme
         new_proxies = resolve_proxies(prepared_request, proxies, self.trust_env)
 
-        if 'Proxy-Authorization' in headers:
-            del headers['Proxy-Authorization']
+        # Store the existing proxy authorization header before potentially removing it
+        existing_proxy_auth = headers.get('Proxy-Authorization')
 
         try:
             username, password = get_auth_from_url(new_proxies[scheme])
         except KeyError:
             username, password = None, None
 
+        # Only update the Proxy-Authorization header if we have valid auth info
         if username and password:
             headers['Proxy-Authorization'] = _basic_auth_str(username, password)
+        elif existing_proxy_auth and scheme in new_proxies:
+            # If we have an existing proxy auth header and we're still using a proxy,
+            # preserve the existing header
+            headers['Proxy-Authorization'] = existing_proxy_auth
+        elif 'Proxy-Authorization' in headers and scheme not in new_proxies:
+            # Only remove the proxy auth header if we're no longer using a proxy
+            del headers['Proxy-Authorization']
 
         return new_proxies
 
     def rebuild_method(self, prepared_request, response):
         """When being redirected we may want to change the method of the request
diff --git a/requests/utils.py b/requests/utils.py
index 1c2ae4e0..02cd59e4 100644
--- a/requests/utils.py
+++ b/requests/utils.py
@@ -989,11 +989,13 @@ def get_auth_from_url(url):
     :rtype: (str,str)
     """
     parsed = urlparse(url)
 
     try:
-        auth = (unquote(parsed.username), unquote(parsed.password))
+        username = unquote(parsed.username) if parsed.username is not None else ''
+        password = unquote(parsed.password) if parsed.password is not None else ''
+        auth = (username, password)
     except (AttributeError, TypeError):
         auth = ('', '')
 
     return auth
 
