diff --git a/django/db/models/query.py b/django/db/models/query.py
index b48d0df9c0..08f05ee6be 100644
--- a/django/db/models/query.py
+++ b/django/db/models/query.py
@@ -209,10 +209,19 @@ class QuerySet:
         return self._query
 
     @query.setter
     def query(self, value):
         self._query = value
+        # If the query has values_select, we need to use ValuesIterable
+        # and set the appropriate _fields. This handles the case where
+        # a pickled query with values() or values_list() is assigned to a fresh QuerySet.
+        # Note: We always use ValuesIterable (returning dicts) rather than trying to
+        # distinguish between values(), values_list(), values_list(flat=True), etc.
+        # since the Query object doesn't store enough information to make that distinction.
+        if hasattr(value, 'values_select') and value.values_select:
+            self._iterable_class = ValuesIterable
+            self._fields = value.values_select
 
     def as_manager(cls):
         # Address the circular dependency between `Queryset` and `Manager`.
         from django.db.models.manager import Manager
         manager = Manager.from_queryset(cls)()
