diff --git b/sphinx/ext/napoleon/__init__.py a/sphinx/ext/napoleon/__init__.py
index 71f518058..10b1ff3a3 100644
--- b/sphinx/ext/napoleon/__init__.py
+++ a/sphinx/ext/napoleon/__init__.py
@@ -428,29 +428,21 @@ def _skip_member(app: Sphinx, what: str, name: str, obj: Any,
         if what == 'class' or what == 'exception':
             qualname = getattr(obj, '__qualname__', '')
             cls_path, _, _ = qualname.rpartition('.')
             if cls_path:
                 try:
-                    # First try to get the class from obj.__globals__
-                    cls = obj.__globals__[cls_path]
-                except (KeyError, TypeError):
-                    # If that fails, try importing the module and getting the class
-                    try:
+                    if '.' in cls_path:
                         import importlib
                         import functools
 
                         mod = importlib.import_module(obj.__module__)
-                        if '.' in cls_path:
-                            mod_path = cls_path.split('.')
-                            cls = functools.reduce(getattr, mod_path, mod)
-                        else:
-                            cls = getattr(mod, cls_path)
-                    except Exception:
-                        cls_is_owner = False
+                        mod_path = cls_path.split('.')
+                        cls = functools.reduce(getattr, mod_path, mod)
                     else:
-                        cls_is_owner = (cls and hasattr(cls, name) and  # type: ignore
-                                        name in cls.__dict__)
+                        cls = obj.__globals__[cls_path]
+                except Exception:
+                    cls_is_owner = False
                 else:
                     cls_is_owner = (cls and hasattr(cls, name) and  # type: ignore
                                     name in cls.__dict__)
             else:
                 cls_is_owner = False
