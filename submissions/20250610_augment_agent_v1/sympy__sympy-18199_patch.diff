diff --git a/sympy/ntheory/residue_ntheory.py b/sympy/ntheory/residue_ntheory.py
index 9a3052d4c3..0da5f979dd 100644
--- a/sympy/ntheory/residue_ntheory.py
+++ b/sympy/ntheory/residue_ntheory.py
@@ -768,15 +768,23 @@ def nthroot_mod(a, n, p, all_roots=False):
     """
     from sympy.core.numbers import igcdex
     a, n, p = as_int(a), as_int(n), as_int(p)
     if n == 2:
         return sqrt_mod(a, p, all_roots)
+    
     # see Hackman "Elementary Number Theory" (2009), page 76
     if not is_nthpow_residue(a, n, p):
         return None
     if not isprime(p):
         raise NotImplementedError("Not implemented for composite p")
+    
+    # Special case: when a ≡ 0 (mod p), the only solution is x ≡ 0 (mod p)
+    if a % p == 0:
+        if all_roots:
+            return [0]
+        else:
+            return 0
 
     if (p - 1) % n == 0:
         return _nthroot_mod1(a, n, p, all_roots)
     # The roots of ``x**n - a = 0 (mod p)`` are roots of
     # ``gcd(x**n - a, x**(p - 1) - 1) = 0 (mod p)``
