diff --git a/doc/faq.rst b/doc/faq.rst
index c817855f8..d4ab18b3c 100644
--- a/doc/faq.rst
+++ b/doc/faq.rst
@@ -91,14 +91,16 @@ or if "directory" is in the python path.
 Analysis data are stored as a pickle file in a directory which is
 localized using the following rules:
 
 * value of the PYLINTHOME environment variable if set
 
-* ".pylint.d" subdirectory of the user's home directory if it is found
-	(not always findable on Windows platforms)
+* XDG_DATA_HOME/pylint if XDG_DATA_HOME environment variable is set
 
-* ".pylint.d" directory in the current directory
+* "~/.local/share/pylint" subdirectory following XDG Base Directory Specification
+
+* ".pylint.d" directory in the current directory (fallback when home directory
+  cannot be determined)
 
 3.3 How do I find the option name (for pylintrc) corresponding to a specific command line option?
 --------------------------------------------------------------------------------------------------------
 
 You can always generate a sample pylintrc file with --generate-rcfile
diff --git a/pylint/config/__init__.py b/pylint/config/__init__.py
index 84774d0e3..3cf99d5a2 100644
--- a/pylint/config/__init__.py
+++ b/pylint/config/__init__.py
@@ -61,11 +61,16 @@ if "PYLINTHOME" in os.environ:
     if USER_HOME == "~":
         USER_HOME = os.path.dirname(PYLINT_HOME)
 elif USER_HOME == "~":
     PYLINT_HOME = ".pylint.d"
 else:
-    PYLINT_HOME = os.path.join(USER_HOME, ".pylint.d")
+    # XDG Base Directory Specification compliance
+    xdg_data_home = os.environ.get("XDG_DATA_HOME")
+    if xdg_data_home:
+        PYLINT_HOME = os.path.join(xdg_data_home, "pylint")
+    else:
+        PYLINT_HOME = os.path.join(USER_HOME, ".local", "share", "pylint")
 
 
 def _get_pdata_path(base_name, recurs):
     base_name = base_name.replace(os.sep, "_")
     return os.path.join(PYLINT_HOME, f"{base_name}{recurs}.stats")
@@ -81,11 +86,11 @@ def load_results(base):
 
 
 def save_results(results, base):
     if not os.path.exists(PYLINT_HOME):
         try:
-            os.mkdir(PYLINT_HOME)
+            os.makedirs(PYLINT_HOME, exist_ok=True)
         except OSError:
             print("Unable to create directory %s" % PYLINT_HOME, file=sys.stderr)
     data_file = _get_pdata_path(base, 1)
     try:
         with open(data_file, "wb") as stream:
@@ -108,12 +113,15 @@ PYLINTRC = find_pylintrc()
 ENV_HELP = (
     """
 The following environment variables are used:
     * PYLINTHOME
     Path to the directory where persistent data for the run will be stored. If
-not found, it defaults to ~/.pylint.d/ or .pylint.d (in the current working
-directory).
+not found, it defaults to XDG_DATA_HOME/pylint or ~/.local/share/pylint (following
+XDG Base Directory Specification), or .pylint.d (in the current working directory).
+    * XDG_DATA_HOME
+    Path to the base directory for user-specific data files (XDG Base Directory
+Specification). If not set, defaults to ~/.local/share.
     * PYLINTRC
     Path to the configuration file. See the documentation for the method used
 to search for configuration file.
 """
     % globals()  # type: ignore
