diff --git a/src/_pytest/setuponly.py b/src/_pytest/setuponly.py
index c9cc589ff..32bf6cc0b 100644
--- a/src/_pytest/setuponly.py
+++ b/src/_pytest/setuponly.py
@@ -1,4 +1,5 @@
 import pytest
+from _pytest._io.saferepr import saferepr
 
 
 def pytest_addoption(parser):
@@ -66,7 +67,13 @@ def _show_fixture_action(fixturedef, msg):
             tw.write(" (fixtures used: {})".format(", ".join(deps)))
 
     if hasattr(fixturedef, "cached_param"):
-        tw.write("[{}]".format(fixturedef.cached_param))
+        if isinstance(fixturedef.cached_param, bytes):
+            # Use saferepr for bytes to avoid BytesWarning
+            param_str = saferepr(fixturedef.cached_param)
+        else:
+            # For other types, use the original formatting to maintain compatibility
+            param_str = fixturedef.cached_param
+        tw.write("[{}]".format(param_str))
 
     tw.flush()
 
diff --git a/testing/test_setuponly.py b/testing/test_setuponly.py
index e26a33dee..fda139d13 100644
--- a/testing/test_setuponly.py
+++ b/testing/test_setuponly.py
@@ -291,4 +291,23 @@ def test_setup_show_with_KeyboardInterrupt_in_test(testdir):
             "*= no tests ran in *",
         ]
     )
-    assert result.ret == ExitCode.INTERRUPTED
+
+
+def test_setup_show_with_bytes_parameter(testdir):
+    """Test that bytes parameters don't trigger BytesWarning with --setup-show."""
+    p = testdir.makepyfile(
+        """
+        import pytest
+        
+        @pytest.mark.parametrize('data', [b'Hello World', b'\\x00\\x01'])
+        def test_data(data):
+            pass
+    """
+    )
+
+    # Run with BytesWarning enabled to ensure no warning is triggered
+    result = testdir.runpytest("--setup-show", "-W", "error::BytesWarning", p)
+    assert result.ret == 0
+    # Just check that the bytes parameters are displayed and no BytesWarning occurred
+    assert "data[b" in result.stdout.str()
+    assert "Hello World" in result.stdout.str()
