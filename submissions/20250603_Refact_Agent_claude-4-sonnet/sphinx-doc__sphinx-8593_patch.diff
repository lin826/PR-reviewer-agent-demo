diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py
index 76265f5be..d1a99004b 100644
--- a/sphinx/ext/autodoc/__init__.py
+++ b/sphinx/ext/autodoc/__init__.py
@@ -757,6 +757,18 @@ class Documenter:
                 else:
                     keep = False
             elif (namespace, membername) in attr_docs:
+                # Check for :meta public: in attribute documentation
+                attr_doc_lines = attr_docs[(namespace, membername)]
+                attr_doc = '\n'.join(attr_doc_lines) if attr_doc_lines else ''
+                attr_metadata = extract_metadata(attr_doc)
+                
+                # Override isprivate if :meta public: is found in attribute docs
+                if 'public' in attr_metadata:
+                    isprivate = False
+                elif 'private' in attr_metadata:
+                    isprivate = True
+                # else keep the original isprivate value based on name
+                
                 if want_all and isprivate:
                     if self.options.private_members is None:
                         keep = False
diff --git a/tests/roots/test-ext-autodoc/target/private.py b/tests/roots/test-ext-autodoc/target/private.py
index a39ce085e..339a7d8cb 100644
--- a/tests/roots/test-ext-autodoc/target/private.py
+++ b/tests/roots/test-ext-autodoc/target/private.py
@@ -9,3 +9,5 @@ def _public_function(name):
 
     :meta public:
     """
+
+_public_variable = None  #: :meta public:
diff --git a/tests/test_ext_autodoc_private_members.py b/tests/test_ext_autodoc_private_members.py
index 6bce5ce78..43b366283 100644
--- a/tests/test_ext_autodoc_private_members.py
+++ b/tests/test_ext_autodoc_private_members.py
@@ -30,6 +30,13 @@ def test_private_field(app):
         '',
         '   :meta public:',
         '',
+        '',
+        '.. py:data:: _public_variable',
+        '   :module: target.private',
+        '   :value: None',
+        '',
+        '   :meta public:',
+        '',
     ]
 
 
@@ -52,6 +59,13 @@ def test_private_field_and_private_members(app):
         '   :meta public:',
         '',
         '',
+        '.. py:data:: _public_variable',
+        '   :module: target.private',
+        '   :value: None',
+        '',
+        '   :meta public:',
+        '',
+        '',
         '.. py:function:: private_function(name)',
         '   :module: target.private',
         '',
@@ -80,4 +94,38 @@ def test_private_members(app):
         '',
         '   :meta public:',
         '',
+        '',
+        '.. py:data:: _public_variable',
+        '   :module: target.private',
+        '   :value: None',
+        '',
+        '   :meta public:',
+        '',
+    ]
+
+
+@pytest.mark.sphinx('html', testroot='ext-autodoc')
+def test_private_variable_with_meta_public(app):
+    app.config.autoclass_content = 'class'
+    options = {"members": None}
+    actual = do_autodoc(app, 'module', 'target.private', options)
+    assert list(actual) == [
+        '',
+        '.. py:module:: target.private',
+        '',
+        '',
+        '.. py:function:: _public_function(name)',
+        '   :module: target.private',
+        '',
+        '   public_function is a docstring().',
+        '',
+        '   :meta public:',
+        '',
+        '',
+        '.. py:data:: _public_variable',
+        '   :module: target.private',
+        '   :value: None',
+        '',
+        '   :meta public:',
+        '',
     ]
