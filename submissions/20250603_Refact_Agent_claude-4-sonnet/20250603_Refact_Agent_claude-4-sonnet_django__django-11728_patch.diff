diff --git a/django/contrib/admindocs/utils.py b/django/contrib/admindocs/utils.py
index 1ce4594501..6d79c5a437 100644
--- a/django/contrib/admindocs/utils.py
+++ b/django/contrib/admindocs/utils.py
@@ -167,18 +167,18 @@ def replace_named_groups(pattern):
         # Handle nested parentheses, e.g. '^(?P<a>(x|y))/b'.
         unmatched_open_brackets, prev_char = 1, None
         for idx, val in enumerate(pattern[end:]):
-            # If brackets are balanced, the end of the string for the current
-            # named capture group pattern has been reached.
-            if unmatched_open_brackets == 0:
-                group_pattern_and_name.append((pattern[start:end + idx], group_name))
-                break
-
             # Check for unescaped `(` and `)`. They mark the start and end of a
             # nested group.
             if val == '(' and prev_char != '\\':
                 unmatched_open_brackets += 1
             elif val == ')' and prev_char != '\\':
                 unmatched_open_brackets -= 1
+            
+            # If brackets are balanced, the end of the string for the current
+            # named capture group pattern has been reached.
+            if unmatched_open_brackets == 0:
+                group_pattern_and_name.append((pattern[start:end + idx + 1], group_name))
+                break
             prev_char = val
 
     # Replace the string for named capture groups with their group names.
diff --git a/tests/admin_docs/test_views.py b/tests/admin_docs/test_views.py
index 144517ab0a..fb863824a5 100644
--- a/tests/admin_docs/test_views.py
+++ b/tests/admin_docs/test_views.py
@@ -3,6 +3,7 @@ import unittest
 
 from django.conf import settings
 from django.contrib.admindocs import utils, views
+from django.contrib.admindocs.utils import replace_named_groups
 from django.contrib.admindocs.views import get_return_data_type, simplify_regex
 from django.contrib.sites.models import Site
 from django.db import models
@@ -354,7 +355,40 @@ class AdminDocViewFunctionsTests(SimpleTestCase):
             (r'^(?P<a>(x|y))/b/(?P<c>\w+)ab', '/<a>/b/<c>ab'),
             (r'^(?P<a>(x|y)(\(|\)))/b/(?P<c>\w+)ab', '/<a>/b/<c>ab'),
             (r'^a/?$', '/a/'),
+            # Test cases for issue with trailing named groups (GitHub issue)
+            (r'entries/(?P<pk>[^/.]+)/relationships/(?P<related_field>\w+)', '/entries/<pk>/relationships/<related_field>'),
+            (r'(?P<single>\w+)', '/<single>'),
+            (r'(?P<first>\w+)/(?P<second>\w+)', '/<first>/<second>'),
+            (r'(?P<nested>(a|b))', '/<nested>'),
+            (r'(?P<complex>[^/.]+)', '/<complex>'),
         )
         for pattern, output in tests:
             with self.subTest(pattern=pattern):
                 self.assertEqual(simplify_regex(pattern), output)
+
+    def test_replace_named_groups(self):
+        """
+        Test replace_named_groups function, especially for trailing groups.
+        This tests the fix for the issue where named groups at the end of
+        patterns were not being replaced.
+        """
+        tests = (
+            # Basic cases
+            (r'^(?P<a>\w+)/b/(?P<c>\w+)/$', '^<a>/b/<c>/$'),
+            (r'^(?P<a>\w+)/b/(?P<c>\w+)$', '^<a>/b/<c>$'),
+            # The problematic case from the GitHub issue
+            (r'entries/(?P<pk>[^/.]+)/relationships/(?P<related_field>\w+)', 'entries/<pk>/relationships/<related_field>'),
+            # Edge cases with trailing groups
+            (r'(?P<single>\w+)', '<single>'),
+            (r'(?P<first>\w+)/(?P<second>\w+)', '<first>/<second>'),
+            (r'(?P<nested>(a|b))', '<nested>'),
+            (r'(?P<complex>[^/.]+)', '<complex>'),
+            # Nested parentheses
+            (r'^(?P<a>(x|y))/b/(?P<c>\w+)$', '^<a>/b/<c>$'),
+            (r'^(?P<a>(x|y))/b/(?P<c>\w+)ab', '^<a>/b/<c>ab'),
+            (r'^(?P<a>(x|y)(\(|\)))/b/(?P<c>\w+)ab', '^<a>/b/<c>ab'),
+        )
+        for pattern, expected in tests:
+            with self.subTest(pattern=pattern):
+                result = replace_named_groups(pattern)
+                self.assertEqual(result, expected)
