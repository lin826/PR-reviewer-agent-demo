diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py
index 6629a1fd51..a024f12ba7 100644
--- a/django/db/models/sql/query.py
+++ b/django/db/models/sql/query.py
@@ -1177,6 +1177,15 @@ class Query(BaseExpression):
                 return
 
         lookup = lookup_class(lhs, rhs)
+
+        # If this is an __in lookup against a subquery, prune that subquery
+        # to a single-column (the PK) *before* the compiler ever grabs default_cols.
+        # This prevents multi-column SUBSELECTs (which Postgres rejects).
+        from django.db.models.lookups import In
+        if lookup_name == 'in' and isinstance(rhs, Query) and not rhs.has_select_fields:
+            rhs.clear_select_clause()
+            rhs.add_fields(['pk'])
+
         # Interpret '__exact=None' as the sql 'is NULL'; otherwise, reject all
         # uses of None as a query value unless the lookup supports it.
         if lookup.rhs is None and not lookup.can_use_none_as_rhs:
