diff --git a/xarray/core/computation.py b/xarray/core/computation.py
index 3f7e8f74..5b16d811 100644
--- a/xarray/core/computation.py
+++ b/xarray/core/computation.py
@@ -1857,13 +1857,22 @@ def where(cond, x, y, keep_attrs=None):
     """
     if keep_attrs is None:
         keep_attrs = _get_keep_attrs(default=False)
+    
+    # Save coordinate attributes from all inputs to restore them later
+    coord_attrs = {}
+    for obj in (cond, x, y):
+        if hasattr(obj, 'coords'):
+            for name, coord in obj.coords.items():
+                if name not in coord_attrs and hasattr(coord, 'attrs'):
+                    coord_attrs[name] = coord.attrs.copy()
+    
     if keep_attrs is True:
         # keep the attributes of x, the second parameter, by default to
         # be consistent with the `where` method of `DataArray` and `Dataset`
         keep_attrs = lambda attrs, context: getattr(x, "attrs", {})
 
     # alignment for three arguments is complicated, so don't support it yet
-    return apply_ufunc(
+    result = apply_ufunc(
         duck_array_ops.where,
         cond,
         x,
@@ -1873,6 +1882,14 @@ def where(cond, x, y, keep_attrs=None):
         dask="allowed",
         keep_attrs=keep_attrs,
     )
+    
+    # Restore coordinate attributes if keep_attrs is not None
+    if keep_attrs is not None and hasattr(result, 'coords'):
+        for name, attrs in coord_attrs.items():
+            if name in result.coords:
+                result.coords[name].attrs = attrs
+    
+    return result
 
 
 @overload
