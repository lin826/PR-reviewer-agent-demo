diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py
index 967a91fdc8..9c8875cda2 100644
--- a/django/db/migrations/operations/models.py
+++ b/django/db/migrations/operations/models.py
@@ -860,6 +860,17 @@ class AddIndex(IndexOperation):
     @property
     def migration_name_fragment(self):
         return "%s_%s" % (self.model_name_lower, self.index.name.lower())
+        
+    def reduce(self, operation, app_label):
+        # If this operation is followed by a RemoveIndex operation
+        # targeting the same index, they can be optimized away
+        if (
+            isinstance(operation, RemoveIndex) and
+            self.model_name_lower == operation.model_name_lower and
+            self.index.name.lower() == operation.name.lower()
+        ):
+            return []
+        return super().reduce(operation, app_label)
 
 
 class RemoveIndex(IndexOperation):
@@ -903,6 +914,13 @@ class RemoveIndex(IndexOperation):
     @property
     def migration_name_fragment(self):
         return "remove_%s_%s" % (self.model_name_lower, self.name.lower())
+        
+    def reduce(self, operation, app_label):
+        # If this operation is preceded by an AddIndex operation
+        # targeting the same index, they can be optimized away.
+        # This is handled in AddIndex.reduce(), so we don't need to
+        # implement the same logic here.
+        return super().reduce(operation, app_label)
 
 
 class RenameIndex(IndexOperation):
