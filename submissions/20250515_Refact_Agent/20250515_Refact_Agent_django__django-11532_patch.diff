diff --git a/django/core/mail/utils.py b/django/core/mail/utils.py
index d18dfe4667..5d91a374a3 100644
--- a/django/core/mail/utils.py
+++ b/django/core/mail/utils.py
@@ -8,12 +8,33 @@ import socket
 # Cache the hostname, but do it lazily: socket.getfqdn() can take a couple of
 # seconds, which slows down the restart of the server.
 class CachedDnsName:
+    """
+    Lazily cache the machine's fully-qualified domain name (FQDN).
+
+    If the FQDN contains non-ASCII characters, convert every label to its
+    IDNA / Punycode form so that it is always safe to insert into headers that
+    must contain a plain "dot-atom" (RFC 5322) domain name such as
+    Message-ID, Sender, etc.
+    """
     def __str__(self):
         return self.get_fqdn()
 
     def get_fqdn(self):
         if not hasattr(self, '_fqdn'):
-            self._fqdn = socket.getfqdn()
+            # socket.getfqdn() may return Unicode on modern OSes.
+            fqdn = socket.getfqdn()
+
+            # RFC 5322 requires pure ASCII in the domain part of Message-ID.
+            try:
+                fqdn.encode('ascii')
+            except UnicodeEncodeError:
+                try:
+                    # .encode('idna') is in the stdlib â€“ no external dep.
+                    fqdn = fqdn.encode('idna').decode('ascii')
+                except UnicodeError:
+                    # As a last resort fall back to a safe literal.
+                    fqdn = 'localhost'
+            self._fqdn = fqdn
         return self._fqdn
 
 
