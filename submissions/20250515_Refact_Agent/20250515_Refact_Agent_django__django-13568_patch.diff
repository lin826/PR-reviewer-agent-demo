diff --git a/django/contrib/auth/checks.py b/django/contrib/auth/checks.py
index 65fc266f7e..a18a8f42fe 100644
--- a/django/contrib/auth/checks.py
+++ b/django/contrib/auth/checks.py
@@ -52,7 +52,16 @@ def check_user_model(app_configs=None, **kwargs):
         )
 
     # Check that the username field is unique
-    if not cls._meta.get_field(cls.USERNAME_FIELD).unique:
+    username_field = cls._meta.get_field(cls.USERNAME_FIELD)
+    
+    # Check if the field has a UniqueConstraint in the model's constraints
+    has_unique_constraint = False
+    for constraint in cls._meta.total_unique_constraints:
+        if len(constraint.fields) == 1 and constraint.fields[0] == cls.USERNAME_FIELD:
+            has_unique_constraint = True
+            break
+    
+    if not username_field.unique and not has_unique_constraint:
         if (settings.AUTHENTICATION_BACKENDS ==
                 ['django.contrib.auth.backends.ModelBackend']):
             errors.append(
diff --git a/tests/auth_tests/models/__init__.py b/tests/auth_tests/models/__init__.py
index 003d8eeaa7..5b998a025f 100644
--- a/tests/auth_tests/models/__init__.py
+++ b/tests/auth_tests/models/__init__.py
@@ -14,11 +14,12 @@ from .with_last_login_attr import UserWithDisabledLastLoginField
 from .with_many_to_many import (
     CustomUserWithM2M, CustomUserWithM2MThrough, Organization,
 )
+from .with_unique_constraint import CustomUserWithUniqueConstraint
 
 __all__ = (
     'CustomPermissionsUser', 'CustomUser', 'CustomUserNonUniqueUsername',
     'CustomUserWithFK', 'CustomUserWithM2M', 'CustomUserWithM2MThrough',
-    'CustomUserWithoutIsActiveField', 'Email', 'ExtensionUser',
+    'CustomUserWithoutIsActiveField', 'CustomUserWithUniqueConstraint', 'Email', 'ExtensionUser',
     'IntegerUsernameUser', 'IsActiveTestUser1', 'MinimalUser',
     'NoPasswordUser', 'Organization', 'Proxy', 'UUIDUser', 'UserProxy',
     'UserWithDisabledLastLoginField',
diff --git a/tests/auth_tests/test_checks.py b/tests/auth_tests/test_checks.py
index cfaa4063f8..f03edab6ac 100644
--- a/tests/auth_tests/test_checks.py
+++ b/tests/auth_tests/test_checks.py
@@ -9,7 +9,7 @@ from django.test import (
 )
 from django.test.utils import isolate_apps
 
-from .models import CustomUserNonUniqueUsername
+from .models import CustomUserNonUniqueUsername, CustomUserWithUniqueConstraint
 
 
 @isolate_apps('auth_tests', attr_name='apps')
@@ -84,6 +84,15 @@ class UserModelChecksTests(SimpleTestCase):
                     id='auth.W004',
                 ),
             ])
+            
+    @override_settings(AUTH_USER_MODEL='auth_tests.CustomUserWithUniqueConstraint')
+    def test_username_unique_constraint(self):
+        """
+        A USERNAME_FIELD with a UniqueConstraint instead of unique=True
+        should not raise an error.
+        """
+        errors = checks.run_checks()
+        self.assertEqual(errors, [])
 
     @override_settings(AUTH_USER_MODEL='auth_tests.BadUser')
     def test_is_anonymous_authenticated_methods(self):
