diff --git a/django/db/models/base.py b/django/db/models/base.py
index e3b14a41a0..fb91787610 100644
--- a/django/db/models/base.py
+++ b/django/db/models/base.py
@@ -839,6 +839,11 @@ class Model(metaclass=ModelBase):
             non_pks = [f for f in non_pks
                        if f.name in update_fields or f.attname in update_fields]
 
+        # Remember if the caller explicitly supplied a primary-key value.
+        # (We must do this *before* possibly populating it with the
+        #  field's default in get_pk_value_on_save().)
+        explicit_pk_set = self._get_pk_val(meta) is not None
+        
         pk_val = self._get_pk_val(meta)
         if pk_val is None:
             pk_val = meta.pk.get_pk_value_on_save(self)
@@ -847,10 +852,13 @@ class Model(metaclass=ModelBase):
         if not pk_set and (force_update or update_fields):
             raise ValueError("Cannot force an update in save() with no primary key.")
         updated = False
-        # Skip an UPDATE when adding an instance and primary key has a default.
+        # Skip an UPDATE only when *no explicit pk was supplied* and the
+        # primary-key field provides its own default. This preserves the
+        # Django â‰¤2.2 behaviour where an explicit pk triggers UPDATE first.
         if (
             not force_insert and
             self._state.adding and
+            not explicit_pk_set and
             self._meta.pk.default and
             self._meta.pk.default is not NOT_PROVIDED
         ):
